<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1158" onload="init(evt)" viewBox="0 0 1200 1158" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1158" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1141.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1141.00"> </text><svg id="frames" x="10" width="1180" total_samples="10195"><g><title>__GI___libc_malloc (3 samples, 0.03%)</title><rect x="0.0098%" y="1061" width="0.0294%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="3"/><text x="0.2598%" y="1071.50"></text></g><g><title>advent_uniq::Counter&lt;T&gt;::inc (3 samples, 0.03%)</title><rect x="0.0589%" y="1061" width="0.0294%" height="15" fill="rgb(217,0,24)" fg:x="6" fg:w="3"/><text x="0.3089%" y="1071.50"></text></g><g><title>flume::Receiver&lt;T&gt;::recv (3 samples, 0.03%)</title><rect x="0.0981%" y="1061" width="0.0294%" height="15" fill="rgb(221,193,54)" fg:x="10" fg:w="3"/><text x="0.3481%" y="1071.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.04%)</title><rect x="0.1275%" y="1061" width="0.0392%" height="15" fill="rgb(248,212,6)" fg:x="13" fg:w="4"/><text x="0.3775%" y="1071.50"></text></g><g><title>[[heap]] (21 samples, 0.21%)</title><rect x="0.0000%" y="1077" width="0.2060%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="21"/><text x="0.2500%" y="1087.50"></text></g><g><title>syscall (4 samples, 0.04%)</title><rect x="0.1667%" y="1061" width="0.0392%" height="15" fill="rgb(232,128,0)" fg:x="17" fg:w="4"/><text x="0.4167%" y="1071.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="0.2256%" y="1061" width="0.0294%" height="15" fill="rgb(207,160,47)" fg:x="23" fg:w="3"/><text x="0.4756%" y="1071.50"></text></g><g><title>[advent-uniq] (6 samples, 0.06%)</title><rect x="0.2060%" y="1077" width="0.0589%" height="15" fill="rgb(228,23,34)" fg:x="21" fg:w="6"/><text x="0.4560%" y="1087.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (6 samples, 0.06%)</title><rect x="0.2648%" y="1061" width="0.0589%" height="15" fill="rgb(218,30,26)" fg:x="27" fg:w="6"/><text x="0.5148%" y="1071.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.03%)</title><rect x="0.2943%" y="1045" width="0.0294%" height="15" fill="rgb(220,122,19)" fg:x="30" fg:w="3"/><text x="0.5443%" y="1055.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.03%)</title><rect x="0.2943%" y="1029" width="0.0294%" height="15" fill="rgb(250,228,42)" fg:x="30" fg:w="3"/><text x="0.5443%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.03%)</title><rect x="0.2943%" y="1013" width="0.0294%" height="15" fill="rgb(240,193,28)" fg:x="30" fg:w="3"/><text x="0.5443%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.03%)</title><rect x="0.2943%" y="997" width="0.0294%" height="15" fill="rgb(216,20,37)" fg:x="30" fg:w="3"/><text x="0.5443%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.03%)</title><rect x="0.2943%" y="981" width="0.0294%" height="15" fill="rgb(206,188,39)" fg:x="30" fg:w="3"/><text x="0.5443%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="0.3041%" y="965" width="0.0196%" height="15" fill="rgb(217,207,13)" fg:x="31" fg:w="2"/><text x="0.5541%" y="975.50"></text></g><g><title>&lt;flume::signal::SyncSignal as flume::signal::Signal&gt;::fire (3 samples, 0.03%)</title><rect x="0.3237%" y="1061" width="0.0294%" height="15" fill="rgb(231,73,38)" fg:x="33" fg:w="3"/><text x="0.5737%" y="1071.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (7 samples, 0.07%)</title><rect x="0.3531%" y="1061" width="0.0687%" height="15" fill="rgb(225,20,46)" fg:x="36" fg:w="7"/><text x="0.6031%" y="1071.50"></text></g><g><title>std::sys::unix::fs::File::write (4 samples, 0.04%)</title><rect x="0.3825%" y="1045" width="0.0392%" height="15" fill="rgb(210,31,41)" fg:x="39" fg:w="4"/><text x="0.6325%" y="1055.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (4 samples, 0.04%)</title><rect x="0.3825%" y="1029" width="0.0392%" height="15" fill="rgb(221,200,47)" fg:x="39" fg:w="4"/><text x="0.6325%" y="1039.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.02%)</title><rect x="0.4316%" y="1061" width="0.0196%" height="15" fill="rgb(226,26,5)" fg:x="44" fg:w="2"/><text x="0.6816%" y="1071.50"></text></g><g><title>__GI___pthread_rwlock_wrlock (4 samples, 0.04%)</title><rect x="0.4512%" y="1061" width="0.0392%" height="15" fill="rgb(249,33,26)" fg:x="46" fg:w="4"/><text x="0.7012%" y="1071.50"></text></g><g><title>__libc_recv (8 samples, 0.08%)</title><rect x="0.4904%" y="1061" width="0.0785%" height="15" fill="rgb(235,183,28)" fg:x="50" fg:w="8"/><text x="0.7404%" y="1071.50"></text></g><g><title>__libc_recv (8 samples, 0.08%)</title><rect x="0.4904%" y="1045" width="0.0785%" height="15" fill="rgb(221,5,38)" fg:x="50" fg:w="8"/><text x="0.7404%" y="1055.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="0.5101%" y="1029" width="0.0589%" height="15" fill="rgb(247,18,42)" fg:x="52" fg:w="6"/><text x="0.7601%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="0.5885%" y="1061" width="0.0196%" height="15" fill="rgb(241,131,45)" fg:x="60" fg:w="2"/><text x="0.8385%" y="1071.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="0.6081%" y="1061" width="0.0196%" height="15" fill="rgb(249,31,29)" fg:x="62" fg:w="2"/><text x="0.8581%" y="1071.50"></text></g><g><title>core::fmt::Formatter::pad_integral (2 samples, 0.02%)</title><rect x="0.6278%" y="1061" width="0.0196%" height="15" fill="rgb(225,111,53)" fg:x="64" fg:w="2"/><text x="0.8778%" y="1071.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u64&gt;::from_str (2 samples, 0.02%)</title><rect x="0.6572%" y="1061" width="0.0196%" height="15" fill="rgb(238,160,17)" fg:x="67" fg:w="2"/><text x="0.9072%" y="1071.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (4 samples, 0.04%)</title><rect x="0.6768%" y="1061" width="0.0392%" height="15" fill="rgb(214,148,48)" fg:x="69" fg:w="4"/><text x="0.9268%" y="1071.50"></text></g><g><title>flume::Sender&lt;T&gt;::send (17 samples, 0.17%)</title><rect x="0.7160%" y="1061" width="0.1667%" height="15" fill="rgb(232,36,49)" fg:x="73" fg:w="17"/><text x="0.9660%" y="1071.50"></text></g><g><title>std::io::append_to_string (25 samples, 0.25%)</title><rect x="0.8926%" y="1061" width="0.2452%" height="15" fill="rgb(209,103,24)" fg:x="91" fg:w="25"/><text x="1.1426%" y="1071.50"></text></g><g><title>[anon] (97 samples, 0.95%)</title><rect x="0.2648%" y="1077" width="0.9514%" height="15" fill="rgb(229,88,8)" fg:x="27" fg:w="97"/><text x="0.5148%" y="1087.50"></text></g><g><title>std::sys::unix::memchr::memchr (8 samples, 0.08%)</title><rect x="1.1378%" y="1061" width="0.0785%" height="15" fill="rgb(213,181,19)" fg:x="116" fg:w="8"/><text x="1.3878%" y="1071.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="1.4811%" y="1061" width="0.0196%" height="15" fill="rgb(254,191,54)" fg:x="151" fg:w="2"/><text x="1.7311%" y="1071.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="1.5105%" y="1061" width="0.0294%" height="15" fill="rgb(241,83,37)" fg:x="154" fg:w="3"/><text x="1.7605%" y="1071.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="1.5105%" y="1045" width="0.0294%" height="15" fill="rgb(233,36,39)" fg:x="154" fg:w="3"/><text x="1.7605%" y="1055.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="1.5105%" y="1029" width="0.0294%" height="15" fill="rgb(226,3,54)" fg:x="154" fg:w="3"/><text x="1.7605%" y="1039.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="1.5105%" y="1013" width="0.0294%" height="15" fill="rgb(245,192,40)" fg:x="154" fg:w="3"/><text x="1.7605%" y="1023.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="1.5105%" y="997" width="0.0294%" height="15" fill="rgb(238,167,29)" fg:x="154" fg:w="3"/><text x="1.7605%" y="1007.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="1.5105%" y="981" width="0.0294%" height="15" fill="rgb(232,182,51)" fg:x="154" fg:w="3"/><text x="1.7605%" y="991.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="1.5105%" y="965" width="0.0294%" height="15" fill="rgb(231,60,39)" fg:x="154" fg:w="3"/><text x="1.7605%" y="975.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="1.5105%" y="949" width="0.0294%" height="15" fill="rgb(208,69,12)" fg:x="154" fg:w="3"/><text x="1.7605%" y="959.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="1.5204%" y="933" width="0.0196%" height="15" fill="rgb(235,93,37)" fg:x="155" fg:w="2"/><text x="1.7704%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="1.5204%" y="917" width="0.0196%" height="15" fill="rgb(213,116,39)" fg:x="155" fg:w="2"/><text x="1.7704%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="1.5204%" y="901" width="0.0196%" height="15" fill="rgb(222,207,29)" fg:x="155" fg:w="2"/><text x="1.7704%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="1.5204%" y="885" width="0.0196%" height="15" fill="rgb(206,96,30)" fg:x="155" fg:w="2"/><text x="1.7704%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="1.5204%" y="869" width="0.0196%" height="15" fill="rgb(218,138,4)" fg:x="155" fg:w="2"/><text x="1.7704%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="1.5204%" y="853" width="0.0196%" height="15" fill="rgb(250,191,14)" fg:x="155" fg:w="2"/><text x="1.7704%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="1.5204%" y="837" width="0.0196%" height="15" fill="rgb(239,60,40)" fg:x="155" fg:w="2"/><text x="1.7704%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="1.5204%" y="821" width="0.0196%" height="15" fill="rgb(206,27,48)" fg:x="155" fg:w="2"/><text x="1.7704%" y="831.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.03%)</title><rect x="1.5498%" y="1061" width="0.0294%" height="15" fill="rgb(225,35,8)" fg:x="158" fg:w="3"/><text x="1.7998%" y="1071.50"></text></g><g><title>__GI___pthread_rwlock_wrlock (6 samples, 0.06%)</title><rect x="1.5792%" y="1061" width="0.0589%" height="15" fill="rgb(250,213,24)" fg:x="161" fg:w="6"/><text x="1.8292%" y="1071.50"></text></g><g><title>__rdl_realloc (2 samples, 0.02%)</title><rect x="1.6577%" y="1061" width="0.0196%" height="15" fill="rgb(247,123,22)" fg:x="169" fg:w="2"/><text x="1.9077%" y="1071.50"></text></g><g><title>_int_realloc (2 samples, 0.02%)</title><rect x="1.6773%" y="1061" width="0.0196%" height="15" fill="rgb(231,138,38)" fg:x="171" fg:w="2"/><text x="1.9273%" y="1071.50"></text></g><g><title>advent_uniq::Counter&lt;T&gt;::inc (9 samples, 0.09%)</title><rect x="1.6969%" y="1061" width="0.0883%" height="15" fill="rgb(231,145,46)" fg:x="173" fg:w="9"/><text x="1.9469%" y="1071.50"></text></g><g><title>advent_uniq::handle_client (4 samples, 0.04%)</title><rect x="1.7852%" y="1061" width="0.0392%" height="15" fill="rgb(251,118,11)" fg:x="182" fg:w="4"/><text x="2.0352%" y="1071.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.02%)</title><rect x="1.8342%" y="1061" width="0.0196%" height="15" fill="rgb(217,147,25)" fg:x="187" fg:w="2"/><text x="2.0842%" y="1071.50"></text></g><g><title>core::fmt::write (2 samples, 0.02%)</title><rect x="1.8538%" y="1061" width="0.0196%" height="15" fill="rgb(247,81,37)" fg:x="189" fg:w="2"/><text x="2.1038%" y="1071.50"></text></g><g><title>core::str::converts::from_utf8 (3 samples, 0.03%)</title><rect x="1.8735%" y="1061" width="0.0294%" height="15" fill="rgb(209,12,38)" fg:x="191" fg:w="3"/><text x="2.1235%" y="1071.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (3 samples, 0.03%)</title><rect x="1.9029%" y="1061" width="0.0294%" height="15" fill="rgb(227,1,9)" fg:x="194" fg:w="3"/><text x="2.1529%" y="1071.50"></text></g><g><title>flume::Receiver&lt;T&gt;::recv (6 samples, 0.06%)</title><rect x="1.9323%" y="1061" width="0.0589%" height="15" fill="rgb(248,47,43)" fg:x="197" fg:w="6"/><text x="2.1823%" y="1071.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7 samples, 0.07%)</title><rect x="2.0206%" y="1061" width="0.0687%" height="15" fill="rgb(221,10,30)" fg:x="206" fg:w="7"/><text x="2.2706%" y="1071.50"></text></g><g><title>[unknown] (94 samples, 0.92%)</title><rect x="1.2163%" y="1077" width="0.9220%" height="15" fill="rgb(210,229,1)" fg:x="124" fg:w="94"/><text x="1.4663%" y="1087.50"></text></g><g><title>syscall (5 samples, 0.05%)</title><rect x="2.0893%" y="1061" width="0.0490%" height="15" fill="rgb(222,148,37)" fg:x="213" fg:w="5"/><text x="2.3393%" y="1071.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="2.0893%" y="1045" width="0.0490%" height="15" fill="rgb(234,67,33)" fg:x="213" fg:w="5"/><text x="2.3393%" y="1055.50"></text></g><g><title>[unknown] (22 samples, 0.22%)</title><rect x="2.1383%" y="1061" width="0.2158%" height="15" fill="rgb(247,98,35)" fg:x="218" fg:w="22"/><text x="2.3883%" y="1071.50"></text></g><g><title>[unknown] (22 samples, 0.22%)</title><rect x="2.1383%" y="1045" width="0.2158%" height="15" fill="rgb(247,138,52)" fg:x="218" fg:w="22"/><text x="2.3883%" y="1055.50"></text></g><g><title>[unknown] (22 samples, 0.22%)</title><rect x="2.1383%" y="1029" width="0.2158%" height="15" fill="rgb(213,79,30)" fg:x="218" fg:w="22"/><text x="2.3883%" y="1039.50"></text></g><g><title>[unknown] (22 samples, 0.22%)</title><rect x="2.1383%" y="1013" width="0.2158%" height="15" fill="rgb(246,177,23)" fg:x="218" fg:w="22"/><text x="2.3883%" y="1023.50"></text></g><g><title>[unknown] (20 samples, 0.20%)</title><rect x="2.1579%" y="997" width="0.1962%" height="15" fill="rgb(230,62,27)" fg:x="220" fg:w="20"/><text x="2.4079%" y="1007.50"></text></g><g><title>[unknown] (20 samples, 0.20%)</title><rect x="2.1579%" y="981" width="0.1962%" height="15" fill="rgb(216,154,8)" fg:x="220" fg:w="20"/><text x="2.4079%" y="991.50"></text></g><g><title>[unknown] (20 samples, 0.20%)</title><rect x="2.1579%" y="965" width="0.1962%" height="15" fill="rgb(244,35,45)" fg:x="220" fg:w="20"/><text x="2.4079%" y="975.50"></text></g><g><title>[unknown] (20 samples, 0.20%)</title><rect x="2.1579%" y="949" width="0.1962%" height="15" fill="rgb(251,115,12)" fg:x="220" fg:w="20"/><text x="2.4079%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.15%)</title><rect x="5.6989%" y="965" width="0.1471%" height="15" fill="rgb(240,54,50)" fg:x="581" fg:w="15"/><text x="5.9489%" y="975.50"></text></g><g><title>__GI___libc_free (14 samples, 0.14%)</title><rect x="5.8558%" y="965" width="0.1373%" height="15" fill="rgb(233,84,52)" fg:x="597" fg:w="14"/><text x="6.1058%" y="975.50"></text></g><g><title>__GI___pthread_rwlock_unlock (128 samples, 1.26%)</title><rect x="5.9931%" y="965" width="1.2555%" height="15" fill="rgb(207,117,47)" fg:x="611" fg:w="128"/><text x="6.2431%" y="975.50"></text></g><g><title>__pthread_rwlock_wrunlock (126 samples, 1.24%)</title><rect x="6.0128%" y="949" width="1.2359%" height="15" fill="rgb(249,43,39)" fg:x="613" fg:w="126"/><text x="6.2628%" y="959.50"></text></g><g><title>__pthread_rwlock_get_private (2 samples, 0.02%)</title><rect x="7.2290%" y="933" width="0.0196%" height="15" fill="rgb(209,38,44)" fg:x="737" fg:w="2"/><text x="7.4790%" y="943.50"></text></g><g><title>__rdl_dealloc (4 samples, 0.04%)</title><rect x="7.2487%" y="965" width="0.0392%" height="15" fill="rgb(236,212,23)" fg:x="739" fg:w="4"/><text x="7.4987%" y="975.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (4 samples, 0.04%)</title><rect x="7.2487%" y="949" width="0.0392%" height="15" fill="rgb(242,79,21)" fg:x="739" fg:w="4"/><text x="7.4987%" y="959.50"></text></g><g><title>_int_free (10 samples, 0.10%)</title><rect x="7.2977%" y="965" width="0.0981%" height="15" fill="rgb(211,96,35)" fg:x="744" fg:w="10"/><text x="7.5477%" y="975.50"></text></g><g><title>tcache_put (2 samples, 0.02%)</title><rect x="7.3762%" y="949" width="0.0196%" height="15" fill="rgb(253,215,40)" fg:x="752" fg:w="2"/><text x="7.6262%" y="959.50"></text></g><g><title>advent_uniq::Counter&lt;T&gt;::inc (145 samples, 1.42%)</title><rect x="7.3958%" y="965" width="1.4223%" height="15" fill="rgb(211,81,21)" fg:x="754" fg:w="145"/><text x="7.6458%" y="975.50"></text></g><g><title>__GI___pthread_rwlock_wrlock (131 samples, 1.28%)</title><rect x="7.5331%" y="949" width="1.2849%" height="15" fill="rgb(208,190,38)" fg:x="768" fg:w="131"/><text x="7.7831%" y="959.50"></text></g><g><title>__pthread_rwlock_wrlock_full (129 samples, 1.27%)</title><rect x="7.5527%" y="933" width="1.2653%" height="15" fill="rgb(235,213,38)" fg:x="770" fg:w="129"/><text x="7.8027%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.7984%" y="917" width="0.0196%" height="15" fill="rgb(237,122,38)" fg:x="897" fg:w="2"/><text x="9.0484%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.7984%" y="901" width="0.0196%" height="15" fill="rgb(244,218,35)" fg:x="897" fg:w="2"/><text x="9.0484%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.7984%" y="885" width="0.0196%" height="15" fill="rgb(240,68,47)" fg:x="897" fg:w="2"/><text x="9.0484%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.7984%" y="869" width="0.0196%" height="15" fill="rgb(210,16,53)" fg:x="897" fg:w="2"/><text x="9.0484%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.7984%" y="853" width="0.0196%" height="15" fill="rgb(235,124,12)" fg:x="897" fg:w="2"/><text x="9.0484%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.7984%" y="837" width="0.0196%" height="15" fill="rgb(224,169,11)" fg:x="897" fg:w="2"/><text x="9.0484%" y="847.50"></text></g><g><title>&lt;u64 as core::num::FromStrRadixHelper&gt;::checked_mul (13 samples, 0.13%)</title><rect x="9.2496%" y="917" width="0.1275%" height="15" fill="rgb(250,166,2)" fg:x="943" fg:w="13"/><text x="9.4996%" y="927.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_mul (13 samples, 0.13%)</title><rect x="9.2496%" y="901" width="0.1275%" height="15" fill="rgb(242,216,29)" fg:x="943" fg:w="13"/><text x="9.4996%" y="911.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_mul (13 samples, 0.13%)</title><rect x="9.2496%" y="885" width="0.1275%" height="15" fill="rgb(230,116,27)" fg:x="943" fg:w="13"/><text x="9.4996%" y="895.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::to_digit (13 samples, 0.13%)</title><rect x="9.3771%" y="917" width="0.1275%" height="15" fill="rgb(228,99,48)" fg:x="956" fg:w="13"/><text x="9.6271%" y="927.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (8 samples, 0.08%)</title><rect x="9.4262%" y="901" width="0.0785%" height="15" fill="rgb(253,11,6)" fg:x="961" fg:w="8"/><text x="9.6762%" y="911.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u64&gt;::from_str (56 samples, 0.55%)</title><rect x="9.0044%" y="949" width="0.5493%" height="15" fill="rgb(247,143,39)" fg:x="918" fg:w="56"/><text x="9.2544%" y="959.50"></text></g><g><title>core::num::from_str_radix (56 samples, 0.55%)</title><rect x="9.0044%" y="933" width="0.5493%" height="15" fill="rgb(236,97,10)" fg:x="918" fg:w="56"/><text x="9.2544%" y="943.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_empty (5 samples, 0.05%)</title><rect x="9.5047%" y="917" width="0.0490%" height="15" fill="rgb(233,208,19)" fg:x="969" fg:w="5"/><text x="9.7547%" y="927.50"></text></g><g><title>&lt;flume::signal::SyncSignal as flume::signal::Signal&gt;::fire (484 samples, 4.75%)</title><rect x="10.7994%" y="933" width="4.7474%" height="15" fill="rgb(216,164,2)" fg:x="1101" fg:w="484"/><text x="11.0494%" y="943.50">&lt;flume..</text></g><g><title>syscall (479 samples, 4.70%)</title><rect x="10.8485%" y="917" width="4.6984%" height="15" fill="rgb(220,129,5)" fg:x="1106" fg:w="479"/><text x="11.0985%" y="927.50">sysca..</text></g><g><title>[unknown] (474 samples, 4.65%)</title><rect x="10.8975%" y="901" width="4.6493%" height="15" fill="rgb(242,17,10)" fg:x="1111" fg:w="474"/><text x="11.1475%" y="911.50">[unkn..</text></g><g><title>[unknown] (462 samples, 4.53%)</title><rect x="11.0152%" y="885" width="4.5316%" height="15" fill="rgb(242,107,0)" fg:x="1123" fg:w="462"/><text x="11.2652%" y="895.50">[unkn..</text></g><g><title>[unknown] (459 samples, 4.50%)</title><rect x="11.0446%" y="869" width="4.5022%" height="15" fill="rgb(251,28,31)" fg:x="1126" fg:w="459"/><text x="11.2946%" y="879.50">[unkn..</text></g><g><title>[unknown] (456 samples, 4.47%)</title><rect x="11.0741%" y="853" width="4.4728%" height="15" fill="rgb(233,223,10)" fg:x="1129" fg:w="456"/><text x="11.3241%" y="863.50">[unkn..</text></g><g><title>[unknown] (455 samples, 4.46%)</title><rect x="11.0839%" y="837" width="4.4630%" height="15" fill="rgb(215,21,27)" fg:x="1130" fg:w="455"/><text x="11.3339%" y="847.50">[unkn..</text></g><g><title>[unknown] (421 samples, 4.13%)</title><rect x="11.4174%" y="821" width="4.1295%" height="15" fill="rgb(232,23,21)" fg:x="1164" fg:w="421"/><text x="11.6674%" y="831.50">[unk..</text></g><g><title>[unknown] (398 samples, 3.90%)</title><rect x="11.6430%" y="805" width="3.9039%" height="15" fill="rgb(244,5,23)" fg:x="1187" fg:w="398"/><text x="11.8930%" y="815.50">[unk..</text></g><g><title>[unknown] (306 samples, 3.00%)</title><rect x="12.5454%" y="789" width="3.0015%" height="15" fill="rgb(226,81,46)" fg:x="1279" fg:w="306"/><text x="12.7954%" y="799.50">[un..</text></g><g><title>[unknown] (257 samples, 2.52%)</title><rect x="13.0260%" y="773" width="2.5208%" height="15" fill="rgb(247,70,30)" fg:x="1328" fg:w="257"/><text x="13.2760%" y="783.50">[u..</text></g><g><title>[unknown] (223 samples, 2.19%)</title><rect x="13.3595%" y="757" width="2.1873%" height="15" fill="rgb(212,68,19)" fg:x="1362" fg:w="223"/><text x="13.6095%" y="767.50">[..</text></g><g><title>[unknown] (101 samples, 0.99%)</title><rect x="14.5562%" y="741" width="0.9907%" height="15" fill="rgb(240,187,13)" fg:x="1484" fg:w="101"/><text x="14.8062%" y="751.50"></text></g><g><title>[unknown] (61 samples, 0.60%)</title><rect x="14.9485%" y="725" width="0.5983%" height="15" fill="rgb(223,113,26)" fg:x="1524" fg:w="61"/><text x="15.1985%" y="735.50"></text></g><g><title>[unknown] (28 samples, 0.27%)</title><rect x="15.2722%" y="709" width="0.2746%" height="15" fill="rgb(206,192,2)" fg:x="1557" fg:w="28"/><text x="15.5222%" y="719.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="15.5272%" y="693" width="0.0196%" height="15" fill="rgb(241,108,4)" fg:x="1583" fg:w="2"/><text x="15.7772%" y="703.50"></text></g><g><title>__GI___sched_yield (77 samples, 0.76%)</title><rect x="15.5468%" y="933" width="0.7553%" height="15" fill="rgb(247,173,49)" fg:x="1585" fg:w="77"/><text x="15.7968%" y="943.50"></text></g><g><title>[unknown] (72 samples, 0.71%)</title><rect x="15.5959%" y="917" width="0.7062%" height="15" fill="rgb(224,114,35)" fg:x="1590" fg:w="72"/><text x="15.8459%" y="927.50"></text></g><g><title>[unknown] (64 samples, 0.63%)</title><rect x="15.6744%" y="901" width="0.6278%" height="15" fill="rgb(245,159,27)" fg:x="1598" fg:w="64"/><text x="15.9244%" y="911.50"></text></g><g><title>[unknown] (62 samples, 0.61%)</title><rect x="15.6940%" y="885" width="0.6081%" height="15" fill="rgb(245,172,44)" fg:x="1600" fg:w="62"/><text x="15.9440%" y="895.50"></text></g><g><title>[unknown] (59 samples, 0.58%)</title><rect x="15.7234%" y="869" width="0.5787%" height="15" fill="rgb(236,23,11)" fg:x="1603" fg:w="59"/><text x="15.9734%" y="879.50"></text></g><g><title>[unknown] (55 samples, 0.54%)</title><rect x="15.7626%" y="853" width="0.5395%" height="15" fill="rgb(205,117,38)" fg:x="1607" fg:w="55"/><text x="16.0126%" y="863.50"></text></g><g><title>[unknown] (52 samples, 0.51%)</title><rect x="15.7921%" y="837" width="0.5101%" height="15" fill="rgb(237,72,25)" fg:x="1610" fg:w="52"/><text x="16.0421%" y="847.50"></text></g><g><title>[unknown] (40 samples, 0.39%)</title><rect x="15.9098%" y="821" width="0.3923%" height="15" fill="rgb(244,70,9)" fg:x="1622" fg:w="40"/><text x="16.1598%" y="831.50"></text></g><g><title>[unknown] (24 samples, 0.24%)</title><rect x="16.0667%" y="805" width="0.2354%" height="15" fill="rgb(217,125,39)" fg:x="1638" fg:w="24"/><text x="16.3167%" y="815.50"></text></g><g><title>[unknown] (18 samples, 0.18%)</title><rect x="16.1256%" y="789" width="0.1766%" height="15" fill="rgb(235,36,10)" fg:x="1644" fg:w="18"/><text x="16.3756%" y="799.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="16.2040%" y="773" width="0.0981%" height="15" fill="rgb(251,123,47)" fg:x="1652" fg:w="10"/><text x="16.4540%" y="783.50"></text></g><g><title>[unknown] (9 samples, 0.09%)</title><rect x="16.2138%" y="757" width="0.0883%" height="15" fill="rgb(221,13,13)" fg:x="1653" fg:w="9"/><text x="16.4638%" y="767.50"></text></g><g><title>[unknown] (9 samples, 0.09%)</title><rect x="16.2138%" y="741" width="0.0883%" height="15" fill="rgb(238,131,9)" fg:x="1653" fg:w="9"/><text x="16.4638%" y="751.50"></text></g><g><title>flume::Sender&lt;T&gt;::send (690 samples, 6.77%)</title><rect x="9.5537%" y="949" width="6.7680%" height="15" fill="rgb(211,50,8)" fg:x="974" fg:w="690"/><text x="9.8037%" y="959.50">flume::Se..</text></g><g><title>[unknown] (3,765 samples, 36.93%)</title><rect x="16.9985%" y="837" width="36.9299%" height="15" fill="rgb(245,182,24)" fg:x="1733" fg:w="3765"/><text x="17.2485%" y="847.50">[unknown]</text></g><g><title>[unknown] (3,734 samples, 36.63%)</title><rect x="17.3026%" y="821" width="36.6258%" height="15" fill="rgb(242,14,37)" fg:x="1764" fg:w="3734"/><text x="17.5526%" y="831.50">[unknown]</text></g><g><title>[unknown] (3,696 samples, 36.25%)</title><rect x="17.6753%" y="805" width="36.2531%" height="15" fill="rgb(246,228,12)" fg:x="1802" fg:w="3696"/><text x="17.9253%" y="815.50">[unknown]</text></g><g><title>[unknown] (3,678 samples, 36.08%)</title><rect x="17.8519%" y="789" width="36.0765%" height="15" fill="rgb(213,55,15)" fg:x="1820" fg:w="3678"/><text x="18.1019%" y="799.50">[unknown]</text></g><g><title>[unknown] (3,637 samples, 35.67%)</title><rect x="18.2540%" y="773" width="35.6744%" height="15" fill="rgb(209,9,3)" fg:x="1861" fg:w="3637"/><text x="18.5040%" y="783.50">[unknown]</text></g><g><title>[unknown] (3,602 samples, 35.33%)</title><rect x="18.5974%" y="757" width="35.3310%" height="15" fill="rgb(230,59,30)" fg:x="1896" fg:w="3602"/><text x="18.8474%" y="767.50">[unknown]</text></g><g><title>[unknown] (3,562 samples, 34.94%)</title><rect x="18.9897%" y="741" width="34.9387%" height="15" fill="rgb(209,121,21)" fg:x="1936" fg:w="3562"/><text x="19.2397%" y="751.50">[unknown]</text></g><g><title>[unknown] (3,477 samples, 34.10%)</title><rect x="19.8234%" y="725" width="34.1050%" height="15" fill="rgb(220,109,13)" fg:x="2021" fg:w="3477"/><text x="20.0734%" y="735.50">[unknown]</text></g><g><title>[unknown] (3,354 samples, 32.90%)</title><rect x="21.0299%" y="709" width="32.8985%" height="15" fill="rgb(232,18,1)" fg:x="2144" fg:w="3354"/><text x="21.2799%" y="719.50">[unknown]</text></g><g><title>[unknown] (3,288 samples, 32.25%)</title><rect x="21.6773%" y="693" width="32.2511%" height="15" fill="rgb(215,41,42)" fg:x="2210" fg:w="3288"/><text x="21.9273%" y="703.50">[unknown]</text></g><g><title>[unknown] (3,186 samples, 31.25%)</title><rect x="22.6778%" y="677" width="31.2506%" height="15" fill="rgb(224,123,36)" fg:x="2312" fg:w="3186"/><text x="22.9278%" y="687.50">[unknown]</text></g><g><title>[unknown] (3,008 samples, 29.50%)</title><rect x="24.4237%" y="661" width="29.5047%" height="15" fill="rgb(240,125,3)" fg:x="2490" fg:w="3008"/><text x="24.6737%" y="671.50">[unknown]</text></g><g><title>[unknown] (2,831 samples, 27.77%)</title><rect x="26.1599%" y="645" width="27.7685%" height="15" fill="rgb(205,98,50)" fg:x="2667" fg:w="2831"/><text x="26.4099%" y="655.50">[unknown]</text></g><g><title>[unknown] (2,676 samples, 26.25%)</title><rect x="27.6802%" y="629" width="26.2482%" height="15" fill="rgb(205,185,37)" fg:x="2822" fg:w="2676"/><text x="27.9302%" y="639.50">[unknown]</text></g><g><title>[unknown] (2,534 samples, 24.86%)</title><rect x="29.0731%" y="613" width="24.8553%" height="15" fill="rgb(238,207,15)" fg:x="2964" fg:w="2534"/><text x="29.3231%" y="623.50">[unknown]</text></g><g><title>[unknown] (2,437 samples, 23.90%)</title><rect x="30.0245%" y="597" width="23.9039%" height="15" fill="rgb(213,199,42)" fg:x="3061" fg:w="2437"/><text x="30.2745%" y="607.50">[unknown]</text></g><g><title>[unknown] (2,289 samples, 22.45%)</title><rect x="31.4762%" y="581" width="22.4522%" height="15" fill="rgb(235,201,11)" fg:x="3209" fg:w="2289"/><text x="31.7262%" y="591.50">[unknown]</text></g><g><title>[unknown] (2,163 samples, 21.22%)</title><rect x="32.7121%" y="565" width="21.2163%" height="15" fill="rgb(207,46,11)" fg:x="3335" fg:w="2163"/><text x="32.9621%" y="575.50">[unknown]</text></g><g><title>[unknown] (1,937 samples, 19.00%)</title><rect x="34.9289%" y="549" width="18.9995%" height="15" fill="rgb(241,35,35)" fg:x="3561" fg:w="1937"/><text x="35.1789%" y="559.50">[unknown]</text></g><g><title>[unknown] (1,785 samples, 17.51%)</title><rect x="36.4198%" y="533" width="17.5086%" height="15" fill="rgb(243,32,47)" fg:x="3713" fg:w="1785"/><text x="36.6698%" y="543.50">[unknown]</text></g><g><title>[unknown] (1,674 samples, 16.42%)</title><rect x="37.5086%" y="517" width="16.4198%" height="15" fill="rgb(247,202,23)" fg:x="3824" fg:w="1674"/><text x="37.7586%" y="527.50">[unknown]</text></g><g><title>[unknown] (1,613 samples, 15.82%)</title><rect x="38.1069%" y="501" width="15.8215%" height="15" fill="rgb(219,102,11)" fg:x="3885" fg:w="1613"/><text x="38.3569%" y="511.50">[unknown]</text></g><g><title>[unknown] (1,519 samples, 14.90%)</title><rect x="39.0289%" y="485" width="14.8995%" height="15" fill="rgb(243,110,44)" fg:x="3979" fg:w="1519"/><text x="39.2789%" y="495.50">[unknown]</text></g><g><title>[unknown] (1,479 samples, 14.51%)</title><rect x="39.4213%" y="469" width="14.5071%" height="15" fill="rgb(222,74,54)" fg:x="4019" fg:w="1479"/><text x="39.6713%" y="479.50">[unknown]</text></g><g><title>[unknown] (1,429 samples, 14.02%)</title><rect x="39.9117%" y="453" width="14.0167%" height="15" fill="rgb(216,99,12)" fg:x="4069" fg:w="1429"/><text x="40.1617%" y="463.50">[unknown]</text></g><g><title>[unknown] (1,400 samples, 13.73%)</title><rect x="40.1962%" y="437" width="13.7322%" height="15" fill="rgb(226,22,26)" fg:x="4098" fg:w="1400"/><text x="40.4462%" y="447.50">[unknown]</text></g><g><title>[unknown] (1,385 samples, 13.59%)</title><rect x="40.3433%" y="421" width="13.5851%" height="15" fill="rgb(217,163,10)" fg:x="4113" fg:w="1385"/><text x="40.5933%" y="431.50">[unknown]</text></g><g><title>[unknown] (1,320 samples, 12.95%)</title><rect x="40.9809%" y="405" width="12.9475%" height="15" fill="rgb(213,25,53)" fg:x="4178" fg:w="1320"/><text x="41.2309%" y="415.50">[unknown]</text></g><g><title>[unknown] (1,236 samples, 12.12%)</title><rect x="41.8048%" y="389" width="12.1236%" height="15" fill="rgb(252,105,26)" fg:x="4262" fg:w="1236"/><text x="42.0548%" y="399.50">[unknown]</text></g><g><title>[unknown] (1,186 samples, 11.63%)</title><rect x="42.2952%" y="373" width="11.6332%" height="15" fill="rgb(220,39,43)" fg:x="4312" fg:w="1186"/><text x="42.5452%" y="383.50">[unknown]</text></g><g><title>[unknown] (1,140 samples, 11.18%)</title><rect x="42.7464%" y="357" width="11.1820%" height="15" fill="rgb(229,68,48)" fg:x="4358" fg:w="1140"/><text x="42.9964%" y="367.50">[unknown]</text></g><g><title>[unknown] (1,100 samples, 10.79%)</title><rect x="43.1388%" y="341" width="10.7896%" height="15" fill="rgb(252,8,32)" fg:x="4398" fg:w="1100"/><text x="43.3888%" y="351.50">[unknown]</text></g><g><title>[unknown] (958 samples, 9.40%)</title><rect x="44.5316%" y="325" width="9.3968%" height="15" fill="rgb(223,20,43)" fg:x="4540" fg:w="958"/><text x="44.7816%" y="335.50">[unknown]</text></g><g><title>[unknown] (849 samples, 8.33%)</title><rect x="45.6008%" y="309" width="8.3276%" height="15" fill="rgb(229,81,49)" fg:x="4649" fg:w="849"/><text x="45.8508%" y="319.50">[unknown]</text></g><g><title>[unknown] (731 samples, 7.17%)</title><rect x="46.7582%" y="293" width="7.1702%" height="15" fill="rgb(236,28,36)" fg:x="4767" fg:w="731"/><text x="47.0082%" y="303.50">[unknown]</text></g><g><title>[unknown] (673 samples, 6.60%)</title><rect x="47.3271%" y="277" width="6.6013%" height="15" fill="rgb(249,185,26)" fg:x="4825" fg:w="673"/><text x="47.5771%" y="287.50">[unknown]</text></g><g><title>[unknown] (553 samples, 5.42%)</title><rect x="48.5042%" y="261" width="5.4242%" height="15" fill="rgb(249,174,33)" fg:x="4945" fg:w="553"/><text x="48.7542%" y="271.50">[unknow..</text></g><g><title>[unknown] (419 samples, 4.11%)</title><rect x="49.8185%" y="245" width="4.1099%" height="15" fill="rgb(233,201,37)" fg:x="5079" fg:w="419"/><text x="50.0685%" y="255.50">[unk..</text></g><g><title>[unknown] (382 samples, 3.75%)</title><rect x="50.1815%" y="229" width="3.7469%" height="15" fill="rgb(221,78,26)" fg:x="5116" fg:w="382"/><text x="50.4315%" y="239.50">[unk..</text></g><g><title>[unknown] (315 samples, 3.09%)</title><rect x="50.8386%" y="213" width="3.0897%" height="15" fill="rgb(250,127,30)" fg:x="5183" fg:w="315"/><text x="51.0886%" y="223.50">[un..</text></g><g><title>[unknown] (286 samples, 2.81%)</title><rect x="51.1231%" y="197" width="2.8053%" height="15" fill="rgb(230,49,44)" fg:x="5212" fg:w="286"/><text x="51.3731%" y="207.50">[u..</text></g><g><title>[unknown] (262 samples, 2.57%)</title><rect x="51.3585%" y="181" width="2.5699%" height="15" fill="rgb(229,67,23)" fg:x="5236" fg:w="262"/><text x="51.6085%" y="191.50">[u..</text></g><g><title>[unknown] (218 samples, 2.14%)</title><rect x="51.7901%" y="165" width="2.1383%" height="15" fill="rgb(249,83,47)" fg:x="5280" fg:w="218"/><text x="52.0401%" y="175.50">[..</text></g><g><title>[unknown] (202 samples, 1.98%)</title><rect x="51.9470%" y="149" width="1.9814%" height="15" fill="rgb(215,43,3)" fg:x="5296" fg:w="202"/><text x="52.1970%" y="159.50">[..</text></g><g><title>[unknown] (148 samples, 1.45%)</title><rect x="52.4767%" y="133" width="1.4517%" height="15" fill="rgb(238,154,13)" fg:x="5350" fg:w="148"/><text x="52.7267%" y="143.50"></text></g><g><title>[unknown] (91 samples, 0.89%)</title><rect x="53.0358%" y="117" width="0.8926%" height="15" fill="rgb(219,56,2)" fg:x="5407" fg:w="91"/><text x="53.2858%" y="127.50"></text></g><g><title>[unknown] (50 samples, 0.49%)</title><rect x="53.4380%" y="101" width="0.4904%" height="15" fill="rgb(233,0,4)" fg:x="5448" fg:w="50"/><text x="53.6880%" y="111.50"></text></g><g><title>[unknown] (33 samples, 0.32%)</title><rect x="53.6047%" y="85" width="0.3237%" height="15" fill="rgb(235,30,7)" fg:x="5465" fg:w="33"/><text x="53.8547%" y="95.50"></text></g><g><title>[unknown] (24 samples, 0.24%)</title><rect x="53.6930%" y="69" width="0.2354%" height="15" fill="rgb(250,79,13)" fg:x="5474" fg:w="24"/><text x="53.9430%" y="79.50"></text></g><g><title>[unknown] (11 samples, 0.11%)</title><rect x="53.8205%" y="53" width="0.1079%" height="15" fill="rgb(211,146,34)" fg:x="5487" fg:w="11"/><text x="54.0705%" y="63.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="53.8303%" y="37" width="0.0981%" height="15" fill="rgb(228,22,38)" fg:x="5488" fg:w="10"/><text x="54.0803%" y="47.50"></text></g><g><title>__libc_disable_asynccancel (12 samples, 0.12%)</title><rect x="53.9284%" y="837" width="0.1177%" height="15" fill="rgb(235,168,5)" fg:x="5498" fg:w="12"/><text x="54.1784%" y="847.50"></text></g><g><title>__libc_recv (3,804 samples, 37.31%)</title><rect x="16.8612%" y="869" width="37.3124%" height="15" fill="rgb(221,155,16)" fg:x="1719" fg:w="3804"/><text x="17.1112%" y="879.50">__libc_recv</text></g><g><title>__libc_recv (3,802 samples, 37.29%)</title><rect x="16.8808%" y="853" width="37.2928%" height="15" fill="rgb(215,215,53)" fg:x="1721" fg:w="3802"/><text x="17.1308%" y="863.50">__libc_recv</text></g><g><title>__libc_enable_asynccancel (13 samples, 0.13%)</title><rect x="54.0461%" y="837" width="0.1275%" height="15" fill="rgb(223,4,10)" fg:x="5510" fg:w="13"/><text x="54.2961%" y="847.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (3,808 samples, 37.35%)</title><rect x="16.8514%" y="933" width="37.3516%" height="15" fill="rgb(234,103,6)" fg:x="1718" fg:w="3808"/><text x="17.1014%" y="943.50">&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read</text></g><g><title>std::sys_common::net::TcpStream::read (3,808 samples, 37.35%)</title><rect x="16.8514%" y="917" width="37.3516%" height="15" fill="rgb(227,97,0)" fg:x="1718" fg:w="3808"/><text x="17.1014%" y="927.50">std::sys_common::net::TcpStream::read</text></g><g><title>std::sys::unix::net::Socket::read (3,808 samples, 37.35%)</title><rect x="16.8514%" y="901" width="37.3516%" height="15" fill="rgb(234,150,53)" fg:x="1718" fg:w="3808"/><text x="17.1014%" y="911.50">std::sys::unix::net::Socket::read</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (3,808 samples, 37.35%)</title><rect x="16.8514%" y="885" width="37.3516%" height="15" fill="rgb(228,201,54)" fg:x="1718" fg:w="3808"/><text x="17.1014%" y="895.50">std::sys::unix::net::Socket::recv_with_flags</text></g><g><title>std::sys::unix::cvt (3 samples, 0.03%)</title><rect x="54.1736%" y="869" width="0.0294%" height="15" fill="rgb(222,22,37)" fg:x="5523" fg:w="3"/><text x="54.4236%" y="879.50"></text></g><g><title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (3 samples, 0.03%)</title><rect x="54.1736%" y="853" width="0.0294%" height="15" fill="rgb(237,53,32)" fg:x="5523" fg:w="3"/><text x="54.4236%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.08%)</title><rect x="54.2030%" y="933" width="0.0785%" height="15" fill="rgb(233,25,53)" fg:x="5526" fg:w="8"/><text x="54.4530%" y="943.50"></text></g><g><title>core::str::converts::from_utf8 (37 samples, 0.36%)</title><rect x="54.2815%" y="933" width="0.3629%" height="15" fill="rgb(210,40,34)" fg:x="5534" fg:w="37"/><text x="54.5315%" y="943.50"></text></g><g><title>core::str::validations::run_utf8_validation (32 samples, 0.31%)</title><rect x="54.3306%" y="917" width="0.3139%" height="15" fill="rgb(241,220,44)" fg:x="5539" fg:w="32"/><text x="54.5806%" y="927.50"></text></g><g><title>advent_uniq::handle_client (4,714 samples, 46.24%)</title><rect x="8.8180%" y="965" width="46.2384%" height="15" fill="rgb(235,28,35)" fg:x="899" fg:w="4714"/><text x="9.0680%" y="975.50">advent_uniq::handle_client</text></g><g><title>std::io::append_to_string (3,949 samples, 38.73%)</title><rect x="16.3217%" y="949" width="38.7347%" height="15" fill="rgb(210,56,17)" fg:x="1664" fg:w="3949"/><text x="16.5717%" y="959.50">std::io::append_to_string</text></g><g><title>std::sys::unix::memchr::memchr (42 samples, 0.41%)</title><rect x="54.6444%" y="933" width="0.4120%" height="15" fill="rgb(224,130,29)" fg:x="5571" fg:w="42"/><text x="54.8944%" y="943.50"></text></g><g><title>__memchr_avx2 (42 samples, 0.41%)</title><rect x="54.6444%" y="917" width="0.4120%" height="15" fill="rgb(235,212,8)" fg:x="5571" fg:w="42"/><text x="54.8944%" y="927.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (7 samples, 0.07%)</title><rect x="55.0662%" y="949" width="0.0687%" height="15" fill="rgb(223,33,50)" fg:x="5614" fg:w="7"/><text x="55.3162%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (7 samples, 0.07%)</title><rect x="55.0662%" y="933" width="0.0687%" height="15" fill="rgb(219,149,13)" fg:x="5614" fg:w="7"/><text x="55.3162%" y="943.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (7 samples, 0.07%)</title><rect x="55.0662%" y="917" width="0.0687%" height="15" fill="rgb(250,156,29)" fg:x="5614" fg:w="7"/><text x="55.3162%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.07%)</title><rect x="55.0662%" y="901" width="0.0687%" height="15" fill="rgb(216,193,19)" fg:x="5614" fg:w="7"/><text x="55.3162%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.07%)</title><rect x="55.0662%" y="885" width="0.0687%" height="15" fill="rgb(216,135,14)" fg:x="5614" fg:w="7"/><text x="55.3162%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (7 samples, 0.07%)</title><rect x="55.0662%" y="869" width="0.0687%" height="15" fill="rgb(241,47,5)" fg:x="5614" fg:w="7"/><text x="55.3162%" y="879.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (7 samples, 0.07%)</title><rect x="55.0662%" y="853" width="0.0687%" height="15" fill="rgb(233,42,35)" fg:x="5614" fg:w="7"/><text x="55.3162%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (3 samples, 0.03%)</title><rect x="55.3507%" y="789" width="0.0294%" height="15" fill="rgb(231,13,6)" fg:x="5643" fg:w="3"/><text x="55.6007%" y="799.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (3 samples, 0.03%)</title><rect x="55.3507%" y="773" width="0.0294%" height="15" fill="rgb(207,181,40)" fg:x="5643" fg:w="3"/><text x="55.6007%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.02%)</title><rect x="55.3801%" y="757" width="0.0196%" height="15" fill="rgb(254,173,49)" fg:x="5646" fg:w="2"/><text x="55.6301%" y="767.50"></text></g><g><title>_int_realloc (10 samples, 0.10%)</title><rect x="55.9392%" y="677" width="0.0981%" height="15" fill="rgb(221,1,38)" fg:x="5703" fg:w="10"/><text x="56.1892%" y="687.50"></text></g><g><title>__GI___libc_realloc (70 samples, 0.69%)</title><rect x="55.4095%" y="693" width="0.6866%" height="15" fill="rgb(206,124,46)" fg:x="5649" fg:w="70"/><text x="55.6595%" y="703.50"></text></g><g><title>checked_request2size (6 samples, 0.06%)</title><rect x="56.0373%" y="677" width="0.0589%" height="15" fill="rgb(249,21,11)" fg:x="5713" fg:w="6"/><text x="56.2873%" y="687.50"></text></g><g><title>__rdl_realloc (2 samples, 0.02%)</title><rect x="56.0961%" y="693" width="0.0196%" height="15" fill="rgb(222,201,40)" fg:x="5719" fg:w="2"/><text x="56.3461%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (73 samples, 0.72%)</title><rect x="55.4095%" y="757" width="0.7160%" height="15" fill="rgb(235,61,29)" fg:x="5649" fg:w="73"/><text x="55.6595%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (73 samples, 0.72%)</title><rect x="55.4095%" y="741" width="0.7160%" height="15" fill="rgb(219,207,3)" fg:x="5649" fg:w="73"/><text x="55.6595%" y="751.50"></text></g><g><title>alloc::alloc::Global::grow_impl (73 samples, 0.72%)</title><rect x="55.4095%" y="725" width="0.7160%" height="15" fill="rgb(222,56,46)" fg:x="5649" fg:w="73"/><text x="55.6595%" y="735.50"></text></g><g><title>alloc::alloc::realloc (73 samples, 0.72%)</title><rect x="55.4095%" y="709" width="0.7160%" height="15" fill="rgb(239,76,54)" fg:x="5649" fg:w="73"/><text x="55.6595%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (81 samples, 0.79%)</title><rect x="55.3409%" y="821" width="0.7945%" height="15" fill="rgb(231,124,27)" fg:x="5642" fg:w="81"/><text x="55.5909%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (81 samples, 0.79%)</title><rect x="55.3409%" y="805" width="0.7945%" height="15" fill="rgb(249,195,6)" fg:x="5642" fg:w="81"/><text x="55.5909%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (77 samples, 0.76%)</title><rect x="55.3801%" y="789" width="0.7553%" height="15" fill="rgb(237,174,47)" fg:x="5646" fg:w="77"/><text x="55.6301%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (77 samples, 0.76%)</title><rect x="55.3801%" y="773" width="0.7553%" height="15" fill="rgb(206,201,31)" fg:x="5646" fg:w="77"/><text x="55.6301%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.09%)</title><rect x="56.1354%" y="821" width="0.0883%" height="15" fill="rgb(231,57,52)" fg:x="5723" fg:w="9"/><text x="56.3854%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.07%)</title><rect x="56.1550%" y="805" width="0.0687%" height="15" fill="rgb(248,177,22)" fg:x="5725" fg:w="7"/><text x="56.4050%" y="815.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (92 samples, 0.90%)</title><rect x="55.3310%" y="917" width="0.9024%" height="15" fill="rgb(215,211,37)" fg:x="5641" fg:w="92"/><text x="55.5810%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (92 samples, 0.90%)</title><rect x="55.3310%" y="901" width="0.9024%" height="15" fill="rgb(241,128,51)" fg:x="5641" fg:w="92"/><text x="55.5810%" y="911.50"></text></g><g><title>alloc::string::String::push_str (92 samples, 0.90%)</title><rect x="55.3310%" y="885" width="0.9024%" height="15" fill="rgb(227,165,31)" fg:x="5641" fg:w="92"/><text x="55.5810%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (92 samples, 0.90%)</title><rect x="55.3310%" y="869" width="0.9024%" height="15" fill="rgb(228,167,24)" fg:x="5641" fg:w="92"/><text x="55.5810%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (92 samples, 0.90%)</title><rect x="55.3310%" y="853" width="0.9024%" height="15" fill="rgb(228,143,12)" fg:x="5641" fg:w="92"/><text x="55.5810%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (92 samples, 0.90%)</title><rect x="55.3310%" y="837" width="0.9024%" height="15" fill="rgb(249,149,8)" fg:x="5641" fg:w="92"/><text x="55.5810%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.03%)</title><rect x="56.4002%" y="725" width="0.0294%" height="15" fill="rgb(243,35,44)" fg:x="5750" fg:w="3"/><text x="56.6502%" y="735.50"></text></g><g><title>__GI___libc_malloc (17 samples, 0.17%)</title><rect x="56.4787%" y="709" width="0.1667%" height="15" fill="rgb(246,89,9)" fg:x="5758" fg:w="17"/><text x="56.7287%" y="719.50"></text></g><g><title>checked_request2size (3 samples, 0.03%)</title><rect x="56.6160%" y="693" width="0.0294%" height="15" fill="rgb(233,213,13)" fg:x="5772" fg:w="3"/><text x="56.8660%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (26 samples, 0.26%)</title><rect x="56.4394%" y="725" width="0.2550%" height="15" fill="rgb(233,141,41)" fg:x="5754" fg:w="26"/><text x="56.6894%" y="735.50"></text></g><g><title>__rdl_alloc (5 samples, 0.05%)</title><rect x="56.6454%" y="709" width="0.0490%" height="15" fill="rgb(239,167,4)" fg:x="5775" fg:w="5"/><text x="56.8954%" y="719.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (5 samples, 0.05%)</title><rect x="56.6454%" y="693" width="0.0490%" height="15" fill="rgb(209,217,16)" fg:x="5775" fg:w="5"/><text x="56.8954%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (37 samples, 0.36%)</title><rect x="56.3806%" y="789" width="0.3629%" height="15" fill="rgb(219,88,35)" fg:x="5748" fg:w="37"/><text x="56.6306%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (37 samples, 0.36%)</title><rect x="56.3806%" y="773" width="0.3629%" height="15" fill="rgb(220,193,23)" fg:x="5748" fg:w="37"/><text x="56.6306%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (36 samples, 0.35%)</title><rect x="56.3904%" y="757" width="0.3531%" height="15" fill="rgb(230,90,52)" fg:x="5749" fg:w="36"/><text x="56.6404%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (36 samples, 0.35%)</title><rect x="56.3904%" y="741" width="0.3531%" height="15" fill="rgb(252,106,19)" fg:x="5749" fg:w="36"/><text x="56.6404%" y="751.50"></text></g><g><title>core::cmp::max (5 samples, 0.05%)</title><rect x="56.6945%" y="725" width="0.0490%" height="15" fill="rgb(206,74,20)" fg:x="5780" fg:w="5"/><text x="56.9445%" y="735.50"></text></g><g><title>core::cmp::Ord::max (5 samples, 0.05%)</title><rect x="56.6945%" y="709" width="0.0490%" height="15" fill="rgb(230,138,44)" fg:x="5780" fg:w="5"/><text x="56.9445%" y="719.50"></text></g><g><title>core::cmp::max_by (5 samples, 0.05%)</title><rect x="56.6945%" y="693" width="0.0490%" height="15" fill="rgb(235,182,43)" fg:x="5780" fg:w="5"/><text x="56.9445%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.04%)</title><rect x="56.7435%" y="773" width="0.0392%" height="15" fill="rgb(242,16,51)" fg:x="5785" fg:w="4"/><text x="56.9935%" y="783.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (44 samples, 0.43%)</title><rect x="56.3610%" y="885" width="0.4316%" height="15" fill="rgb(248,9,4)" fg:x="5746" fg:w="44"/><text x="56.6110%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (43 samples, 0.42%)</title><rect x="56.3708%" y="869" width="0.4218%" height="15" fill="rgb(210,31,22)" fg:x="5747" fg:w="43"/><text x="56.6208%" y="879.50"></text></g><g><title>alloc::string::String::push_str (43 samples, 0.42%)</title><rect x="56.3708%" y="853" width="0.4218%" height="15" fill="rgb(239,54,39)" fg:x="5747" fg:w="43"/><text x="56.6208%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (43 samples, 0.42%)</title><rect x="56.3708%" y="837" width="0.4218%" height="15" fill="rgb(230,99,41)" fg:x="5747" fg:w="43"/><text x="56.6208%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (43 samples, 0.42%)</title><rect x="56.3708%" y="821" width="0.4218%" height="15" fill="rgb(253,106,12)" fg:x="5747" fg:w="43"/><text x="56.6208%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (43 samples, 0.42%)</title><rect x="56.3708%" y="805" width="0.4218%" height="15" fill="rgb(213,46,41)" fg:x="5747" fg:w="43"/><text x="56.6208%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.05%)</title><rect x="56.7435%" y="789" width="0.0490%" height="15" fill="rgb(215,133,35)" fg:x="5785" fg:w="5"/><text x="56.9935%" y="799.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (3 samples, 0.03%)</title><rect x="56.8514%" y="869" width="0.0294%" height="15" fill="rgb(213,28,5)" fg:x="5796" fg:w="3"/><text x="57.1014%" y="879.50"></text></g><g><title>core::fmt::Formatter::pad_integral (11 samples, 0.11%)</title><rect x="56.7925%" y="885" width="0.1079%" height="15" fill="rgb(215,77,49)" fg:x="5790" fg:w="11"/><text x="57.0425%" y="895.50"></text></g><g><title>core::fmt::Formatter::sign_plus (2 samples, 0.02%)</title><rect x="56.8808%" y="869" width="0.0196%" height="15" fill="rgb(248,100,22)" fg:x="5799" fg:w="2"/><text x="57.1308%" y="879.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (85 samples, 0.83%)</title><rect x="56.2433%" y="917" width="0.8337%" height="15" fill="rgb(208,67,9)" fg:x="5734" fg:w="85"/><text x="56.4933%" y="927.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (85 samples, 0.83%)</title><rect x="56.2433%" y="901" width="0.8337%" height="15" fill="rgb(219,133,21)" fg:x="5734" fg:w="85"/><text x="56.4933%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (18 samples, 0.18%)</title><rect x="56.9004%" y="885" width="0.1766%" height="15" fill="rgb(246,46,29)" fg:x="5801" fg:w="18"/><text x="57.1504%" y="895.50"></text></g><g><title>alloc::fmt::format (207 samples, 2.03%)</title><rect x="55.0564%" y="965" width="2.0304%" height="15" fill="rgb(246,185,52)" fg:x="5613" fg:w="207"/><text x="55.3064%" y="975.50">a..</text></g><g><title>core::fmt::Write::write_fmt (199 samples, 1.95%)</title><rect x="55.1349%" y="949" width="1.9519%" height="15" fill="rgb(252,136,11)" fg:x="5621" fg:w="199"/><text x="55.3849%" y="959.50">c..</text></g><g><title>core::fmt::write (184 samples, 1.80%)</title><rect x="55.2820%" y="933" width="1.8048%" height="15" fill="rgb(219,138,53)" fg:x="5636" fg:w="184"/><text x="55.5320%" y="943.50">c..</text></g><g><title>__GI___libc_malloc (5 samples, 0.05%)</title><rect x="58.3816%" y="949" width="0.0490%" height="15" fill="rgb(211,51,23)" fg:x="5952" fg:w="5"/><text x="58.6316%" y="959.50"></text></g><g><title>tcache_get (2 samples, 0.02%)</title><rect x="58.4110%" y="933" width="0.0196%" height="15" fill="rgb(247,221,28)" fg:x="5955" fg:w="2"/><text x="58.6610%" y="943.50"></text></g><g><title>__GI___sched_yield (47 samples, 0.46%)</title><rect x="58.4306%" y="949" width="0.4610%" height="15" fill="rgb(251,222,45)" fg:x="5957" fg:w="47"/><text x="58.6806%" y="959.50"></text></g><g><title>[unknown] (44 samples, 0.43%)</title><rect x="58.4600%" y="933" width="0.4316%" height="15" fill="rgb(217,162,53)" fg:x="5960" fg:w="44"/><text x="58.7100%" y="943.50"></text></g><g><title>[unknown] (39 samples, 0.38%)</title><rect x="58.5091%" y="917" width="0.3825%" height="15" fill="rgb(229,93,14)" fg:x="5965" fg:w="39"/><text x="58.7591%" y="927.50"></text></g><g><title>[unknown] (38 samples, 0.37%)</title><rect x="58.5189%" y="901" width="0.3727%" height="15" fill="rgb(209,67,49)" fg:x="5966" fg:w="38"/><text x="58.7689%" y="911.50"></text></g><g><title>[unknown] (36 samples, 0.35%)</title><rect x="58.5385%" y="885" width="0.3531%" height="15" fill="rgb(213,87,29)" fg:x="5968" fg:w="36"/><text x="58.7885%" y="895.50"></text></g><g><title>[unknown] (34 samples, 0.33%)</title><rect x="58.5581%" y="869" width="0.3335%" height="15" fill="rgb(205,151,52)" fg:x="5970" fg:w="34"/><text x="58.8081%" y="879.50"></text></g><g><title>[unknown] (34 samples, 0.33%)</title><rect x="58.5581%" y="853" width="0.3335%" height="15" fill="rgb(253,215,39)" fg:x="5970" fg:w="34"/><text x="58.8081%" y="863.50"></text></g><g><title>[unknown] (26 samples, 0.26%)</title><rect x="58.6366%" y="837" width="0.2550%" height="15" fill="rgb(221,220,41)" fg:x="5978" fg:w="26"/><text x="58.8866%" y="847.50"></text></g><g><title>[unknown] (13 samples, 0.13%)</title><rect x="58.7641%" y="821" width="0.1275%" height="15" fill="rgb(218,133,21)" fg:x="5991" fg:w="13"/><text x="59.0141%" y="831.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="58.8131%" y="805" width="0.0785%" height="15" fill="rgb(221,193,43)" fg:x="5996" fg:w="8"/><text x="59.0631%" y="815.50"></text></g><g><title>_int_free (3 samples, 0.03%)</title><rect x="58.8916%" y="949" width="0.0294%" height="15" fill="rgb(240,128,52)" fg:x="6004" fg:w="3"/><text x="59.1416%" y="959.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.03%)</title><rect x="58.9210%" y="949" width="0.0294%" height="15" fill="rgb(253,114,12)" fg:x="6007" fg:w="3"/><text x="59.1710%" y="959.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (5 samples, 0.05%)</title><rect x="58.9505%" y="949" width="0.0490%" height="15" fill="rgb(215,223,47)" fg:x="6010" fg:w="5"/><text x="59.2005%" y="959.50"></text></g><g><title>std::thread::current (3 samples, 0.03%)</title><rect x="59.0093%" y="949" width="0.0294%" height="15" fill="rgb(248,225,23)" fg:x="6016" fg:w="3"/><text x="59.2593%" y="959.50"></text></g><g><title>std::sys_common::thread_info::current_thread (3 samples, 0.03%)</title><rect x="59.0093%" y="933" width="0.0294%" height="15" fill="rgb(250,108,0)" fg:x="6016" fg:w="3"/><text x="59.2593%" y="943.50"></text></g><g><title>std::sys_common::thread_info::ThreadInfo::with (3 samples, 0.03%)</title><rect x="59.0093%" y="917" width="0.0294%" height="15" fill="rgb(228,208,7)" fg:x="6016" fg:w="3"/><text x="59.2593%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.03%)</title><rect x="59.0093%" y="901" width="0.0294%" height="15" fill="rgb(244,45,10)" fg:x="6016" fg:w="3"/><text x="59.2593%" y="911.50"></text></g><g><title>std::sys_common::thread_info::THREAD_INFO::__getit (2 samples, 0.02%)</title><rect x="59.0191%" y="885" width="0.0196%" height="15" fill="rgb(207,125,25)" fg:x="6017" fg:w="2"/><text x="59.2691%" y="895.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="59.0191%" y="869" width="0.0196%" height="15" fill="rgb(210,195,18)" fg:x="6017" fg:w="2"/><text x="59.2691%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::thread::Thread&gt; (3 samples, 0.03%)</title><rect x="59.0387%" y="933" width="0.0294%" height="15" fill="rgb(249,80,12)" fg:x="6019" fg:w="3"/><text x="59.2887%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::thread::Inner&gt;&gt; (3 samples, 0.03%)</title><rect x="59.0387%" y="917" width="0.0294%" height="15" fill="rgb(221,65,9)" fg:x="6019" fg:w="3"/><text x="59.2887%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="59.0387%" y="901" width="0.0294%" height="15" fill="rgb(235,49,36)" fg:x="6019" fg:w="3"/><text x="59.2887%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.03%)</title><rect x="59.0387%" y="885" width="0.0294%" height="15" fill="rgb(225,32,20)" fg:x="6019" fg:w="3"/><text x="59.2887%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.03%)</title><rect x="59.0387%" y="869" width="0.0294%" height="15" fill="rgb(215,141,46)" fg:x="6019" fg:w="3"/><text x="59.2887%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicI32::compare_exchange (16 samples, 0.16%)</title><rect x="59.0682%" y="917" width="0.1569%" height="15" fill="rgb(250,160,47)" fg:x="6022" fg:w="16"/><text x="59.3182%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.16%)</title><rect x="59.0682%" y="901" width="0.1569%" height="15" fill="rgb(216,222,40)" fg:x="6022" fg:w="16"/><text x="59.3182%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicI32::fetch_sub (5 samples, 0.05%)</title><rect x="59.2251%" y="917" width="0.0490%" height="15" fill="rgb(234,217,39)" fg:x="6038" fg:w="5"/><text x="59.4751%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.05%)</title><rect x="59.2251%" y="901" width="0.0490%" height="15" fill="rgb(207,178,40)" fg:x="6038" fg:w="5"/><text x="59.4751%" y="911.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (616 samples, 6.04%)</title><rect x="59.0682%" y="933" width="6.0422%" height="15" fill="rgb(221,136,13)" fg:x="6022" fg:w="616"/><text x="59.3182%" y="943.50">std::sys..</text></g><g><title>std::sys::unix::futex::futex_wait (595 samples, 5.84%)</title><rect x="59.2742%" y="917" width="5.8362%" height="15" fill="rgb(249,199,10)" fg:x="6043" fg:w="595"/><text x="59.5242%" y="927.50">std::sy..</text></g><g><title>syscall (595 samples, 5.84%)</title><rect x="59.2742%" y="901" width="5.8362%" height="15" fill="rgb(249,222,13)" fg:x="6043" fg:w="595"/><text x="59.5242%" y="911.50">syscall</text></g><g><title>[unknown] (588 samples, 5.77%)</title><rect x="59.3428%" y="885" width="5.7675%" height="15" fill="rgb(244,185,38)" fg:x="6050" fg:w="588"/><text x="59.5928%" y="895.50">[unknow..</text></g><g><title>[unknown] (572 samples, 5.61%)</title><rect x="59.4998%" y="869" width="5.6106%" height="15" fill="rgb(236,202,9)" fg:x="6066" fg:w="572"/><text x="59.7498%" y="879.50">[unknow..</text></g><g><title>[unknown] (558 samples, 5.47%)</title><rect x="59.6371%" y="853" width="5.4733%" height="15" fill="rgb(250,229,37)" fg:x="6080" fg:w="558"/><text x="59.8871%" y="863.50">[unknow..</text></g><g><title>[unknown] (536 samples, 5.26%)</title><rect x="59.8529%" y="837" width="5.2575%" height="15" fill="rgb(206,174,23)" fg:x="6102" fg:w="536"/><text x="60.1029%" y="847.50">[unkno..</text></g><g><title>[unknown] (527 samples, 5.17%)</title><rect x="59.9411%" y="821" width="5.1692%" height="15" fill="rgb(211,33,43)" fg:x="6111" fg:w="527"/><text x="60.1911%" y="831.50">[unkno..</text></g><g><title>[unknown] (505 samples, 4.95%)</title><rect x="60.1569%" y="805" width="4.9534%" height="15" fill="rgb(245,58,50)" fg:x="6133" fg:w="505"/><text x="60.4069%" y="815.50">[unkno..</text></g><g><title>[unknown] (468 samples, 4.59%)</title><rect x="60.5199%" y="789" width="4.5905%" height="15" fill="rgb(244,68,36)" fg:x="6170" fg:w="468"/><text x="60.7699%" y="799.50">[unkn..</text></g><g><title>[unknown] (440 samples, 4.32%)</title><rect x="60.7945%" y="773" width="4.3158%" height="15" fill="rgb(232,229,15)" fg:x="6198" fg:w="440"/><text x="61.0445%" y="783.50">[unkn..</text></g><g><title>[unknown] (419 samples, 4.11%)</title><rect x="61.0005%" y="757" width="4.1099%" height="15" fill="rgb(254,30,23)" fg:x="6219" fg:w="419"/><text x="61.2505%" y="767.50">[unk..</text></g><g><title>[unknown] (378 samples, 3.71%)</title><rect x="61.4026%" y="741" width="3.7077%" height="15" fill="rgb(235,160,14)" fg:x="6260" fg:w="378"/><text x="61.6526%" y="751.50">[unk..</text></g><g><title>[unknown] (241 samples, 2.36%)</title><rect x="62.7464%" y="725" width="2.3639%" height="15" fill="rgb(212,155,44)" fg:x="6397" fg:w="241"/><text x="62.9964%" y="735.50">[u..</text></g><g><title>[unknown] (187 samples, 1.83%)</title><rect x="63.2761%" y="709" width="1.8342%" height="15" fill="rgb(226,2,50)" fg:x="6451" fg:w="187"/><text x="63.5261%" y="719.50">[..</text></g><g><title>[unknown] (124 samples, 1.22%)</title><rect x="63.8941%" y="693" width="1.2163%" height="15" fill="rgb(234,177,6)" fg:x="6514" fg:w="124"/><text x="64.1441%" y="703.50"></text></g><g><title>[unknown] (72 samples, 0.71%)</title><rect x="64.4041%" y="677" width="0.7062%" height="15" fill="rgb(217,24,9)" fg:x="6566" fg:w="72"/><text x="64.6541%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="65.0907%" y="661" width="0.0196%" height="15" fill="rgb(220,13,46)" fg:x="6636" fg:w="2"/><text x="65.3407%" y="671.50"></text></g><g><title>std::thread::park (620 samples, 6.08%)</title><rect x="59.0387%" y="949" width="6.0814%" height="15" fill="rgb(239,221,27)" fg:x="6019" fg:w="620"/><text x="59.2887%" y="959.50">std::thr..</text></g><g><title>flume::Receiver&lt;T&gt;::recv (821 samples, 8.05%)</title><rect x="57.0868%" y="965" width="8.0530%" height="15" fill="rgb(222,198,25)" fg:x="5820" fg:w="821"/><text x="57.3368%" y="975.50">flume::Rece..</text></g><g><title>&lt;flume::signal::SyncSignal as flume::signal::Signal&gt;::fire (42 samples, 0.41%)</title><rect x="65.6989%" y="949" width="0.4120%" height="15" fill="rgb(211,99,13)" fg:x="6698" fg:w="42"/><text x="65.9489%" y="959.50"></text></g><g><title>syscall (40 samples, 0.39%)</title><rect x="65.7185%" y="933" width="0.3923%" height="15" fill="rgb(232,111,31)" fg:x="6700" fg:w="40"/><text x="65.9685%" y="943.50"></text></g><g><title>[unknown] (39 samples, 0.38%)</title><rect x="65.7283%" y="917" width="0.3825%" height="15" fill="rgb(245,82,37)" fg:x="6701" fg:w="39"/><text x="65.9783%" y="927.50"></text></g><g><title>[unknown] (39 samples, 0.38%)</title><rect x="65.7283%" y="901" width="0.3825%" height="15" fill="rgb(227,149,46)" fg:x="6701" fg:w="39"/><text x="65.9783%" y="911.50"></text></g><g><title>[unknown] (38 samples, 0.37%)</title><rect x="65.7381%" y="885" width="0.3727%" height="15" fill="rgb(218,36,50)" fg:x="6702" fg:w="38"/><text x="65.9881%" y="895.50"></text></g><g><title>[unknown] (37 samples, 0.36%)</title><rect x="65.7479%" y="869" width="0.3629%" height="15" fill="rgb(226,80,48)" fg:x="6703" fg:w="37"/><text x="65.9979%" y="879.50"></text></g><g><title>[unknown] (37 samples, 0.36%)</title><rect x="65.7479%" y="853" width="0.3629%" height="15" fill="rgb(238,224,15)" fg:x="6703" fg:w="37"/><text x="65.9979%" y="863.50"></text></g><g><title>[unknown] (34 samples, 0.33%)</title><rect x="65.7773%" y="837" width="0.3335%" height="15" fill="rgb(241,136,10)" fg:x="6706" fg:w="34"/><text x="66.0273%" y="847.50"></text></g><g><title>[unknown] (32 samples, 0.31%)</title><rect x="65.7970%" y="821" width="0.3139%" height="15" fill="rgb(208,32,45)" fg:x="6708" fg:w="32"/><text x="66.0470%" y="831.50"></text></g><g><title>[unknown] (23 samples, 0.23%)</title><rect x="65.8852%" y="805" width="0.2256%" height="15" fill="rgb(207,135,9)" fg:x="6717" fg:w="23"/><text x="66.1352%" y="815.50"></text></g><g><title>[unknown] (23 samples, 0.23%)</title><rect x="65.8852%" y="789" width="0.2256%" height="15" fill="rgb(206,86,44)" fg:x="6717" fg:w="23"/><text x="66.1352%" y="799.50"></text></g><g><title>[unknown] (23 samples, 0.23%)</title><rect x="65.8852%" y="773" width="0.2256%" height="15" fill="rgb(245,177,15)" fg:x="6717" fg:w="23"/><text x="66.1352%" y="783.50"></text></g><g><title>[unknown] (11 samples, 0.11%)</title><rect x="66.0029%" y="757" width="0.1079%" height="15" fill="rgb(206,64,50)" fg:x="6729" fg:w="11"/><text x="66.2529%" y="767.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="66.0520%" y="741" width="0.0589%" height="15" fill="rgb(234,36,40)" fg:x="6734" fg:w="6"/><text x="66.3020%" y="751.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="66.1108%" y="949" width="0.0490%" height="15" fill="rgb(213,64,8)" fg:x="6740" fg:w="5"/><text x="66.3608%" y="959.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="66.1108%" y="933" width="0.0490%" height="15" fill="rgb(210,75,36)" fg:x="6740" fg:w="5"/><text x="66.3608%" y="943.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="66.1108%" y="917" width="0.0490%" height="15" fill="rgb(229,88,21)" fg:x="6740" fg:w="5"/><text x="66.3608%" y="927.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="66.1108%" y="901" width="0.0490%" height="15" fill="rgb(252,204,47)" fg:x="6740" fg:w="5"/><text x="66.3608%" y="911.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="66.1108%" y="885" width="0.0490%" height="15" fill="rgb(208,77,27)" fg:x="6740" fg:w="5"/><text x="66.3608%" y="895.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="66.1108%" y="869" width="0.0490%" height="15" fill="rgb(221,76,26)" fg:x="6740" fg:w="5"/><text x="66.3608%" y="879.50"></text></g><g><title>__GI___sched_yield (13 samples, 0.13%)</title><rect x="66.1599%" y="949" width="0.1275%" height="15" fill="rgb(225,139,18)" fg:x="6745" fg:w="13"/><text x="66.4099%" y="959.50"></text></g><g><title>[unknown] (13 samples, 0.13%)</title><rect x="66.1599%" y="933" width="0.1275%" height="15" fill="rgb(230,137,11)" fg:x="6745" fg:w="13"/><text x="66.4099%" y="943.50"></text></g><g><title>[unknown] (11 samples, 0.11%)</title><rect x="66.1795%" y="917" width="0.1079%" height="15" fill="rgb(212,28,1)" fg:x="6747" fg:w="11"/><text x="66.4295%" y="927.50"></text></g><g><title>[unknown] (11 samples, 0.11%)</title><rect x="66.1795%" y="901" width="0.1079%" height="15" fill="rgb(248,164,17)" fg:x="6747" fg:w="11"/><text x="66.4295%" y="911.50"></text></g><g><title>[unknown] (11 samples, 0.11%)</title><rect x="66.1795%" y="885" width="0.1079%" height="15" fill="rgb(222,171,42)" fg:x="6747" fg:w="11"/><text x="66.4295%" y="895.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="66.1893%" y="869" width="0.0981%" height="15" fill="rgb(243,84,45)" fg:x="6748" fg:w="10"/><text x="66.4393%" y="879.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="66.1893%" y="853" width="0.0981%" height="15" fill="rgb(252,49,23)" fg:x="6748" fg:w="10"/><text x="66.4393%" y="863.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="66.2187%" y="837" width="0.0687%" height="15" fill="rgb(215,19,7)" fg:x="6751" fg:w="7"/><text x="66.4687%" y="847.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="66.2285%" y="821" width="0.0589%" height="15" fill="rgb(238,81,41)" fg:x="6752" fg:w="6"/><text x="66.4785%" y="831.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="66.2580%" y="805" width="0.0294%" height="15" fill="rgb(210,199,37)" fg:x="6755" fg:w="3"/><text x="66.5080%" y="815.50"></text></g><g><title>flume::Sender&lt;T&gt;::send (119 samples, 1.17%)</title><rect x="65.1398%" y="965" width="1.1672%" height="15" fill="rgb(244,192,49)" fg:x="6641" fg:w="119"/><text x="65.3898%" y="975.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::grow (2 samples, 0.02%)</title><rect x="66.2874%" y="949" width="0.0196%" height="15" fill="rgb(226,211,11)" fg:x="6758" fg:w="2"/><text x="66.5374%" y="959.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="66.2874%" y="933" width="0.0196%" height="15" fill="rgb(236,162,54)" fg:x="6758" fg:w="2"/><text x="66.5374%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="66.2874%" y="917" width="0.0196%" height="15" fill="rgb(220,229,9)" fg:x="6758" fg:w="2"/><text x="66.5374%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="66.2874%" y="901" width="0.0196%" height="15" fill="rgb(250,87,22)" fg:x="6758" fg:w="2"/><text x="66.5374%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="66.2874%" y="885" width="0.0196%" height="15" fill="rgb(239,43,17)" fg:x="6758" fg:w="2"/><text x="66.5374%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="66.2874%" y="869" width="0.0196%" height="15" fill="rgb(231,177,25)" fg:x="6758" fg:w="2"/><text x="66.5374%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="66.2874%" y="853" width="0.0196%" height="15" fill="rgb(219,179,1)" fg:x="6758" fg:w="2"/><text x="66.5374%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="66.2874%" y="837" width="0.0196%" height="15" fill="rgb(238,219,53)" fg:x="6758" fg:w="2"/><text x="66.5374%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="66.2874%" y="821" width="0.0196%" height="15" fill="rgb(232,167,36)" fg:x="6758" fg:w="2"/><text x="66.5374%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="66.2874%" y="805" width="0.0196%" height="15" fill="rgb(244,19,51)" fg:x="6758" fg:w="2"/><text x="66.5374%" y="815.50"></text></g><g><title>__GI_munmap (2 samples, 0.02%)</title><rect x="66.9642%" y="949" width="0.0196%" height="15" fill="rgb(224,6,22)" fg:x="6827" fg:w="2"/><text x="67.2142%" y="959.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="66.9642%" y="933" width="0.0196%" height="15" fill="rgb(224,145,5)" fg:x="6827" fg:w="2"/><text x="67.2142%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="66.9642%" y="917" width="0.0196%" height="15" fill="rgb(234,130,49)" fg:x="6827" fg:w="2"/><text x="67.2142%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="66.9642%" y="901" width="0.0196%" height="15" fill="rgb(254,6,2)" fg:x="6827" fg:w="2"/><text x="67.2142%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="66.9642%" y="885" width="0.0196%" height="15" fill="rgb(208,96,46)" fg:x="6827" fg:w="2"/><text x="67.2142%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="66.9642%" y="869" width="0.0196%" height="15" fill="rgb(239,3,39)" fg:x="6827" fg:w="2"/><text x="67.2142%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="66.9642%" y="853" width="0.0196%" height="15" fill="rgb(233,210,1)" fg:x="6827" fg:w="2"/><text x="67.2142%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="66.9642%" y="837" width="0.0196%" height="15" fill="rgb(244,137,37)" fg:x="6827" fg:w="2"/><text x="67.2142%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="66.9642%" y="821" width="0.0196%" height="15" fill="rgb(240,136,2)" fg:x="6827" fg:w="2"/><text x="67.2142%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="66.9642%" y="805" width="0.0196%" height="15" fill="rgb(239,18,37)" fg:x="6827" fg:w="2"/><text x="67.2142%" y="815.50"></text></g><g><title>[unknown] (14 samples, 0.14%)</title><rect x="67.3271%" y="933" width="0.1373%" height="15" fill="rgb(218,185,22)" fg:x="6864" fg:w="14"/><text x="67.5771%" y="943.50"></text></g><g><title>[unknown] (12 samples, 0.12%)</title><rect x="67.3467%" y="917" width="0.1177%" height="15" fill="rgb(225,218,4)" fg:x="6866" fg:w="12"/><text x="67.5967%" y="927.50"></text></g><g><title>[unknown] (12 samples, 0.12%)</title><rect x="67.3467%" y="901" width="0.1177%" height="15" fill="rgb(230,182,32)" fg:x="6866" fg:w="12"/><text x="67.5967%" y="911.50"></text></g><g><title>[unknown] (12 samples, 0.12%)</title><rect x="67.3467%" y="885" width="0.1177%" height="15" fill="rgb(242,56,43)" fg:x="6866" fg:w="12"/><text x="67.5967%" y="895.50"></text></g><g><title>[unknown] (12 samples, 0.12%)</title><rect x="67.3467%" y="869" width="0.1177%" height="15" fill="rgb(233,99,24)" fg:x="6866" fg:w="12"/><text x="67.5967%" y="879.50"></text></g><g><title>[unknown] (11 samples, 0.11%)</title><rect x="67.3565%" y="853" width="0.1079%" height="15" fill="rgb(234,209,42)" fg:x="6867" fg:w="11"/><text x="67.6065%" y="863.50"></text></g><g><title>[unknown] (9 samples, 0.09%)</title><rect x="67.3762%" y="837" width="0.0883%" height="15" fill="rgb(227,7,12)" fg:x="6869" fg:w="9"/><text x="67.6262%" y="847.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="67.3860%" y="821" width="0.0785%" height="15" fill="rgb(245,203,43)" fg:x="6870" fg:w="8"/><text x="67.6360%" y="831.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="67.3860%" y="805" width="0.0785%" height="15" fill="rgb(238,205,33)" fg:x="6870" fg:w="8"/><text x="67.6360%" y="815.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="67.3958%" y="789" width="0.0687%" height="15" fill="rgb(231,56,7)" fg:x="6871" fg:w="7"/><text x="67.6458%" y="799.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="67.4154%" y="773" width="0.0490%" height="15" fill="rgb(244,186,29)" fg:x="6873" fg:w="5"/><text x="67.6654%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (122 samples, 1.20%)</title><rect x="66.3070%" y="965" width="1.1967%" height="15" fill="rgb(234,111,31)" fg:x="6760" fg:w="122"/><text x="66.5570%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (53 samples, 0.52%)</title><rect x="66.9838%" y="949" width="0.5199%" height="15" fill="rgb(241,149,10)" fg:x="6829" fg:w="53"/><text x="67.2338%" y="959.50"></text></g><g><title>__memset_avx2_erms (3 samples, 0.03%)</title><rect x="67.4743%" y="933" width="0.0294%" height="15" fill="rgb(249,206,44)" fg:x="6879" fg:w="3"/><text x="67.7243%" y="943.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="67.4743%" y="917" width="0.0294%" height="15" fill="rgb(251,153,30)" fg:x="6879" fg:w="3"/><text x="67.7243%" y="927.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="67.4743%" y="901" width="0.0294%" height="15" fill="rgb(239,152,38)" fg:x="6879" fg:w="3"/><text x="67.7243%" y="911.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="67.4743%" y="885" width="0.0294%" height="15" fill="rgb(249,139,47)" fg:x="6879" fg:w="3"/><text x="67.7243%" y="895.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="67.4743%" y="869" width="0.0294%" height="15" fill="rgb(244,64,35)" fg:x="6879" fg:w="3"/><text x="67.7243%" y="879.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="67.4743%" y="853" width="0.0294%" height="15" fill="rgb(216,46,15)" fg:x="6879" fg:w="3"/><text x="67.7243%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="67.4841%" y="837" width="0.0196%" height="15" fill="rgb(250,74,19)" fg:x="6880" fg:w="2"/><text x="67.7341%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::from_error (2 samples, 0.02%)</title><rect x="67.7685%" y="901" width="0.0196%" height="15" fill="rgb(249,42,33)" fg:x="6909" fg:w="2"/><text x="68.0185%" y="911.50"></text></g><g><title>[unknown] (3,147 samples, 30.87%)</title><rect x="68.1412%" y="869" width="30.8681%" height="15" fill="rgb(242,149,17)" fg:x="6947" fg:w="3147"/><text x="68.3912%" y="879.50">[unknown]</text></g><g><title>[unknown] (3,068 samples, 30.09%)</title><rect x="68.9161%" y="853" width="30.0932%" height="15" fill="rgb(244,29,21)" fg:x="7026" fg:w="3068"/><text x="69.1661%" y="863.50">[unknown]</text></g><g><title>[unknown] (3,023 samples, 29.65%)</title><rect x="69.3575%" y="837" width="29.6518%" height="15" fill="rgb(220,130,37)" fg:x="7071" fg:w="3023"/><text x="69.6075%" y="847.50">[unknown]</text></g><g><title>[unknown] (3,016 samples, 29.58%)</title><rect x="69.4262%" y="821" width="29.5831%" height="15" fill="rgb(211,67,2)" fg:x="7078" fg:w="3016"/><text x="69.6762%" y="831.50">[unknown]</text></g><g><title>[unknown] (2,983 samples, 29.26%)</title><rect x="69.7499%" y="805" width="29.2594%" height="15" fill="rgb(235,68,52)" fg:x="7111" fg:w="2983"/><text x="69.9999%" y="815.50">[unknown]</text></g><g><title>[unknown] (2,873 samples, 28.18%)</title><rect x="70.8288%" y="789" width="28.1805%" height="15" fill="rgb(246,142,3)" fg:x="7221" fg:w="2873"/><text x="71.0788%" y="799.50">[unknown]</text></g><g><title>[unknown] (2,812 samples, 27.58%)</title><rect x="71.4272%" y="773" width="27.5821%" height="15" fill="rgb(241,25,7)" fg:x="7282" fg:w="2812"/><text x="71.6772%" y="783.50">[unknown]</text></g><g><title>[unknown] (2,427 samples, 23.81%)</title><rect x="75.2035%" y="757" width="23.8058%" height="15" fill="rgb(242,119,39)" fg:x="7667" fg:w="2427"/><text x="75.4535%" y="767.50">[unknown]</text></g><g><title>[unknown] (2,178 samples, 21.36%)</title><rect x="77.6459%" y="741" width="21.3634%" height="15" fill="rgb(241,98,45)" fg:x="7916" fg:w="2178"/><text x="77.8959%" y="751.50">[unknown]</text></g><g><title>[unknown] (1,819 samples, 17.84%)</title><rect x="81.1672%" y="725" width="17.8421%" height="15" fill="rgb(254,28,30)" fg:x="8275" fg:w="1819"/><text x="81.4172%" y="735.50">[unknown]</text></g><g><title>[unknown] (1,543 samples, 15.13%)</title><rect x="83.8744%" y="709" width="15.1349%" height="15" fill="rgb(241,142,54)" fg:x="8551" fg:w="1543"/><text x="84.1244%" y="719.50">[unknown]</text></g><g><title>[unknown] (1,373 samples, 13.47%)</title><rect x="85.5419%" y="693" width="13.4674%" height="15" fill="rgb(222,85,15)" fg:x="8721" fg:w="1373"/><text x="85.7919%" y="703.50">[unknown]</text></g><g><title>[unknown] (1,108 samples, 10.87%)</title><rect x="88.1412%" y="677" width="10.8681%" height="15" fill="rgb(210,85,47)" fg:x="8986" fg:w="1108"/><text x="88.3912%" y="687.50">[unknown]</text></g><g><title>[unknown] (998 samples, 9.79%)</title><rect x="89.2202%" y="661" width="9.7891%" height="15" fill="rgb(224,206,25)" fg:x="9096" fg:w="998"/><text x="89.4702%" y="671.50">[unknown]</text></g><g><title>[unknown] (777 samples, 7.62%)</title><rect x="91.3879%" y="645" width="7.6214%" height="15" fill="rgb(243,201,19)" fg:x="9317" fg:w="777"/><text x="91.6379%" y="655.50">[unknown]</text></g><g><title>[unknown] (669 samples, 6.56%)</title><rect x="92.4473%" y="629" width="6.5620%" height="15" fill="rgb(236,59,4)" fg:x="9425" fg:w="669"/><text x="92.6973%" y="639.50">[unknown]</text></g><g><title>[unknown] (557 samples, 5.46%)</title><rect x="93.5459%" y="613" width="5.4635%" height="15" fill="rgb(254,179,45)" fg:x="9537" fg:w="557"/><text x="93.7959%" y="623.50">[unknow..</text></g><g><title>[unknown] (342 samples, 3.35%)</title><rect x="95.6547%" y="597" width="3.3546%" height="15" fill="rgb(226,14,10)" fg:x="9752" fg:w="342"/><text x="95.9047%" y="607.50">[un..</text></g><g><title>[unknown] (268 samples, 2.63%)</title><rect x="96.3806%" y="581" width="2.6287%" height="15" fill="rgb(244,27,41)" fg:x="9826" fg:w="268"/><text x="96.6306%" y="591.50">[u..</text></g><g><title>[unknown] (146 samples, 1.43%)</title><rect x="97.5772%" y="565" width="1.4321%" height="15" fill="rgb(235,35,32)" fg:x="9948" fg:w="146"/><text x="97.8272%" y="575.50"></text></g><g><title>[unknown] (89 samples, 0.87%)</title><rect x="98.1363%" y="549" width="0.8730%" height="15" fill="rgb(218,68,31)" fg:x="10005" fg:w="89"/><text x="98.3863%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="98.9505%" y="533" width="0.0589%" height="15" fill="rgb(207,120,37)" fg:x="10088" fg:w="6"/><text x="99.2005%" y="543.50"></text></g><g><title>__libc_disable_asynccancel (22 samples, 0.22%)</title><rect x="99.0093%" y="869" width="0.2158%" height="15" fill="rgb(227,98,0)" fg:x="10094" fg:w="22"/><text x="99.2593%" y="879.50"></text></g><g><title>__GI___libc_write (3,212 samples, 31.51%)</title><rect x="67.7881%" y="901" width="31.5056%" height="15" fill="rgb(207,7,3)" fg:x="6911" fg:w="3212"/><text x="68.0381%" y="911.50">__GI___libc_write</text></g><g><title>__GI___libc_write (3,211 samples, 31.50%)</title><rect x="67.7979%" y="885" width="31.4958%" height="15" fill="rgb(206,98,19)" fg:x="6912" fg:w="3211"/><text x="68.0479%" y="895.50">__GI___libc_write</text></g><g><title>__libc_enable_asynccancel (7 samples, 0.07%)</title><rect x="99.2251%" y="869" width="0.0687%" height="15" fill="rgb(217,5,26)" fg:x="10116" fg:w="7"/><text x="99.4751%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (9,889 samples, 97.00%)</title><rect x="2.3639%" y="1029" width="96.9985%" height="15" fill="rgb(235,190,38)" fg:x="241" fg:w="9889"/><text x="2.6139%" y="1039.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (9,889 samples, 97.00%)</title><rect x="2.3639%" y="1013" width="96.9985%" height="15" fill="rgb(247,86,24)" fg:x="241" fg:w="9889"/><text x="2.6139%" y="1023.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (9,889 samples, 97.00%)</title><rect x="2.3639%" y="997" width="96.9985%" height="15" fill="rgb(205,101,16)" fg:x="241" fg:w="9889"/><text x="2.6139%" y="1007.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (9,889 samples, 97.00%)</title><rect x="2.3639%" y="981" width="96.9985%" height="15" fill="rgb(246,168,33)" fg:x="241" fg:w="9889"/><text x="2.6139%" y="991.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>std::io::Write::write_all (3,248 samples, 31.86%)</title><rect x="67.5037%" y="965" width="31.8588%" height="15" fill="rgb(231,114,1)" fg:x="6882" fg:w="3248"/><text x="67.7537%" y="975.50">std::io::Write::write_all</text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (3,221 samples, 31.59%)</title><rect x="67.7685%" y="949" width="31.5939%" height="15" fill="rgb(207,184,53)" fg:x="6909" fg:w="3221"/><text x="68.0185%" y="959.50">&lt;std::fs::File as std::io::Write&gt;::write</text></g><g><title>std::sys::unix::fs::File::write (3,221 samples, 31.59%)</title><rect x="67.7685%" y="933" width="31.5939%" height="15" fill="rgb(224,95,51)" fg:x="6909" fg:w="3221"/><text x="68.0185%" y="943.50">std::sys::unix::fs::File::write</text></g><g><title>std::sys::unix::fd::FileDesc::write (3,221 samples, 31.59%)</title><rect x="67.7685%" y="917" width="31.5939%" height="15" fill="rgb(212,188,45)" fg:x="6909" fg:w="3221"/><text x="68.0185%" y="927.50">std::sys::unix::fd::FileDesc::write</text></g><g><title>std::sys::unix::cvt (7 samples, 0.07%)</title><rect x="99.2938%" y="901" width="0.0687%" height="15" fill="rgb(223,154,38)" fg:x="10123" fg:w="7"/><text x="99.5438%" y="911.50"></text></g><g><title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (7 samples, 0.07%)</title><rect x="99.2938%" y="885" width="0.0687%" height="15" fill="rgb(251,22,52)" fg:x="10123" fg:w="7"/><text x="99.5438%" y="895.50"></text></g><g><title>__GI___clone (9,915 samples, 97.25%)</title><rect x="2.1383%" y="1077" width="97.2536%" height="15" fill="rgb(229,209,22)" fg:x="218" fg:w="9915"/><text x="2.3883%" y="1087.50">__GI___clone</text></g><g><title>start_thread (9,893 samples, 97.04%)</title><rect x="2.3541%" y="1061" width="97.0378%" height="15" fill="rgb(234,138,34)" fg:x="240" fg:w="9893"/><text x="2.6041%" y="1071.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (9,892 samples, 97.03%)</title><rect x="2.3639%" y="1045" width="97.0280%" height="15" fill="rgb(212,95,11)" fg:x="241" fg:w="9892"/><text x="2.6139%" y="1055.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (3 samples, 0.03%)</title><rect x="99.3624%" y="1029" width="0.0294%" height="15" fill="rgb(240,179,47)" fg:x="10130" fg:w="3"/><text x="99.6124%" y="1039.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (3 samples, 0.03%)</title><rect x="99.3624%" y="1013" width="0.0294%" height="15" fill="rgb(240,163,11)" fg:x="10130" fg:w="3"/><text x="99.6124%" y="1023.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (3 samples, 0.03%)</title><rect x="99.3624%" y="997" width="0.0294%" height="15" fill="rgb(236,37,12)" fg:x="10130" fg:w="3"/><text x="99.6124%" y="1007.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (3 samples, 0.03%)</title><rect x="99.3624%" y="981" width="0.0294%" height="15" fill="rgb(232,164,16)" fg:x="10130" fg:w="3"/><text x="99.6124%" y="991.50"></text></g><g><title>__GI___mprotect (2 samples, 0.02%)</title><rect x="99.3722%" y="965" width="0.0196%" height="15" fill="rgb(244,205,15)" fg:x="10131" fg:w="2"/><text x="99.6222%" y="975.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.3722%" y="949" width="0.0196%" height="15" fill="rgb(223,117,47)" fg:x="10131" fg:w="2"/><text x="99.6222%" y="959.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.3722%" y="933" width="0.0196%" height="15" fill="rgb(244,107,35)" fg:x="10131" fg:w="2"/><text x="99.6222%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.3722%" y="917" width="0.0196%" height="15" fill="rgb(205,140,8)" fg:x="10131" fg:w="2"/><text x="99.6222%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.3722%" y="901" width="0.0196%" height="15" fill="rgb(228,84,46)" fg:x="10131" fg:w="2"/><text x="99.6222%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.3722%" y="885" width="0.0196%" height="15" fill="rgb(254,188,9)" fg:x="10131" fg:w="2"/><text x="99.6222%" y="895.50"></text></g><g><title>_int_realloc (6 samples, 0.06%)</title><rect x="99.3919%" y="1077" width="0.0589%" height="15" fill="rgb(206,112,54)" fg:x="10133" fg:w="6"/><text x="99.6419%" y="1087.50"></text></g><g><title>&lt;std::net::tcp::Incoming as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="99.4507%" y="901" width="0.0490%" height="15" fill="rgb(216,84,49)" fg:x="10139" fg:w="5"/><text x="99.7007%" y="911.50"></text></g><g><title>std::net::tcp::TcpListener::accept (5 samples, 0.05%)</title><rect x="99.4507%" y="885" width="0.0490%" height="15" fill="rgb(214,194,35)" fg:x="10139" fg:w="5"/><text x="99.7007%" y="895.50"></text></g><g><title>std::sys_common::net::TcpListener::accept (5 samples, 0.05%)</title><rect x="99.4507%" y="869" width="0.0490%" height="15" fill="rgb(249,28,3)" fg:x="10139" fg:w="5"/><text x="99.7007%" y="879.50"></text></g><g><title>std::sys::unix::net::Socket::accept (5 samples, 0.05%)</title><rect x="99.4507%" y="853" width="0.0490%" height="15" fill="rgb(222,56,52)" fg:x="10139" fg:w="5"/><text x="99.7007%" y="863.50"></text></g><g><title>std::sys::unix::cvt_r (5 samples, 0.05%)</title><rect x="99.4507%" y="837" width="0.0490%" height="15" fill="rgb(245,217,50)" fg:x="10139" fg:w="5"/><text x="99.7007%" y="847.50"></text></g><g><title>std::sys::unix::net::Socket::accept::{{closure}} (5 samples, 0.05%)</title><rect x="99.4507%" y="821" width="0.0490%" height="15" fill="rgb(213,201,24)" fg:x="10139" fg:w="5"/><text x="99.7007%" y="831.50"></text></g><g><title>accept4 (5 samples, 0.05%)</title><rect x="99.4507%" y="805" width="0.0490%" height="15" fill="rgb(248,116,28)" fg:x="10139" fg:w="5"/><text x="99.7007%" y="815.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.4507%" y="789" width="0.0490%" height="15" fill="rgb(219,72,43)" fg:x="10139" fg:w="5"/><text x="99.7007%" y="799.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.4507%" y="773" width="0.0490%" height="15" fill="rgb(209,138,14)" fg:x="10139" fg:w="5"/><text x="99.7007%" y="783.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.4507%" y="757" width="0.0490%" height="15" fill="rgb(222,18,33)" fg:x="10139" fg:w="5"/><text x="99.7007%" y="767.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.4507%" y="741" width="0.0490%" height="15" fill="rgb(213,199,7)" fg:x="10139" fg:w="5"/><text x="99.7007%" y="751.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="99.4605%" y="725" width="0.0392%" height="15" fill="rgb(250,110,10)" fg:x="10140" fg:w="4"/><text x="99.7105%" y="735.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="99.4605%" y="709" width="0.0392%" height="15" fill="rgb(248,123,6)" fg:x="10140" fg:w="4"/><text x="99.7105%" y="719.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="99.4605%" y="693" width="0.0392%" height="15" fill="rgb(206,91,31)" fg:x="10140" fg:w="4"/><text x="99.7105%" y="703.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="99.4605%" y="677" width="0.0392%" height="15" fill="rgb(211,154,13)" fg:x="10140" fg:w="4"/><text x="99.7105%" y="687.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="99.4605%" y="661" width="0.0392%" height="15" fill="rgb(225,148,7)" fg:x="10140" fg:w="4"/><text x="99.7105%" y="671.50"></text></g><g><title>_start (37 samples, 0.36%)</title><rect x="99.4507%" y="1077" width="0.3629%" height="15" fill="rgb(220,160,43)" fg:x="10139" fg:w="37"/><text x="99.7007%" y="1087.50"></text></g><g><title>__libc_start_main (37 samples, 0.36%)</title><rect x="99.4507%" y="1061" width="0.3629%" height="15" fill="rgb(213,52,39)" fg:x="10139" fg:w="37"/><text x="99.7007%" y="1071.50"></text></g><g><title>main (37 samples, 0.36%)</title><rect x="99.4507%" y="1045" width="0.3629%" height="15" fill="rgb(243,137,7)" fg:x="10139" fg:w="37"/><text x="99.7007%" y="1055.50"></text></g><g><title>std::rt::lang_start_internal (37 samples, 0.36%)</title><rect x="99.4507%" y="1029" width="0.3629%" height="15" fill="rgb(230,79,13)" fg:x="10139" fg:w="37"/><text x="99.7007%" y="1039.50"></text></g><g><title>std::panic::catch_unwind (37 samples, 0.36%)</title><rect x="99.4507%" y="1013" width="0.3629%" height="15" fill="rgb(247,105,23)" fg:x="10139" fg:w="37"/><text x="99.7007%" y="1023.50"></text></g><g><title>std::panicking::try (37 samples, 0.36%)</title><rect x="99.4507%" y="997" width="0.3629%" height="15" fill="rgb(223,179,41)" fg:x="10139" fg:w="37"/><text x="99.7007%" y="1007.50"></text></g><g><title>std::panicking::try::do_call (37 samples, 0.36%)</title><rect x="99.4507%" y="981" width="0.3629%" height="15" fill="rgb(218,9,34)" fg:x="10139" fg:w="37"/><text x="99.7007%" y="991.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (37 samples, 0.36%)</title><rect x="99.4507%" y="965" width="0.3629%" height="15" fill="rgb(222,106,8)" fg:x="10139" fg:w="37"/><text x="99.7007%" y="975.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (37 samples, 0.36%)</title><rect x="99.4507%" y="949" width="0.3629%" height="15" fill="rgb(211,220,0)" fg:x="10139" fg:w="37"/><text x="99.7007%" y="959.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (37 samples, 0.36%)</title><rect x="99.4507%" y="933" width="0.3629%" height="15" fill="rgb(229,52,16)" fg:x="10139" fg:w="37"/><text x="99.7007%" y="943.50"></text></g><g><title>advent_uniq::main (37 samples, 0.36%)</title><rect x="99.4507%" y="917" width="0.3629%" height="15" fill="rgb(212,155,18)" fg:x="10139" fg:w="37"/><text x="99.7007%" y="927.50"></text></g><g><title>std::thread::sleep (31 samples, 0.30%)</title><rect x="99.5096%" y="901" width="0.3041%" height="15" fill="rgb(242,21,14)" fg:x="10145" fg:w="31"/><text x="99.7596%" y="911.50"></text></g><g><title>std::sys::unix::thread::Thread::sleep (31 samples, 0.30%)</title><rect x="99.5096%" y="885" width="0.3041%" height="15" fill="rgb(222,19,48)" fg:x="10145" fg:w="31"/><text x="99.7596%" y="895.50"></text></g><g><title>__GI___nanosleep (31 samples, 0.30%)</title><rect x="99.5096%" y="869" width="0.3041%" height="15" fill="rgb(232,45,27)" fg:x="10145" fg:w="31"/><text x="99.7596%" y="879.50"></text></g><g><title>__GI___clock_nanosleep (31 samples, 0.30%)</title><rect x="99.5096%" y="853" width="0.3041%" height="15" fill="rgb(249,103,42)" fg:x="10145" fg:w="31"/><text x="99.7596%" y="863.50"></text></g><g><title>[unknown] (31 samples, 0.30%)</title><rect x="99.5096%" y="837" width="0.3041%" height="15" fill="rgb(246,81,33)" fg:x="10145" fg:w="31"/><text x="99.7596%" y="847.50"></text></g><g><title>[unknown] (31 samples, 0.30%)</title><rect x="99.5096%" y="821" width="0.3041%" height="15" fill="rgb(252,33,42)" fg:x="10145" fg:w="31"/><text x="99.7596%" y="831.50"></text></g><g><title>[unknown] (31 samples, 0.30%)</title><rect x="99.5096%" y="805" width="0.3041%" height="15" fill="rgb(209,212,41)" fg:x="10145" fg:w="31"/><text x="99.7596%" y="815.50"></text></g><g><title>[unknown] (31 samples, 0.30%)</title><rect x="99.5096%" y="789" width="0.3041%" height="15" fill="rgb(207,154,6)" fg:x="10145" fg:w="31"/><text x="99.7596%" y="799.50"></text></g><g><title>[unknown] (31 samples, 0.30%)</title><rect x="99.5096%" y="773" width="0.3041%" height="15" fill="rgb(223,64,47)" fg:x="10145" fg:w="31"/><text x="99.7596%" y="783.50"></text></g><g><title>[unknown] (31 samples, 0.30%)</title><rect x="99.5096%" y="757" width="0.3041%" height="15" fill="rgb(211,161,38)" fg:x="10145" fg:w="31"/><text x="99.7596%" y="767.50"></text></g><g><title>[unknown] (31 samples, 0.30%)</title><rect x="99.5096%" y="741" width="0.3041%" height="15" fill="rgb(219,138,40)" fg:x="10145" fg:w="31"/><text x="99.7596%" y="751.50"></text></g><g><title>[unknown] (31 samples, 0.30%)</title><rect x="99.5096%" y="725" width="0.3041%" height="15" fill="rgb(241,228,46)" fg:x="10145" fg:w="31"/><text x="99.7596%" y="735.50"></text></g><g><title>[unknown] (31 samples, 0.30%)</title><rect x="99.5096%" y="709" width="0.3041%" height="15" fill="rgb(223,209,38)" fg:x="10145" fg:w="31"/><text x="99.7596%" y="719.50"></text></g><g><title>[unknown] (30 samples, 0.29%)</title><rect x="99.5194%" y="693" width="0.2943%" height="15" fill="rgb(236,164,45)" fg:x="10146" fg:w="30"/><text x="99.7694%" y="703.50"></text></g><g><title>[unknown] (30 samples, 0.29%)</title><rect x="99.5194%" y="677" width="0.2943%" height="15" fill="rgb(231,15,5)" fg:x="10146" fg:w="30"/><text x="99.7694%" y="687.50"></text></g><g><title>[unknown] (30 samples, 0.29%)</title><rect x="99.5194%" y="661" width="0.2943%" height="15" fill="rgb(252,35,15)" fg:x="10146" fg:w="30"/><text x="99.7694%" y="671.50"></text></g><g><title>[unknown] (30 samples, 0.29%)</title><rect x="99.5194%" y="645" width="0.2943%" height="15" fill="rgb(248,181,18)" fg:x="10146" fg:w="30"/><text x="99.7694%" y="655.50"></text></g><g><title>[unknown] (30 samples, 0.29%)</title><rect x="99.5194%" y="629" width="0.2943%" height="15" fill="rgb(233,39,42)" fg:x="10146" fg:w="30"/><text x="99.7694%" y="639.50"></text></g><g><title>advent-uniq (10,189 samples, 99.94%)</title><rect x="0.0000%" y="1093" width="99.9411%" height="15" fill="rgb(238,110,33)" fg:x="0" fg:w="10189"/><text x="0.2500%" y="1103.50">advent-uniq</text></g><g><title>core::str::converts::from_utf8 (12 samples, 0.12%)</title><rect x="99.8234%" y="1077" width="0.1177%" height="15" fill="rgb(233,195,10)" fg:x="10177" fg:w="12"/><text x="100.0734%" y="1087.50"></text></g><g><title>all (10,195 samples, 100%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(254,105,3)" fg:x="0" fg:w="10195"/><text x="0.2500%" y="1119.50"></text></g><g><title>perf (6 samples, 0.06%)</title><rect x="99.9411%" y="1093" width="0.0589%" height="15" fill="rgb(221,225,9)" fg:x="10189" fg:w="6"/><text x="100.1911%" y="1103.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="99.9411%" y="1077" width="0.0589%" height="15" fill="rgb(224,227,45)" fg:x="10189" fg:w="6"/><text x="100.1911%" y="1087.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="99.9411%" y="1061" width="0.0589%" height="15" fill="rgb(229,198,43)" fg:x="10189" fg:w="6"/><text x="100.1911%" y="1071.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="99.9411%" y="1045" width="0.0589%" height="15" fill="rgb(206,209,35)" fg:x="10189" fg:w="6"/><text x="100.1911%" y="1055.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="99.9411%" y="1029" width="0.0589%" height="15" fill="rgb(245,195,53)" fg:x="10189" fg:w="6"/><text x="100.1911%" y="1039.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="99.9411%" y="1013" width="0.0589%" height="15" fill="rgb(240,92,26)" fg:x="10189" fg:w="6"/><text x="100.1911%" y="1023.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="99.9411%" y="997" width="0.0589%" height="15" fill="rgb(207,40,23)" fg:x="10189" fg:w="6"/><text x="100.1911%" y="1007.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="99.9411%" y="981" width="0.0589%" height="15" fill="rgb(223,111,35)" fg:x="10189" fg:w="6"/><text x="100.1911%" y="991.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="99.9411%" y="965" width="0.0589%" height="15" fill="rgb(229,147,28)" fg:x="10189" fg:w="6"/><text x="100.1911%" y="975.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9510%" y="949" width="0.0490%" height="15" fill="rgb(211,29,28)" fg:x="10190" fg:w="5"/><text x="100.2010%" y="959.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9510%" y="933" width="0.0490%" height="15" fill="rgb(228,72,33)" fg:x="10190" fg:w="5"/><text x="100.2010%" y="943.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9510%" y="917" width="0.0490%" height="15" fill="rgb(205,214,31)" fg:x="10190" fg:w="5"/><text x="100.2010%" y="927.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9510%" y="901" width="0.0490%" height="15" fill="rgb(224,111,15)" fg:x="10190" fg:w="5"/><text x="100.2010%" y="911.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9510%" y="885" width="0.0490%" height="15" fill="rgb(253,21,26)" fg:x="10190" fg:w="5"/><text x="100.2010%" y="895.50"></text></g></svg></svg>