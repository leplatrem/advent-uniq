<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1254" onload="init(evt)" viewBox="0 0 1200 1254" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1254" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1237.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1237.00"> </text><svg id="frames" x="10" width="1180" total_samples="9711"><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="0.0000%" y="1157" width="0.0103%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1167.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.01%)</title><rect x="0.0103%" y="1157" width="0.0103%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.2603%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.0103%" y="1141" width="0.0103%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.2603%" y="1151.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="0.0206%" y="1157" width="0.0103%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="1"/><text x="0.2706%" y="1167.50"></text></g><g><title>advent_uniq::Counter&lt;T&gt;::inc (1 samples, 0.01%)</title><rect x="0.0309%" y="1157" width="0.0103%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="1"/><text x="0.2809%" y="1167.50"></text></g><g><title>flume::Receiver&lt;T&gt;::recv (5 samples, 0.05%)</title><rect x="0.0412%" y="1157" width="0.0515%" height="15" fill="rgb(232,128,0)" fg:x="4" fg:w="5"/><text x="0.2912%" y="1167.50"></text></g><g><title>flume::Sender&lt;T&gt;::send (3 samples, 0.03%)</title><rect x="0.0927%" y="1157" width="0.0309%" height="15" fill="rgb(207,160,47)" fg:x="9" fg:w="3"/><text x="0.3427%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.01%)</title><rect x="0.1236%" y="1157" width="0.0103%" height="15" fill="rgb(228,23,34)" fg:x="12" fg:w="1"/><text x="0.3736%" y="1167.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.02%)</title><rect x="0.1339%" y="1157" width="0.0206%" height="15" fill="rgb(218,30,26)" fg:x="13" fg:w="2"/><text x="0.3839%" y="1167.50"></text></g><g><title>[[heap]] (17 samples, 0.18%)</title><rect x="0.0000%" y="1173" width="0.1751%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1183.50"></text></g><g><title>syscall (2 samples, 0.02%)</title><rect x="0.1545%" y="1157" width="0.0206%" height="15" fill="rgb(250,228,42)" fg:x="15" fg:w="2"/><text x="0.4045%" y="1167.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.01%)</title><rect x="0.1751%" y="1157" width="0.0103%" height="15" fill="rgb(240,193,28)" fg:x="17" fg:w="1"/><text x="0.4251%" y="1167.50"></text></g><g><title>[advent-uniq] (5 samples, 0.05%)</title><rect x="0.1751%" y="1173" width="0.0515%" height="15" fill="rgb(216,20,37)" fg:x="17" fg:w="5"/><text x="0.4251%" y="1183.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.04%)</title><rect x="0.1854%" y="1157" width="0.0412%" height="15" fill="rgb(206,188,39)" fg:x="18" fg:w="4"/><text x="0.4354%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="0.2162%" y="1141" width="0.0103%" height="15" fill="rgb(217,207,13)" fg:x="21" fg:w="1"/><text x="0.4662%" y="1151.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="0.2162%" y="1125" width="0.0103%" height="15" fill="rgb(231,73,38)" fg:x="21" fg:w="1"/><text x="0.4662%" y="1135.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="0.2162%" y="1109" width="0.0103%" height="15" fill="rgb(225,20,46)" fg:x="21" fg:w="1"/><text x="0.4662%" y="1119.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.03%)</title><rect x="0.2265%" y="1157" width="0.0309%" height="15" fill="rgb(210,31,41)" fg:x="22" fg:w="3"/><text x="0.4765%" y="1167.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="0.2471%" y="1141" width="0.0103%" height="15" fill="rgb(221,200,47)" fg:x="24" fg:w="1"/><text x="0.4971%" y="1151.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="0.2471%" y="1125" width="0.0103%" height="15" fill="rgb(226,26,5)" fg:x="24" fg:w="1"/><text x="0.4971%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="0.2471%" y="1109" width="0.0103%" height="15" fill="rgb(249,33,26)" fg:x="24" fg:w="1"/><text x="0.4971%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="0.2471%" y="1093" width="0.0103%" height="15" fill="rgb(235,183,28)" fg:x="24" fg:w="1"/><text x="0.4971%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="0.2471%" y="1077" width="0.0103%" height="15" fill="rgb(221,5,38)" fg:x="24" fg:w="1"/><text x="0.4971%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="0.2471%" y="1061" width="0.0103%" height="15" fill="rgb(247,18,42)" fg:x="24" fg:w="1"/><text x="0.4971%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="0.2471%" y="1045" width="0.0103%" height="15" fill="rgb(241,131,45)" fg:x="24" fg:w="1"/><text x="0.4971%" y="1055.50"></text></g><g><title>&lt;flume::signal::SyncSignal as flume::signal::Signal&gt;::fire (2 samples, 0.02%)</title><rect x="0.2574%" y="1157" width="0.0206%" height="15" fill="rgb(249,31,29)" fg:x="25" fg:w="2"/><text x="0.5074%" y="1167.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="0.2780%" y="1157" width="0.0103%" height="15" fill="rgb(225,111,53)" fg:x="27" fg:w="1"/><text x="0.5280%" y="1167.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 0.01%)</title><rect x="0.2780%" y="1141" width="0.0103%" height="15" fill="rgb(238,160,17)" fg:x="27" fg:w="1"/><text x="0.5280%" y="1151.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.01%)</title><rect x="0.2780%" y="1125" width="0.0103%" height="15" fill="rgb(214,148,48)" fg:x="27" fg:w="1"/><text x="0.5280%" y="1135.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="0.2883%" y="1157" width="0.0103%" height="15" fill="rgb(232,36,49)" fg:x="28" fg:w="1"/><text x="0.5383%" y="1167.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="0.2986%" y="1157" width="0.0103%" height="15" fill="rgb(209,103,24)" fg:x="29" fg:w="1"/><text x="0.5486%" y="1167.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.02%)</title><rect x="0.3089%" y="1157" width="0.0206%" height="15" fill="rgb(229,88,8)" fg:x="30" fg:w="2"/><text x="0.5589%" y="1167.50"></text></g><g><title>__GI___libc_write (1 samples, 0.01%)</title><rect x="0.3295%" y="1157" width="0.0103%" height="15" fill="rgb(213,181,19)" fg:x="32" fg:w="1"/><text x="0.5795%" y="1167.50"></text></g><g><title>__GI___pthread_rwlock_wrlock (7 samples, 0.07%)</title><rect x="0.3398%" y="1157" width="0.0721%" height="15" fill="rgb(254,191,54)" fg:x="33" fg:w="7"/><text x="0.5898%" y="1167.50"></text></g><g><title>__libc_recv (6 samples, 0.06%)</title><rect x="0.4119%" y="1157" width="0.0618%" height="15" fill="rgb(241,83,37)" fg:x="40" fg:w="6"/><text x="0.6619%" y="1167.50"></text></g><g><title>__libc_recv (6 samples, 0.06%)</title><rect x="0.4119%" y="1141" width="0.0618%" height="15" fill="rgb(233,36,39)" fg:x="40" fg:w="6"/><text x="0.6619%" y="1151.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="0.4119%" y="1125" width="0.0618%" height="15" fill="rgb(226,3,54)" fg:x="40" fg:w="6"/><text x="0.6619%" y="1135.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="0.4737%" y="1157" width="0.0103%" height="15" fill="rgb(245,192,40)" fg:x="46" fg:w="1"/><text x="0.7237%" y="1167.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="0.4737%" y="1141" width="0.0103%" height="15" fill="rgb(238,167,29)" fg:x="46" fg:w="1"/><text x="0.7237%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="0.4840%" y="1157" width="0.0206%" height="15" fill="rgb(232,182,51)" fg:x="47" fg:w="2"/><text x="0.7340%" y="1167.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="0.5046%" y="1157" width="0.0309%" height="15" fill="rgb(231,60,39)" fg:x="49" fg:w="3"/><text x="0.7546%" y="1167.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.01%)</title><rect x="0.5355%" y="1157" width="0.0103%" height="15" fill="rgb(208,69,12)" fg:x="52" fg:w="1"/><text x="0.7855%" y="1167.50"></text></g><g><title>core::fmt::write (2 samples, 0.02%)</title><rect x="0.5458%" y="1157" width="0.0206%" height="15" fill="rgb(235,93,37)" fg:x="53" fg:w="2"/><text x="0.7958%" y="1167.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u64&gt;::from_str (2 samples, 0.02%)</title><rect x="0.5664%" y="1157" width="0.0206%" height="15" fill="rgb(213,116,39)" fg:x="55" fg:w="2"/><text x="0.8164%" y="1167.50"></text></g><g><title>flume::Sender&lt;T&gt;::send (10 samples, 0.10%)</title><rect x="0.5870%" y="1157" width="0.1030%" height="15" fill="rgb(222,207,29)" fg:x="57" fg:w="10"/><text x="0.8370%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.01%)</title><rect x="0.6899%" y="1157" width="0.0103%" height="15" fill="rgb(206,96,30)" fg:x="67" fg:w="1"/><text x="0.9399%" y="1167.50"></text></g><g><title>std::io::append_to_string (20 samples, 0.21%)</title><rect x="0.7002%" y="1157" width="0.2060%" height="15" fill="rgb(218,138,4)" fg:x="68" fg:w="20"/><text x="0.9502%" y="1167.50"></text></g><g><title>[anon] (72 samples, 0.74%)</title><rect x="0.2265%" y="1173" width="0.7414%" height="15" fill="rgb(250,191,14)" fg:x="22" fg:w="72"/><text x="0.4765%" y="1183.50"></text></g><g><title>std::sys::unix::memchr::memchr (6 samples, 0.06%)</title><rect x="0.9062%" y="1157" width="0.0618%" height="15" fill="rgb(239,60,40)" fg:x="88" fg:w="6"/><text x="1.1562%" y="1167.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (5 samples, 0.05%)</title><rect x="1.2563%" y="1157" width="0.0515%" height="15" fill="rgb(206,27,48)" fg:x="122" fg:w="5"/><text x="1.5063%" y="1167.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.01%)</title><rect x="1.2975%" y="1141" width="0.0103%" height="15" fill="rgb(225,35,8)" fg:x="126" fg:w="1"/><text x="1.5475%" y="1151.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.01%)</title><rect x="1.2975%" y="1125" width="0.0103%" height="15" fill="rgb(250,213,24)" fg:x="126" fg:w="1"/><text x="1.5475%" y="1135.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.01%)</title><rect x="1.2975%" y="1109" width="0.0103%" height="15" fill="rgb(247,123,22)" fg:x="126" fg:w="1"/><text x="1.5475%" y="1119.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="1.3078%" y="1157" width="0.0309%" height="15" fill="rgb(231,138,38)" fg:x="127" fg:w="3"/><text x="1.5578%" y="1167.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="1.3078%" y="1141" width="0.0309%" height="15" fill="rgb(231,145,46)" fg:x="127" fg:w="3"/><text x="1.5578%" y="1151.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="1.3078%" y="1125" width="0.0309%" height="15" fill="rgb(251,118,11)" fg:x="127" fg:w="3"/><text x="1.5578%" y="1135.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="1.3078%" y="1109" width="0.0309%" height="15" fill="rgb(217,147,25)" fg:x="127" fg:w="3"/><text x="1.5578%" y="1119.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="1.3078%" y="1093" width="0.0309%" height="15" fill="rgb(247,81,37)" fg:x="127" fg:w="3"/><text x="1.5578%" y="1103.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="1.3078%" y="1077" width="0.0309%" height="15" fill="rgb(209,12,38)" fg:x="127" fg:w="3"/><text x="1.5578%" y="1087.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="1.3078%" y="1061" width="0.0309%" height="15" fill="rgb(227,1,9)" fg:x="127" fg:w="3"/><text x="1.5578%" y="1071.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="1.3078%" y="1045" width="0.0309%" height="15" fill="rgb(248,47,43)" fg:x="127" fg:w="3"/><text x="1.5578%" y="1055.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="1.3078%" y="1029" width="0.0309%" height="15" fill="rgb(221,10,30)" fg:x="127" fg:w="3"/><text x="1.5578%" y="1039.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="1.3078%" y="1013" width="0.0309%" height="15" fill="rgb(210,229,1)" fg:x="127" fg:w="3"/><text x="1.5578%" y="1023.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="1.3078%" y="997" width="0.0309%" height="15" fill="rgb(222,148,37)" fg:x="127" fg:w="3"/><text x="1.5578%" y="1007.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="1.3078%" y="981" width="0.0309%" height="15" fill="rgb(234,67,33)" fg:x="127" fg:w="3"/><text x="1.5578%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="1.3284%" y="965" width="0.0103%" height="15" fill="rgb(247,98,35)" fg:x="129" fg:w="1"/><text x="1.5784%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="1.3284%" y="949" width="0.0103%" height="15" fill="rgb(247,138,52)" fg:x="129" fg:w="1"/><text x="1.5784%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="1.3284%" y="933" width="0.0103%" height="15" fill="rgb(213,79,30)" fg:x="129" fg:w="1"/><text x="1.5784%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="1.3284%" y="917" width="0.0103%" height="15" fill="rgb(246,177,23)" fg:x="129" fg:w="1"/><text x="1.5784%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="1.3284%" y="901" width="0.0103%" height="15" fill="rgb(230,62,27)" fg:x="129" fg:w="1"/><text x="1.5784%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="1.3284%" y="885" width="0.0103%" height="15" fill="rgb(216,154,8)" fg:x="129" fg:w="1"/><text x="1.5784%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="1.3284%" y="869" width="0.0103%" height="15" fill="rgb(244,35,45)" fg:x="129" fg:w="1"/><text x="1.5784%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="1.3284%" y="853" width="0.0103%" height="15" fill="rgb(251,115,12)" fg:x="129" fg:w="1"/><text x="1.5784%" y="863.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.04%)</title><rect x="1.3387%" y="1157" width="0.0412%" height="15" fill="rgb(240,54,50)" fg:x="130" fg:w="4"/><text x="1.5887%" y="1167.50"></text></g><g><title>__GI___pthread_rwlock_unlock (3 samples, 0.03%)</title><rect x="1.3799%" y="1157" width="0.0309%" height="15" fill="rgb(233,84,52)" fg:x="134" fg:w="3"/><text x="1.6299%" y="1167.50"></text></g><g><title>__GI___pthread_rwlock_wrlock (3 samples, 0.03%)</title><rect x="1.4108%" y="1157" width="0.0309%" height="15" fill="rgb(207,117,47)" fg:x="137" fg:w="3"/><text x="1.6608%" y="1167.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.01%)</title><rect x="1.4417%" y="1157" width="0.0103%" height="15" fill="rgb(249,43,39)" fg:x="140" fg:w="1"/><text x="1.6917%" y="1167.50"></text></g><g><title>__rdl_realloc (3 samples, 0.03%)</title><rect x="1.4520%" y="1157" width="0.0309%" height="15" fill="rgb(209,38,44)" fg:x="141" fg:w="3"/><text x="1.7020%" y="1167.50"></text></g><g><title>_int_realloc (4 samples, 0.04%)</title><rect x="1.4829%" y="1157" width="0.0412%" height="15" fill="rgb(236,212,23)" fg:x="144" fg:w="4"/><text x="1.7329%" y="1167.50"></text></g><g><title>advent_uniq::Counter&lt;T&gt;::inc (5 samples, 0.05%)</title><rect x="1.5240%" y="1157" width="0.0515%" height="15" fill="rgb(242,79,21)" fg:x="148" fg:w="5"/><text x="1.7740%" y="1167.50"></text></g><g><title>advent_uniq::handle_client (6 samples, 0.06%)</title><rect x="1.5755%" y="1157" width="0.0618%" height="15" fill="rgb(211,96,35)" fg:x="153" fg:w="6"/><text x="1.8255%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="1.6373%" y="1157" width="0.0103%" height="15" fill="rgb(253,215,40)" fg:x="159" fg:w="1"/><text x="1.8873%" y="1167.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.02%)</title><rect x="1.6476%" y="1157" width="0.0206%" height="15" fill="rgb(211,81,21)" fg:x="160" fg:w="2"/><text x="1.8976%" y="1167.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (2 samples, 0.02%)</title><rect x="1.6476%" y="1141" width="0.0206%" height="15" fill="rgb(208,190,38)" fg:x="160" fg:w="2"/><text x="1.8976%" y="1151.50"></text></g><g><title>core::fmt::write (2 samples, 0.02%)</title><rect x="1.6682%" y="1157" width="0.0206%" height="15" fill="rgb(235,213,38)" fg:x="162" fg:w="2"/><text x="1.9182%" y="1167.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (3 samples, 0.03%)</title><rect x="1.6888%" y="1157" width="0.0309%" height="15" fill="rgb(237,122,38)" fg:x="164" fg:w="3"/><text x="1.9388%" y="1167.50"></text></g><g><title>flume::Receiver&lt;T&gt;::recv (5 samples, 0.05%)</title><rect x="1.7197%" y="1157" width="0.0515%" height="15" fill="rgb(244,218,35)" fg:x="167" fg:w="5"/><text x="1.9697%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.01%)</title><rect x="1.7712%" y="1157" width="0.0103%" height="15" fill="rgb(240,68,47)" fg:x="172" fg:w="1"/><text x="2.0212%" y="1167.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.02%)</title><rect x="1.7815%" y="1157" width="0.0206%" height="15" fill="rgb(210,16,53)" fg:x="173" fg:w="2"/><text x="2.0315%" y="1167.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (15 samples, 0.15%)</title><rect x="1.8021%" y="1157" width="0.1545%" height="15" fill="rgb(235,124,12)" fg:x="175" fg:w="15"/><text x="2.0521%" y="1167.50"></text></g><g><title>std::sys_common::thread_info::ThreadInfo::with::{{closure}} (1 samples, 0.01%)</title><rect x="1.9565%" y="1157" width="0.0103%" height="15" fill="rgb(224,169,11)" fg:x="190" fg:w="1"/><text x="2.2065%" y="1167.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (1 samples, 0.01%)</title><rect x="1.9565%" y="1141" width="0.0103%" height="15" fill="rgb(250,166,2)" fg:x="190" fg:w="1"/><text x="2.2065%" y="1151.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (1 samples, 0.01%)</title><rect x="1.9565%" y="1125" width="0.0103%" height="15" fill="rgb(242,216,29)" fg:x="190" fg:w="1"/><text x="2.2065%" y="1135.50"></text></g><g><title>core::cell::BorrowRef::new (1 samples, 0.01%)</title><rect x="1.9565%" y="1109" width="0.0103%" height="15" fill="rgb(230,116,27)" fg:x="190" fg:w="1"/><text x="2.2065%" y="1119.50"></text></g><g><title>[unknown] (106 samples, 1.09%)</title><rect x="0.9680%" y="1173" width="1.0915%" height="15" fill="rgb(228,99,48)" fg:x="94" fg:w="106"/><text x="1.2180%" y="1183.50"></text></g><g><title>syscall (9 samples, 0.09%)</title><rect x="1.9668%" y="1157" width="0.0927%" height="15" fill="rgb(253,11,6)" fg:x="191" fg:w="9"/><text x="2.2168%" y="1167.50"></text></g><g><title>[unknown] (9 samples, 0.09%)</title><rect x="1.9668%" y="1141" width="0.0927%" height="15" fill="rgb(247,143,39)" fg:x="191" fg:w="9"/><text x="2.2168%" y="1151.50"></text></g><g><title>[unknown] (20 samples, 0.21%)</title><rect x="2.0595%" y="1157" width="0.2060%" height="15" fill="rgb(236,97,10)" fg:x="200" fg:w="20"/><text x="2.3095%" y="1167.50"></text></g><g><title>[unknown] (20 samples, 0.21%)</title><rect x="2.0595%" y="1141" width="0.2060%" height="15" fill="rgb(233,208,19)" fg:x="200" fg:w="20"/><text x="2.3095%" y="1151.50"></text></g><g><title>[unknown] (20 samples, 0.21%)</title><rect x="2.0595%" y="1125" width="0.2060%" height="15" fill="rgb(216,164,2)" fg:x="200" fg:w="20"/><text x="2.3095%" y="1135.50"></text></g><g><title>[unknown] (20 samples, 0.21%)</title><rect x="2.0595%" y="1109" width="0.2060%" height="15" fill="rgb(220,129,5)" fg:x="200" fg:w="20"/><text x="2.3095%" y="1119.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="2.0698%" y="1093" width="0.1957%" height="15" fill="rgb(242,17,10)" fg:x="201" fg:w="19"/><text x="2.3198%" y="1103.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="2.0698%" y="1077" width="0.1957%" height="15" fill="rgb(242,107,0)" fg:x="201" fg:w="19"/><text x="2.3198%" y="1087.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="2.0698%" y="1061" width="0.1957%" height="15" fill="rgb(251,28,31)" fg:x="201" fg:w="19"/><text x="2.3198%" y="1071.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="2.0698%" y="1045" width="0.1957%" height="15" fill="rgb(233,223,10)" fg:x="201" fg:w="19"/><text x="2.3198%" y="1055.50"></text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.01%)</title><rect x="2.2655%" y="1077" width="0.0103%" height="15" fill="rgb(215,21,27)" fg:x="220" fg:w="1"/><text x="2.5155%" y="1087.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.01%)</title><rect x="2.2655%" y="1061" width="0.0103%" height="15" fill="rgb(232,23,21)" fg:x="220" fg:w="1"/><text x="2.5155%" y="1071.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="2.2655%" y="1045" width="0.0103%" height="15" fill="rgb(244,5,23)" fg:x="220" fg:w="1"/><text x="2.5155%" y="1055.50"></text></g><g><title>tcache_init (1 samples, 0.01%)</title><rect x="2.2655%" y="1029" width="0.0103%" height="15" fill="rgb(226,81,46)" fg:x="220" fg:w="1"/><text x="2.5155%" y="1039.50"></text></g><g><title>tcache_init (1 samples, 0.01%)</title><rect x="2.2655%" y="1013" width="0.0103%" height="15" fill="rgb(247,70,30)" fg:x="220" fg:w="1"/><text x="2.5155%" y="1023.50"></text></g><g><title>arena_get2 (1 samples, 0.01%)</title><rect x="2.2655%" y="997" width="0.0103%" height="15" fill="rgb(212,68,19)" fg:x="220" fg:w="1"/><text x="2.5155%" y="1007.50"></text></g><g><title>arena_get2 (1 samples, 0.01%)</title><rect x="2.2655%" y="981" width="0.0103%" height="15" fill="rgb(240,187,13)" fg:x="220" fg:w="1"/><text x="2.5155%" y="991.50"></text></g><g><title>_int_new_arena (1 samples, 0.01%)</title><rect x="2.2655%" y="965" width="0.0103%" height="15" fill="rgb(223,113,26)" fg:x="220" fg:w="1"/><text x="2.5155%" y="975.50"></text></g><g><title>new_heap (1 samples, 0.01%)</title><rect x="2.2655%" y="949" width="0.0103%" height="15" fill="rgb(206,192,2)" fg:x="220" fg:w="1"/><text x="2.5155%" y="959.50"></text></g><g><title>__GI_munmap (1 samples, 0.01%)</title><rect x="2.2655%" y="933" width="0.0103%" height="15" fill="rgb(241,108,4)" fg:x="220" fg:w="1"/><text x="2.5155%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="2.2655%" y="917" width="0.0103%" height="15" fill="rgb(247,173,49)" fg:x="220" fg:w="1"/><text x="2.5155%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="2.2655%" y="901" width="0.0103%" height="15" fill="rgb(224,114,35)" fg:x="220" fg:w="1"/><text x="2.5155%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="2.2655%" y="885" width="0.0103%" height="15" fill="rgb(245,159,27)" fg:x="220" fg:w="1"/><text x="2.5155%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="2.2655%" y="869" width="0.0103%" height="15" fill="rgb(245,172,44)" fg:x="220" fg:w="1"/><text x="2.5155%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="2.2655%" y="853" width="0.0103%" height="15" fill="rgb(236,23,11)" fg:x="220" fg:w="1"/><text x="2.5155%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="2.2655%" y="837" width="0.0103%" height="15" fill="rgb(205,117,38)" fg:x="220" fg:w="1"/><text x="2.5155%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="2.2655%" y="821" width="0.0103%" height="15" fill="rgb(237,72,25)" fg:x="220" fg:w="1"/><text x="2.5155%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="2.2655%" y="805" width="0.0103%" height="15" fill="rgb(244,70,9)" fg:x="220" fg:w="1"/><text x="2.5155%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.21%)</title><rect x="5.1179%" y="1061" width="0.2060%" height="15" fill="rgb(217,125,39)" fg:x="497" fg:w="20"/><text x="5.3679%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.3136%" y="1045" width="0.0103%" height="15" fill="rgb(235,36,10)" fg:x="516" fg:w="1"/><text x="5.5636%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.3136%" y="1029" width="0.0103%" height="15" fill="rgb(251,123,47)" fg:x="516" fg:w="1"/><text x="5.5636%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.3136%" y="1013" width="0.0103%" height="15" fill="rgb(221,13,13)" fg:x="516" fg:w="1"/><text x="5.5636%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.3136%" y="997" width="0.0103%" height="15" fill="rgb(238,131,9)" fg:x="516" fg:w="1"/><text x="5.5636%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.3136%" y="981" width="0.0103%" height="15" fill="rgb(211,50,8)" fg:x="516" fg:w="1"/><text x="5.5636%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.3136%" y="965" width="0.0103%" height="15" fill="rgb(245,182,24)" fg:x="516" fg:w="1"/><text x="5.5636%" y="975.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="5.3239%" y="1061" width="0.0206%" height="15" fill="rgb(242,14,37)" fg:x="517" fg:w="2"/><text x="5.5739%" y="1071.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="5.3239%" y="1045" width="0.0206%" height="15" fill="rgb(246,228,12)" fg:x="517" fg:w="2"/><text x="5.5739%" y="1055.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="5.3239%" y="1029" width="0.0206%" height="15" fill="rgb(213,55,15)" fg:x="517" fg:w="2"/><text x="5.5739%" y="1039.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="5.3239%" y="1013" width="0.0206%" height="15" fill="rgb(209,9,3)" fg:x="517" fg:w="2"/><text x="5.5739%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.3342%" y="997" width="0.0103%" height="15" fill="rgb(230,59,30)" fg:x="518" fg:w="1"/><text x="5.5842%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.3342%" y="981" width="0.0103%" height="15" fill="rgb(209,121,21)" fg:x="518" fg:w="1"/><text x="5.5842%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.3342%" y="965" width="0.0103%" height="15" fill="rgb(220,109,13)" fg:x="518" fg:w="1"/><text x="5.5842%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.3342%" y="949" width="0.0103%" height="15" fill="rgb(232,18,1)" fg:x="518" fg:w="1"/><text x="5.5842%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.3342%" y="933" width="0.0103%" height="15" fill="rgb(215,41,42)" fg:x="518" fg:w="1"/><text x="5.5842%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.3342%" y="917" width="0.0103%" height="15" fill="rgb(224,123,36)" fg:x="518" fg:w="1"/><text x="5.5842%" y="927.50"></text></g><g><title>__GI___libc_free (23 samples, 0.24%)</title><rect x="5.3445%" y="1061" width="0.2368%" height="15" fill="rgb(240,125,3)" fg:x="519" fg:w="23"/><text x="5.5945%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.7140%" y="1029" width="0.0103%" height="15" fill="rgb(205,98,50)" fg:x="652" fg:w="1"/><text x="6.9640%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.7140%" y="1013" width="0.0103%" height="15" fill="rgb(205,185,37)" fg:x="652" fg:w="1"/><text x="6.9640%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.7140%" y="997" width="0.0103%" height="15" fill="rgb(238,207,15)" fg:x="652" fg:w="1"/><text x="6.9640%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.7140%" y="981" width="0.0103%" height="15" fill="rgb(213,199,42)" fg:x="652" fg:w="1"/><text x="6.9640%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.7140%" y="965" width="0.0103%" height="15" fill="rgb(235,201,11)" fg:x="652" fg:w="1"/><text x="6.9640%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.7140%" y="949" width="0.0103%" height="15" fill="rgb(207,46,11)" fg:x="652" fg:w="1"/><text x="6.9640%" y="959.50"></text></g><g><title>__GI___pthread_rwlock_unlock (114 samples, 1.17%)</title><rect x="5.5813%" y="1061" width="1.1739%" height="15" fill="rgb(241,35,35)" fg:x="542" fg:w="114"/><text x="5.8313%" y="1071.50"></text></g><g><title>__pthread_rwlock_wrunlock (112 samples, 1.15%)</title><rect x="5.6019%" y="1045" width="1.1533%" height="15" fill="rgb(243,32,47)" fg:x="544" fg:w="112"/><text x="5.8519%" y="1055.50"></text></g><g><title>__pthread_rwlock_get_private (3 samples, 0.03%)</title><rect x="6.7243%" y="1029" width="0.0309%" height="15" fill="rgb(247,202,23)" fg:x="653" fg:w="3"/><text x="6.9743%" y="1039.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="6.7552%" y="1061" width="0.0103%" height="15" fill="rgb(219,102,11)" fg:x="656" fg:w="1"/><text x="7.0052%" y="1071.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="6.7552%" y="1045" width="0.0103%" height="15" fill="rgb(243,110,44)" fg:x="656" fg:w="1"/><text x="7.0052%" y="1055.50"></text></g><g><title>_int_free (7 samples, 0.07%)</title><rect x="6.7655%" y="1061" width="0.0721%" height="15" fill="rgb(222,74,54)" fg:x="657" fg:w="7"/><text x="7.0155%" y="1071.50"></text></g><g><title>tcache_put (3 samples, 0.03%)</title><rect x="6.8067%" y="1045" width="0.0309%" height="15" fill="rgb(216,99,12)" fg:x="661" fg:w="3"/><text x="7.0567%" y="1055.50"></text></g><g><title>advent_uniq::Counter&lt;T&gt;::inc (150 samples, 1.54%)</title><rect x="6.8376%" y="1061" width="1.5446%" height="15" fill="rgb(226,22,26)" fg:x="664" fg:w="150"/><text x="7.0876%" y="1071.50"></text></g><g><title>__GI___pthread_rwlock_wrlock (133 samples, 1.37%)</title><rect x="7.0127%" y="1045" width="1.3696%" height="15" fill="rgb(217,163,10)" fg:x="681" fg:w="133"/><text x="7.2627%" y="1055.50"></text></g><g><title>__pthread_rwlock_wrlock_full (131 samples, 1.35%)</title><rect x="7.0333%" y="1029" width="1.3490%" height="15" fill="rgb(213,25,53)" fg:x="683" fg:w="131"/><text x="7.2833%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="8.7839%" y="1013" width="0.0206%" height="15" fill="rgb(252,105,26)" fg:x="853" fg:w="2"/><text x="9.0339%" y="1023.50"></text></g><g><title>&lt;u64 as core::num::FromStrRadixHelper&gt;::checked_add (1 samples, 0.01%)</title><rect x="8.8044%" y="1013" width="0.0103%" height="15" fill="rgb(220,39,43)" fg:x="855" fg:w="1"/><text x="9.0544%" y="1023.50"></text></g><g><title>&lt;u64 as core::num::FromStrRadixHelper&gt;::checked_mul (11 samples, 0.11%)</title><rect x="8.8147%" y="1013" width="0.1133%" height="15" fill="rgb(229,68,48)" fg:x="856" fg:w="11"/><text x="9.0647%" y="1023.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_mul (11 samples, 0.11%)</title><rect x="8.8147%" y="997" width="0.1133%" height="15" fill="rgb(252,8,32)" fg:x="856" fg:w="11"/><text x="9.0647%" y="1007.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_mul (11 samples, 0.11%)</title><rect x="8.8147%" y="981" width="0.1133%" height="15" fill="rgb(223,20,43)" fg:x="856" fg:w="11"/><text x="9.0647%" y="991.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u64&gt;::from_str (51 samples, 0.53%)</title><rect x="8.5676%" y="1045" width="0.5252%" height="15" fill="rgb(229,81,49)" fg:x="832" fg:w="51"/><text x="8.8176%" y="1055.50"></text></g><g><title>core::num::from_str_radix (51 samples, 0.53%)</title><rect x="8.5676%" y="1029" width="0.5252%" height="15" fill="rgb(236,28,36)" fg:x="832" fg:w="51"/><text x="8.8176%" y="1039.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::to_digit (16 samples, 0.16%)</title><rect x="8.9280%" y="1013" width="0.1648%" height="15" fill="rgb(249,185,26)" fg:x="867" fg:w="16"/><text x="9.1780%" y="1023.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (7 samples, 0.07%)</title><rect x="9.0207%" y="997" width="0.0721%" height="15" fill="rgb(249,174,33)" fg:x="876" fg:w="7"/><text x="9.2707%" y="1007.50"></text></g><g><title>&lt;flume::signal::SyncSignal as flume::signal::Signal&gt;::fire (435 samples, 4.48%)</title><rect x="10.2976%" y="1029" width="4.4795%" height="15" fill="rgb(233,201,37)" fg:x="1000" fg:w="435"/><text x="10.5476%" y="1039.50">&lt;flum..</text></g><g><title>syscall (429 samples, 4.42%)</title><rect x="10.3594%" y="1013" width="4.4177%" height="15" fill="rgb(221,78,26)" fg:x="1006" fg:w="429"/><text x="10.6094%" y="1023.50">sysca..</text></g><g><title>[unknown] (428 samples, 4.41%)</title><rect x="10.3697%" y="997" width="4.4074%" height="15" fill="rgb(250,127,30)" fg:x="1007" fg:w="428"/><text x="10.6197%" y="1007.50">[unkn..</text></g><g><title>[unknown] (416 samples, 4.28%)</title><rect x="10.4933%" y="981" width="4.2838%" height="15" fill="rgb(230,49,44)" fg:x="1019" fg:w="416"/><text x="10.7433%" y="991.50">[unkn..</text></g><g><title>[unknown] (408 samples, 4.20%)</title><rect x="10.5756%" y="965" width="4.2014%" height="15" fill="rgb(229,67,23)" fg:x="1027" fg:w="408"/><text x="10.8256%" y="975.50">[unkn..</text></g><g><title>[unknown] (400 samples, 4.12%)</title><rect x="10.6580%" y="949" width="4.1190%" height="15" fill="rgb(249,83,47)" fg:x="1035" fg:w="400"/><text x="10.9080%" y="959.50">[unk..</text></g><g><title>[unknown] (394 samples, 4.06%)</title><rect x="10.7198%" y="933" width="4.0573%" height="15" fill="rgb(215,43,3)" fg:x="1041" fg:w="394"/><text x="10.9698%" y="943.50">[unk..</text></g><g><title>[unknown] (364 samples, 3.75%)</title><rect x="11.0287%" y="917" width="3.7483%" height="15" fill="rgb(238,154,13)" fg:x="1071" fg:w="364"/><text x="11.2787%" y="927.50">[unk..</text></g><g><title>[unknown] (347 samples, 3.57%)</title><rect x="11.2038%" y="901" width="3.5733%" height="15" fill="rgb(219,56,2)" fg:x="1088" fg:w="347"/><text x="11.4538%" y="911.50">[unk..</text></g><g><title>[unknown] (279 samples, 2.87%)</title><rect x="11.9040%" y="885" width="2.8730%" height="15" fill="rgb(233,0,4)" fg:x="1156" fg:w="279"/><text x="12.1540%" y="895.50">[u..</text></g><g><title>[unknown] (231 samples, 2.38%)</title><rect x="12.3983%" y="869" width="2.3787%" height="15" fill="rgb(235,30,7)" fg:x="1204" fg:w="231"/><text x="12.6483%" y="879.50">[u..</text></g><g><title>[unknown] (205 samples, 2.11%)</title><rect x="12.6660%" y="853" width="2.1110%" height="15" fill="rgb(250,79,13)" fg:x="1230" fg:w="205"/><text x="12.9160%" y="863.50">[..</text></g><g><title>[unknown] (83 samples, 0.85%)</title><rect x="13.9224%" y="837" width="0.8547%" height="15" fill="rgb(211,146,34)" fg:x="1352" fg:w="83"/><text x="14.1724%" y="847.50"></text></g><g><title>[unknown] (41 samples, 0.42%)</title><rect x="14.3549%" y="821" width="0.4222%" height="15" fill="rgb(228,22,38)" fg:x="1394" fg:w="41"/><text x="14.6049%" y="831.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="14.5814%" y="805" width="0.1957%" height="15" fill="rgb(235,168,5)" fg:x="1416" fg:w="19"/><text x="14.8314%" y="815.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="14.7359%" y="789" width="0.0412%" height="15" fill="rgb(221,155,16)" fg:x="1431" fg:w="4"/><text x="14.9859%" y="799.50"></text></g><g><title>__GI___sched_yield (74 samples, 0.76%)</title><rect x="14.7771%" y="1029" width="0.7620%" height="15" fill="rgb(215,215,53)" fg:x="1435" fg:w="74"/><text x="15.0271%" y="1039.50"></text></g><g><title>[unknown] (71 samples, 0.73%)</title><rect x="14.8079%" y="1013" width="0.7311%" height="15" fill="rgb(223,4,10)" fg:x="1438" fg:w="71"/><text x="15.0579%" y="1023.50"></text></g><g><title>[unknown] (60 samples, 0.62%)</title><rect x="14.9212%" y="997" width="0.6179%" height="15" fill="rgb(234,103,6)" fg:x="1449" fg:w="60"/><text x="15.1712%" y="1007.50"></text></g><g><title>[unknown] (60 samples, 0.62%)</title><rect x="14.9212%" y="981" width="0.6179%" height="15" fill="rgb(227,97,0)" fg:x="1449" fg:w="60"/><text x="15.1712%" y="991.50"></text></g><g><title>[unknown] (59 samples, 0.61%)</title><rect x="14.9315%" y="965" width="0.6076%" height="15" fill="rgb(234,150,53)" fg:x="1450" fg:w="59"/><text x="15.1815%" y="975.50"></text></g><g><title>[unknown] (54 samples, 0.56%)</title><rect x="14.9830%" y="949" width="0.5561%" height="15" fill="rgb(228,201,54)" fg:x="1455" fg:w="54"/><text x="15.2330%" y="959.50"></text></g><g><title>[unknown] (52 samples, 0.54%)</title><rect x="15.0036%" y="933" width="0.5355%" height="15" fill="rgb(222,22,37)" fg:x="1457" fg:w="52"/><text x="15.2536%" y="943.50"></text></g><g><title>[unknown] (34 samples, 0.35%)</title><rect x="15.1890%" y="917" width="0.3501%" height="15" fill="rgb(237,53,32)" fg:x="1475" fg:w="34"/><text x="15.4390%" y="927.50"></text></g><g><title>[unknown] (18 samples, 0.19%)</title><rect x="15.3537%" y="901" width="0.1854%" height="15" fill="rgb(233,25,53)" fg:x="1491" fg:w="18"/><text x="15.6037%" y="911.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="15.4361%" y="885" width="0.1030%" height="15" fill="rgb(210,40,34)" fg:x="1499" fg:w="10"/><text x="15.6861%" y="895.50"></text></g><g><title>std::thread::sleep (2 samples, 0.02%)</title><rect x="15.5391%" y="1029" width="0.0206%" height="15" fill="rgb(241,220,44)" fg:x="1509" fg:w="2"/><text x="15.7891%" y="1039.50"></text></g><g><title>std::sys::unix::thread::Thread::sleep (2 samples, 0.02%)</title><rect x="15.5391%" y="1013" width="0.0206%" height="15" fill="rgb(235,28,35)" fg:x="1509" fg:w="2"/><text x="15.7891%" y="1023.50"></text></g><g><title>__GI___nanosleep (2 samples, 0.02%)</title><rect x="15.5391%" y="997" width="0.0206%" height="15" fill="rgb(210,56,17)" fg:x="1509" fg:w="2"/><text x="15.7891%" y="1007.50"></text></g><g><title>__GI___clock_nanosleep (1 samples, 0.01%)</title><rect x="15.5494%" y="981" width="0.0103%" height="15" fill="rgb(224,130,29)" fg:x="1510" fg:w="1"/><text x="15.7994%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="15.5494%" y="965" width="0.0103%" height="15" fill="rgb(235,212,8)" fg:x="1510" fg:w="1"/><text x="15.7994%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="15.5494%" y="949" width="0.0103%" height="15" fill="rgb(223,33,50)" fg:x="1510" fg:w="1"/><text x="15.7994%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="15.5494%" y="933" width="0.0103%" height="15" fill="rgb(219,149,13)" fg:x="1510" fg:w="1"/><text x="15.7994%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="15.5494%" y="917" width="0.0103%" height="15" fill="rgb(250,156,29)" fg:x="1510" fg:w="1"/><text x="15.7994%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="15.5494%" y="901" width="0.0103%" height="15" fill="rgb(216,193,19)" fg:x="1510" fg:w="1"/><text x="15.7994%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="15.5494%" y="885" width="0.0103%" height="15" fill="rgb(216,135,14)" fg:x="1510" fg:w="1"/><text x="15.7994%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="15.5494%" y="869" width="0.0103%" height="15" fill="rgb(241,47,5)" fg:x="1510" fg:w="1"/><text x="15.7994%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="15.5494%" y="853" width="0.0103%" height="15" fill="rgb(233,42,35)" fg:x="1510" fg:w="1"/><text x="15.7994%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="15.5494%" y="837" width="0.0103%" height="15" fill="rgb(231,13,6)" fg:x="1510" fg:w="1"/><text x="15.7994%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="15.5494%" y="821" width="0.0103%" height="15" fill="rgb(207,181,40)" fg:x="1510" fg:w="1"/><text x="15.7994%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="15.5494%" y="805" width="0.0103%" height="15" fill="rgb(254,173,49)" fg:x="1510" fg:w="1"/><text x="15.7994%" y="815.50"></text></g><g><title>flume::Sender&lt;T&gt;::send (629 samples, 6.48%)</title><rect x="9.0928%" y="1045" width="6.4772%" height="15" fill="rgb(221,1,38)" fg:x="883" fg:w="629"/><text x="9.3428%" y="1055.50">flume::S..</text></g><g><title>std::thread::yield_now (1 samples, 0.01%)</title><rect x="15.5597%" y="1029" width="0.0103%" height="15" fill="rgb(206,124,46)" fg:x="1511" fg:w="1"/><text x="15.8097%" y="1039.50"></text></g><g><title>std::sys::unix::thread::Thread::yield_now (1 samples, 0.01%)</title><rect x="15.5597%" y="1013" width="0.0103%" height="15" fill="rgb(249,21,11)" fg:x="1511" fg:w="1"/><text x="15.8097%" y="1023.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::from_error (1 samples, 0.01%)</title><rect x="16.0951%" y="965" width="0.0103%" height="15" fill="rgb(222,201,40)" fg:x="1563" fg:w="1"/><text x="16.3451%" y="975.50"></text></g><g><title>[unknown] (3,511 samples, 36.15%)</title><rect x="16.3011%" y="933" width="36.1549%" height="15" fill="rgb(235,61,29)" fg:x="1583" fg:w="3511"/><text x="16.5511%" y="943.50">[unknown]</text></g><g><title>[unknown] (3,469 samples, 35.72%)</title><rect x="16.7336%" y="917" width="35.7224%" height="15" fill="rgb(219,207,3)" fg:x="1625" fg:w="3469"/><text x="16.9836%" y="927.50">[unknown]</text></g><g><title>[unknown] (3,441 samples, 35.43%)</title><rect x="17.0219%" y="901" width="35.4340%" height="15" fill="rgb(222,56,46)" fg:x="1653" fg:w="3441"/><text x="17.2719%" y="911.50">[unknown]</text></g><g><title>[unknown] (3,424 samples, 35.26%)</title><rect x="17.1970%" y="885" width="35.2590%" height="15" fill="rgb(239,76,54)" fg:x="1670" fg:w="3424"/><text x="17.4470%" y="895.50">[unknown]</text></g><g><title>[unknown] (3,388 samples, 34.89%)</title><rect x="17.5677%" y="869" width="34.8883%" height="15" fill="rgb(231,124,27)" fg:x="1706" fg:w="3388"/><text x="17.8177%" y="879.50">[unknown]</text></g><g><title>[unknown] (3,365 samples, 34.65%)</title><rect x="17.8046%" y="853" width="34.6514%" height="15" fill="rgb(249,195,6)" fg:x="1729" fg:w="3365"/><text x="18.0546%" y="863.50">[unknown]</text></g><g><title>[unknown] (3,342 samples, 34.41%)</title><rect x="18.0414%" y="837" width="34.4146%" height="15" fill="rgb(237,174,47)" fg:x="1752" fg:w="3342"/><text x="18.2914%" y="847.50">[unknown]</text></g><g><title>[unknown] (3,272 samples, 33.69%)</title><rect x="18.7622%" y="821" width="33.6937%" height="15" fill="rgb(206,201,31)" fg:x="1822" fg:w="3272"/><text x="19.0122%" y="831.50">[unknown]</text></g><g><title>[unknown] (3,165 samples, 32.59%)</title><rect x="19.8641%" y="805" width="32.5919%" height="15" fill="rgb(231,57,52)" fg:x="1929" fg:w="3165"/><text x="20.1141%" y="815.50">[unknown]</text></g><g><title>[unknown] (3,093 samples, 31.85%)</title><rect x="20.6055%" y="789" width="31.8505%" height="15" fill="rgb(248,177,22)" fg:x="2001" fg:w="3093"/><text x="20.8555%" y="799.50">[unknown]</text></g><g><title>[unknown] (3,008 samples, 30.98%)</title><rect x="21.4808%" y="773" width="30.9752%" height="15" fill="rgb(215,211,37)" fg:x="2086" fg:w="3008"/><text x="21.7308%" y="783.50">[unknown]</text></g><g><title>[unknown] (2,835 samples, 29.19%)</title><rect x="23.2623%" y="757" width="29.1937%" height="15" fill="rgb(241,128,51)" fg:x="2259" fg:w="2835"/><text x="23.5123%" y="767.50">[unknown]</text></g><g><title>[unknown] (2,674 samples, 27.54%)</title><rect x="24.9202%" y="741" width="27.5358%" height="15" fill="rgb(227,165,31)" fg:x="2420" fg:w="2674"/><text x="25.1702%" y="751.50">[unknown]</text></g><g><title>[unknown] (2,521 samples, 25.96%)</title><rect x="26.4957%" y="725" width="25.9603%" height="15" fill="rgb(228,167,24)" fg:x="2573" fg:w="2521"/><text x="26.7457%" y="735.50">[unknown]</text></g><g><title>[unknown] (2,384 samples, 24.55%)</title><rect x="27.9065%" y="709" width="24.5495%" height="15" fill="rgb(228,143,12)" fg:x="2710" fg:w="2384"/><text x="28.1565%" y="719.50">[unknown]</text></g><g><title>[unknown] (2,293 samples, 23.61%)</title><rect x="28.8436%" y="693" width="23.6124%" height="15" fill="rgb(249,149,8)" fg:x="2801" fg:w="2293"/><text x="29.0936%" y="703.50">[unknown]</text></g><g><title>[unknown] (2,196 samples, 22.61%)</title><rect x="29.8424%" y="677" width="22.6135%" height="15" fill="rgb(243,35,44)" fg:x="2898" fg:w="2196"/><text x="30.0924%" y="687.50">[unknown]</text></g><g><title>[unknown] (2,080 samples, 21.42%)</title><rect x="31.0370%" y="661" width="21.4190%" height="15" fill="rgb(246,89,9)" fg:x="3014" fg:w="2080"/><text x="31.2870%" y="671.50">[unknown]</text></g><g><title>[unknown] (1,900 samples, 19.57%)</title><rect x="32.8905%" y="645" width="19.5654%" height="15" fill="rgb(233,213,13)" fg:x="3194" fg:w="1900"/><text x="33.1405%" y="655.50">[unknown]</text></g><g><title>[unknown] (1,758 samples, 18.10%)</title><rect x="34.3528%" y="629" width="18.1032%" height="15" fill="rgb(233,141,41)" fg:x="3336" fg:w="1758"/><text x="34.6028%" y="639.50">[unknown]</text></g><g><title>[unknown] (1,665 samples, 17.15%)</title><rect x="35.3105%" y="613" width="17.1455%" height="15" fill="rgb(239,167,4)" fg:x="3429" fg:w="1665"/><text x="35.5605%" y="623.50">[unknown]</text></g><g><title>[unknown] (1,612 samples, 16.60%)</title><rect x="35.8562%" y="597" width="16.5997%" height="15" fill="rgb(209,217,16)" fg:x="3482" fg:w="1612"/><text x="36.1062%" y="607.50">[unknown]</text></g><g><title>[unknown] (1,536 samples, 15.82%)</title><rect x="36.6389%" y="581" width="15.8171%" height="15" fill="rgb(219,88,35)" fg:x="3558" fg:w="1536"/><text x="36.8889%" y="591.50">[unknown]</text></g><g><title>[unknown] (1,504 samples, 15.49%)</title><rect x="36.9684%" y="565" width="15.4876%" height="15" fill="rgb(220,193,23)" fg:x="3590" fg:w="1504"/><text x="37.2184%" y="575.50">[unknown]</text></g><g><title>[unknown] (1,444 samples, 14.87%)</title><rect x="37.5862%" y="549" width="14.8697%" height="15" fill="rgb(230,90,52)" fg:x="3650" fg:w="1444"/><text x="37.8362%" y="559.50">[unknown]</text></g><g><title>[unknown] (1,410 samples, 14.52%)</title><rect x="37.9364%" y="533" width="14.5196%" height="15" fill="rgb(252,106,19)" fg:x="3684" fg:w="1410"/><text x="38.1864%" y="543.50">[unknown]</text></g><g><title>[unknown] (1,388 samples, 14.29%)</title><rect x="38.1629%" y="517" width="14.2931%" height="15" fill="rgb(206,74,20)" fg:x="3706" fg:w="1388"/><text x="38.4129%" y="527.50">[unknown]</text></g><g><title>[unknown] (1,309 samples, 13.48%)</title><rect x="38.9764%" y="501" width="13.4796%" height="15" fill="rgb(230,138,44)" fg:x="3785" fg:w="1309"/><text x="39.2264%" y="511.50">[unknown]</text></g><g><title>[unknown] (1,241 samples, 12.78%)</title><rect x="39.6767%" y="485" width="12.7793%" height="15" fill="rgb(235,182,43)" fg:x="3853" fg:w="1241"/><text x="39.9267%" y="495.50">[unknown]</text></g><g><title>[unknown] (1,192 samples, 12.27%)</title><rect x="40.1812%" y="469" width="12.2747%" height="15" fill="rgb(242,16,51)" fg:x="3902" fg:w="1192"/><text x="40.4312%" y="479.50">[unknown]</text></g><g><title>[unknown] (1,134 samples, 11.68%)</title><rect x="40.7785%" y="453" width="11.6775%" height="15" fill="rgb(248,9,4)" fg:x="3960" fg:w="1134"/><text x="41.0285%" y="463.50">[unknown]</text></g><g><title>[unknown] (1,094 samples, 11.27%)</title><rect x="41.1904%" y="437" width="11.2656%" height="15" fill="rgb(210,31,22)" fg:x="4000" fg:w="1094"/><text x="41.4404%" y="447.50">[unknown]</text></g><g><title>[unknown] (942 samples, 9.70%)</title><rect x="42.7556%" y="421" width="9.7003%" height="15" fill="rgb(239,54,39)" fg:x="4152" fg:w="942"/><text x="43.0056%" y="431.50">[unknown]</text></g><g><title>[unknown] (823 samples, 8.47%)</title><rect x="43.9811%" y="405" width="8.4749%" height="15" fill="rgb(230,99,41)" fg:x="4271" fg:w="823"/><text x="44.2311%" y="415.50">[unknown]</text></g><g><title>[unknown] (733 samples, 7.55%)</title><rect x="44.9078%" y="389" width="7.5481%" height="15" fill="rgb(253,106,12)" fg:x="4361" fg:w="733"/><text x="45.1578%" y="399.50">[unknown]</text></g><g><title>[unknown] (662 samples, 6.82%)</title><rect x="45.6390%" y="373" width="6.8170%" height="15" fill="rgb(213,46,41)" fg:x="4432" fg:w="662"/><text x="45.8890%" y="383.50">[unknown]</text></g><g><title>[unknown] (537 samples, 5.53%)</title><rect x="46.9262%" y="357" width="5.5298%" height="15" fill="rgb(215,133,35)" fg:x="4557" fg:w="537"/><text x="47.1762%" y="367.50">[unknow..</text></g><g><title>[unknown] (411 samples, 4.23%)</title><rect x="48.2237%" y="341" width="4.2323%" height="15" fill="rgb(213,28,5)" fg:x="4683" fg:w="411"/><text x="48.4737%" y="351.50">[unkn..</text></g><g><title>[unknown] (361 samples, 3.72%)</title><rect x="48.7385%" y="325" width="3.7174%" height="15" fill="rgb(215,77,49)" fg:x="4733" fg:w="361"/><text x="48.9885%" y="335.50">[unk..</text></g><g><title>[unknown] (286 samples, 2.95%)</title><rect x="49.5109%" y="309" width="2.9451%" height="15" fill="rgb(248,100,22)" fg:x="4808" fg:w="286"/><text x="49.7609%" y="319.50">[u..</text></g><g><title>[unknown] (261 samples, 2.69%)</title><rect x="49.7683%" y="293" width="2.6877%" height="15" fill="rgb(208,67,9)" fg:x="4833" fg:w="261"/><text x="50.0183%" y="303.50">[u..</text></g><g><title>[unknown] (248 samples, 2.55%)</title><rect x="49.9022%" y="277" width="2.5538%" height="15" fill="rgb(219,133,21)" fg:x="4846" fg:w="248"/><text x="50.1522%" y="287.50">[u..</text></g><g><title>[unknown] (210 samples, 2.16%)</title><rect x="50.2935%" y="261" width="2.1625%" height="15" fill="rgb(246,46,29)" fg:x="4884" fg:w="210"/><text x="50.5435%" y="271.50">[..</text></g><g><title>[unknown] (193 samples, 1.99%)</title><rect x="50.4685%" y="245" width="1.9874%" height="15" fill="rgb(246,185,52)" fg:x="4901" fg:w="193"/><text x="50.7185%" y="255.50">[..</text></g><g><title>[unknown] (151 samples, 1.55%)</title><rect x="50.9010%" y="229" width="1.5549%" height="15" fill="rgb(252,136,11)" fg:x="4943" fg:w="151"/><text x="51.1510%" y="239.50"></text></g><g><title>[unknown] (94 samples, 0.97%)</title><rect x="51.4880%" y="213" width="0.9680%" height="15" fill="rgb(219,138,53)" fg:x="5000" fg:w="94"/><text x="51.7380%" y="223.50"></text></g><g><title>[unknown] (61 samples, 0.63%)</title><rect x="51.8278%" y="197" width="0.6282%" height="15" fill="rgb(211,51,23)" fg:x="5033" fg:w="61"/><text x="52.0778%" y="207.50"></text></g><g><title>[unknown] (45 samples, 0.46%)</title><rect x="51.9926%" y="181" width="0.4634%" height="15" fill="rgb(247,221,28)" fg:x="5049" fg:w="45"/><text x="52.2426%" y="191.50"></text></g><g><title>[unknown] (27 samples, 0.28%)</title><rect x="52.1779%" y="165" width="0.2780%" height="15" fill="rgb(251,222,45)" fg:x="5067" fg:w="27"/><text x="52.4279%" y="175.50"></text></g><g><title>[unknown] (12 samples, 0.12%)</title><rect x="52.3324%" y="149" width="0.1236%" height="15" fill="rgb(217,162,53)" fg:x="5082" fg:w="12"/><text x="52.5824%" y="159.50"></text></g><g><title>[unknown] (11 samples, 0.11%)</title><rect x="52.3427%" y="133" width="0.1133%" height="15" fill="rgb(229,93,14)" fg:x="5083" fg:w="11"/><text x="52.5927%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="52.4457%" y="117" width="0.0103%" height="15" fill="rgb(209,67,49)" fg:x="5093" fg:w="1"/><text x="52.6957%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="52.4457%" y="101" width="0.0103%" height="15" fill="rgb(213,87,29)" fg:x="5093" fg:w="1"/><text x="52.6957%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="52.4457%" y="85" width="0.0103%" height="15" fill="rgb(205,151,52)" fg:x="5093" fg:w="1"/><text x="52.6957%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="52.4457%" y="69" width="0.0103%" height="15" fill="rgb(253,215,39)" fg:x="5093" fg:w="1"/><text x="52.6957%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="52.4457%" y="53" width="0.0103%" height="15" fill="rgb(221,220,41)" fg:x="5093" fg:w="1"/><text x="52.6957%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="52.4457%" y="37" width="0.0103%" height="15" fill="rgb(218,133,21)" fg:x="5093" fg:w="1"/><text x="52.6957%" y="47.50"></text></g><g><title>__libc_disable_asynccancel (11 samples, 0.11%)</title><rect x="52.4560%" y="933" width="0.1133%" height="15" fill="rgb(221,193,43)" fg:x="5094" fg:w="11"/><text x="52.7060%" y="943.50"></text></g><g><title>__libc_recv (3,559 samples, 36.65%)</title><rect x="16.1054%" y="965" width="36.6492%" height="15" fill="rgb(240,128,52)" fg:x="1564" fg:w="3559"/><text x="16.3554%" y="975.50">__libc_recv</text></g><g><title>__libc_recv (3,554 samples, 36.60%)</title><rect x="16.1569%" y="949" width="36.5977%" height="15" fill="rgb(253,114,12)" fg:x="1569" fg:w="3554"/><text x="16.4069%" y="959.50">__libc_recv</text></g><g><title>__libc_enable_asynccancel (18 samples, 0.19%)</title><rect x="52.5693%" y="933" width="0.1854%" height="15" fill="rgb(215,223,47)" fg:x="5105" fg:w="18"/><text x="52.8193%" y="943.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (3,566 samples, 36.72%)</title><rect x="16.0849%" y="1029" width="36.7212%" height="15" fill="rgb(248,225,23)" fg:x="1562" fg:w="3566"/><text x="16.3349%" y="1039.50">&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read</text></g><g><title>std::sys_common::net::TcpStream::read (3,565 samples, 36.71%)</title><rect x="16.0951%" y="1013" width="36.7109%" height="15" fill="rgb(250,108,0)" fg:x="1563" fg:w="3565"/><text x="16.3451%" y="1023.50">std::sys_common::net::TcpStream::read</text></g><g><title>std::sys::unix::net::Socket::read (3,565 samples, 36.71%)</title><rect x="16.0951%" y="997" width="36.7109%" height="15" fill="rgb(228,208,7)" fg:x="1563" fg:w="3565"/><text x="16.3451%" y="1007.50">std::sys::unix::net::Socket::read</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (3,565 samples, 36.71%)</title><rect x="16.0951%" y="981" width="36.7109%" height="15" fill="rgb(244,45,10)" fg:x="1563" fg:w="3565"/><text x="16.3451%" y="991.50">std::sys::unix::net::Socket::recv_with_flags</text></g><g><title>std::sys::unix::cvt (5 samples, 0.05%)</title><rect x="52.7546%" y="965" width="0.0515%" height="15" fill="rgb(207,125,25)" fg:x="5123" fg:w="5"/><text x="53.0046%" y="975.50"></text></g><g><title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (5 samples, 0.05%)</title><rect x="52.7546%" y="949" width="0.0515%" height="15" fill="rgb(210,195,18)" fg:x="5123" fg:w="5"/><text x="53.0046%" y="959.50"></text></g><g><title>__memmove_avx_unaligned_erms (14 samples, 0.14%)</title><rect x="52.8061%" y="1029" width="0.1442%" height="15" fill="rgb(249,80,12)" fg:x="5128" fg:w="14"/><text x="53.0561%" y="1039.50"></text></g><g><title>core::str::converts::from_utf8 (35 samples, 0.36%)</title><rect x="52.9503%" y="1029" width="0.3604%" height="15" fill="rgb(221,65,9)" fg:x="5142" fg:w="35"/><text x="53.2003%" y="1039.50"></text></g><g><title>core::str::validations::run_utf8_validation (29 samples, 0.30%)</title><rect x="53.0120%" y="1013" width="0.2986%" height="15" fill="rgb(235,49,36)" fg:x="5148" fg:w="29"/><text x="53.2620%" y="1023.50"></text></g><g><title>__memchr_avx2 (52 samples, 0.54%)</title><rect x="53.3107%" y="1013" width="0.5355%" height="15" fill="rgb(225,32,20)" fg:x="5177" fg:w="52"/><text x="53.5607%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="53.8359%" y="997" width="0.0103%" height="15" fill="rgb(215,141,46)" fg:x="5228" fg:w="1"/><text x="54.0859%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="53.8359%" y="981" width="0.0103%" height="15" fill="rgb(250,160,47)" fg:x="5228" fg:w="1"/><text x="54.0859%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="53.8359%" y="965" width="0.0103%" height="15" fill="rgb(216,222,40)" fg:x="5228" fg:w="1"/><text x="54.0859%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="53.8359%" y="949" width="0.0103%" height="15" fill="rgb(234,217,39)" fg:x="5228" fg:w="1"/><text x="54.0859%" y="959.50"></text></g><g><title>advent_uniq::handle_client (4,418 samples, 45.49%)</title><rect x="8.3822%" y="1061" width="45.4948%" height="15" fill="rgb(207,178,40)" fg:x="814" fg:w="4418"/><text x="8.6322%" y="1071.50">advent_uniq::handle_client</text></g><g><title>std::io::append_to_string (3,720 samples, 38.31%)</title><rect x="15.5700%" y="1045" width="38.3071%" height="15" fill="rgb(221,136,13)" fg:x="1512" fg:w="3720"/><text x="15.8200%" y="1055.50">std::io::append_to_string</text></g><g><title>std::sys::unix::memchr::memchr (55 samples, 0.57%)</title><rect x="53.3107%" y="1029" width="0.5664%" height="15" fill="rgb(249,199,10)" fg:x="5177" fg:w="55"/><text x="53.5607%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (3 samples, 0.03%)</title><rect x="53.8462%" y="1013" width="0.0309%" height="15" fill="rgb(249,222,13)" fg:x="5229" fg:w="3"/><text x="54.0962%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (3 samples, 0.03%)</title><rect x="53.8462%" y="997" width="0.0309%" height="15" fill="rgb(244,185,38)" fg:x="5229" fg:w="3"/><text x="54.0962%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="53.9285%" y="965" width="0.0309%" height="15" fill="rgb(236,202,9)" fg:x="5237" fg:w="3"/><text x="54.1785%" y="975.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (10 samples, 0.10%)</title><rect x="53.8976%" y="1045" width="0.1030%" height="15" fill="rgb(250,229,37)" fg:x="5234" fg:w="10"/><text x="54.1476%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (7 samples, 0.07%)</title><rect x="53.9285%" y="1029" width="0.0721%" height="15" fill="rgb(206,174,23)" fg:x="5237" fg:w="7"/><text x="54.1785%" y="1039.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (7 samples, 0.07%)</title><rect x="53.9285%" y="1013" width="0.0721%" height="15" fill="rgb(211,33,43)" fg:x="5237" fg:w="7"/><text x="54.1785%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.07%)</title><rect x="53.9285%" y="997" width="0.0721%" height="15" fill="rgb(245,58,50)" fg:x="5237" fg:w="7"/><text x="54.1785%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.07%)</title><rect x="53.9285%" y="981" width="0.0721%" height="15" fill="rgb(244,68,36)" fg:x="5237" fg:w="7"/><text x="54.1785%" y="991.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.04%)</title><rect x="53.9594%" y="965" width="0.0412%" height="15" fill="rgb(232,229,15)" fg:x="5240" fg:w="4"/><text x="54.2094%" y="975.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (4 samples, 0.04%)</title><rect x="53.9594%" y="949" width="0.0412%" height="15" fill="rgb(254,30,23)" fg:x="5240" fg:w="4"/><text x="54.2094%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="54.2272%" y="853" width="0.0103%" height="15" fill="rgb(235,160,14)" fg:x="5266" fg:w="1"/><text x="54.4772%" y="863.50"></text></g><g><title>__GI___libc_realloc (52 samples, 0.54%)</title><rect x="54.2684%" y="789" width="0.5355%" height="15" fill="rgb(212,155,44)" fg:x="5270" fg:w="52"/><text x="54.5184%" y="799.50"></text></g><g><title>_int_realloc (7 samples, 0.07%)</title><rect x="54.7317%" y="773" width="0.0721%" height="15" fill="rgb(226,2,50)" fg:x="5315" fg:w="7"/><text x="54.9817%" y="783.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="54.8038%" y="789" width="0.0103%" height="15" fill="rgb(234,177,6)" fg:x="5322" fg:w="1"/><text x="55.0538%" y="799.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="54.8038%" y="773" width="0.0103%" height="15" fill="rgb(217,24,9)" fg:x="5322" fg:w="1"/><text x="55.0538%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (54 samples, 0.56%)</title><rect x="54.2684%" y="837" width="0.5561%" height="15" fill="rgb(220,13,46)" fg:x="5270" fg:w="54"/><text x="54.5184%" y="847.50"></text></g><g><title>alloc::alloc::Global::grow_impl (54 samples, 0.56%)</title><rect x="54.2684%" y="821" width="0.5561%" height="15" fill="rgb(239,221,27)" fg:x="5270" fg:w="54"/><text x="54.5184%" y="831.50"></text></g><g><title>alloc::alloc::realloc (54 samples, 0.56%)</title><rect x="54.2684%" y="805" width="0.5561%" height="15" fill="rgb(222,198,25)" fg:x="5270" fg:w="54"/><text x="54.5184%" y="815.50"></text></g><g><title>__rust_realloc (1 samples, 0.01%)</title><rect x="54.8141%" y="789" width="0.0103%" height="15" fill="rgb(211,99,13)" fg:x="5323" fg:w="1"/><text x="55.0641%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (59 samples, 0.61%)</title><rect x="54.2375%" y="853" width="0.6076%" height="15" fill="rgb(232,111,31)" fg:x="5267" fg:w="59"/><text x="54.4875%" y="863.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.02%)</title><rect x="54.8244%" y="837" width="0.0206%" height="15" fill="rgb(245,82,37)" fg:x="5324" fg:w="2"/><text x="55.0744%" y="847.50"></text></g><g><title>core::cmp::max (3 samples, 0.03%)</title><rect x="54.8450%" y="853" width="0.0309%" height="15" fill="rgb(227,149,46)" fg:x="5326" fg:w="3"/><text x="55.0950%" y="863.50"></text></g><g><title>core::cmp::Ord::max (3 samples, 0.03%)</title><rect x="54.8450%" y="837" width="0.0309%" height="15" fill="rgb(218,36,50)" fg:x="5326" fg:w="3"/><text x="55.0950%" y="847.50"></text></g><g><title>core::cmp::max_by (3 samples, 0.03%)</title><rect x="54.8450%" y="821" width="0.0309%" height="15" fill="rgb(226,80,48)" fg:x="5326" fg:w="3"/><text x="55.0950%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (67 samples, 0.69%)</title><rect x="54.1963%" y="917" width="0.6899%" height="15" fill="rgb(238,224,15)" fg:x="5263" fg:w="67"/><text x="54.4463%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (67 samples, 0.69%)</title><rect x="54.1963%" y="901" width="0.6899%" height="15" fill="rgb(241,136,10)" fg:x="5263" fg:w="67"/><text x="54.4463%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (66 samples, 0.68%)</title><rect x="54.2066%" y="885" width="0.6796%" height="15" fill="rgb(208,32,45)" fg:x="5264" fg:w="66"/><text x="54.4566%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (66 samples, 0.68%)</title><rect x="54.2066%" y="869" width="0.6796%" height="15" fill="rgb(207,135,9)" fg:x="5264" fg:w="66"/><text x="54.4566%" y="879.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.01%)</title><rect x="54.8759%" y="853" width="0.0103%" height="15" fill="rgb(206,86,44)" fg:x="5329" fg:w="1"/><text x="55.1259%" y="863.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="54.8759%" y="837" width="0.0103%" height="15" fill="rgb(245,177,15)" fg:x="5329" fg:w="1"/><text x="55.1259%" y="847.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (84 samples, 0.86%)</title><rect x="54.1654%" y="1013" width="0.8650%" height="15" fill="rgb(206,64,50)" fg:x="5260" fg:w="84"/><text x="54.4154%" y="1023.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (81 samples, 0.83%)</title><rect x="54.1963%" y="997" width="0.8341%" height="15" fill="rgb(234,36,40)" fg:x="5263" fg:w="81"/><text x="54.4463%" y="1007.50"></text></g><g><title>alloc::string::String::push_str (81 samples, 0.83%)</title><rect x="54.1963%" y="981" width="0.8341%" height="15" fill="rgb(213,64,8)" fg:x="5263" fg:w="81"/><text x="54.4463%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (81 samples, 0.83%)</title><rect x="54.1963%" y="965" width="0.8341%" height="15" fill="rgb(210,75,36)" fg:x="5263" fg:w="81"/><text x="54.4463%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (81 samples, 0.83%)</title><rect x="54.1963%" y="949" width="0.8341%" height="15" fill="rgb(229,88,21)" fg:x="5263" fg:w="81"/><text x="54.4463%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (81 samples, 0.83%)</title><rect x="54.1963%" y="933" width="0.8341%" height="15" fill="rgb(252,204,47)" fg:x="5263" fg:w="81"/><text x="54.4463%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.14%)</title><rect x="54.8862%" y="917" width="0.1442%" height="15" fill="rgb(208,77,27)" fg:x="5330" fg:w="14"/><text x="55.1362%" y="927.50"></text></g><g><title>__memmove_avx_unaligned_erms (14 samples, 0.14%)</title><rect x="54.8862%" y="901" width="0.1442%" height="15" fill="rgb(221,76,26)" fg:x="5330" fg:w="14"/><text x="55.1362%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.0304%" y="1013" width="0.0103%" height="15" fill="rgb(225,139,18)" fg:x="5344" fg:w="1"/><text x="55.2804%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.0304%" y="997" width="0.0103%" height="15" fill="rgb(230,137,11)" fg:x="5344" fg:w="1"/><text x="55.2804%" y="1007.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.09%)</title><rect x="55.2054%" y="805" width="0.0927%" height="15" fill="rgb(212,28,1)" fg:x="5361" fg:w="9"/><text x="55.4554%" y="815.50"></text></g><g><title>tcache_get (3 samples, 0.03%)</title><rect x="55.2672%" y="789" width="0.0309%" height="15" fill="rgb(248,164,17)" fg:x="5367" fg:w="3"/><text x="55.5172%" y="799.50"></text></g><g><title>__rdl_alloc (6 samples, 0.06%)</title><rect x="55.2981%" y="805" width="0.0618%" height="15" fill="rgb(222,171,42)" fg:x="5370" fg:w="6"/><text x="55.5481%" y="815.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (6 samples, 0.06%)</title><rect x="55.2981%" y="789" width="0.0618%" height="15" fill="rgb(243,84,45)" fg:x="5370" fg:w="6"/><text x="55.5481%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (19 samples, 0.20%)</title><rect x="55.1745%" y="885" width="0.1957%" height="15" fill="rgb(252,49,23)" fg:x="5358" fg:w="19"/><text x="55.4245%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (19 samples, 0.20%)</title><rect x="55.1745%" y="869" width="0.1957%" height="15" fill="rgb(215,19,7)" fg:x="5358" fg:w="19"/><text x="55.4245%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (17 samples, 0.18%)</title><rect x="55.1951%" y="853" width="0.1751%" height="15" fill="rgb(238,81,41)" fg:x="5360" fg:w="17"/><text x="55.4451%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (17 samples, 0.18%)</title><rect x="55.1951%" y="837" width="0.1751%" height="15" fill="rgb(210,199,37)" fg:x="5360" fg:w="17"/><text x="55.4451%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (16 samples, 0.16%)</title><rect x="55.2054%" y="821" width="0.1648%" height="15" fill="rgb(244,192,49)" fg:x="5361" fg:w="16"/><text x="55.4554%" y="831.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="55.3599%" y="805" width="0.0103%" height="15" fill="rgb(226,211,11)" fg:x="5376" fg:w="1"/><text x="55.6099%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.05%)</title><rect x="55.3702%" y="869" width="0.0515%" height="15" fill="rgb(236,162,54)" fg:x="5377" fg:w="5"/><text x="55.6202%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.06%)</title><rect x="55.3702%" y="885" width="0.0618%" height="15" fill="rgb(220,229,9)" fg:x="5377" fg:w="6"/><text x="55.6202%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="55.4217%" y="869" width="0.0103%" height="15" fill="rgb(250,87,22)" fg:x="5382" fg:w="1"/><text x="55.6717%" y="879.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (30 samples, 0.31%)</title><rect x="55.1334%" y="981" width="0.3089%" height="15" fill="rgb(239,43,17)" fg:x="5354" fg:w="30"/><text x="55.3834%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (27 samples, 0.28%)</title><rect x="55.1642%" y="965" width="0.2780%" height="15" fill="rgb(231,177,25)" fg:x="5357" fg:w="27"/><text x="55.4142%" y="975.50"></text></g><g><title>alloc::string::String::push_str (27 samples, 0.28%)</title><rect x="55.1642%" y="949" width="0.2780%" height="15" fill="rgb(219,179,1)" fg:x="5357" fg:w="27"/><text x="55.4142%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (27 samples, 0.28%)</title><rect x="55.1642%" y="933" width="0.2780%" height="15" fill="rgb(238,219,53)" fg:x="5357" fg:w="27"/><text x="55.4142%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (27 samples, 0.28%)</title><rect x="55.1642%" y="917" width="0.2780%" height="15" fill="rgb(232,167,36)" fg:x="5357" fg:w="27"/><text x="55.4142%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (27 samples, 0.28%)</title><rect x="55.1642%" y="901" width="0.2780%" height="15" fill="rgb(244,19,51)" fg:x="5357" fg:w="27"/><text x="55.4142%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="55.4320%" y="885" width="0.0103%" height="15" fill="rgb(224,6,22)" fg:x="5383" fg:w="1"/><text x="55.6820%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="55.4320%" y="869" width="0.0103%" height="15" fill="rgb(224,145,5)" fg:x="5383" fg:w="1"/><text x="55.6820%" y="879.50"></text></g><g><title>core::fmt::Formatter::pad_integral (3 samples, 0.03%)</title><rect x="55.4423%" y="981" width="0.0309%" height="15" fill="rgb(234,130,49)" fg:x="5384" fg:w="3"/><text x="55.6923%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.14%)</title><rect x="55.4732%" y="981" width="0.1442%" height="15" fill="rgb(254,6,2)" fg:x="5387" fg:w="14"/><text x="55.7232%" y="991.50"></text></g><g><title>alloc::fmt::format (170 samples, 1.75%)</title><rect x="53.8770%" y="1061" width="1.7506%" height="15" fill="rgb(208,96,46)" fg:x="5232" fg:w="170"/><text x="54.1270%" y="1071.50"></text></g><g><title>core::fmt::Write::write_fmt (158 samples, 1.63%)</title><rect x="54.0006%" y="1045" width="1.6270%" height="15" fill="rgb(239,3,39)" fg:x="5244" fg:w="158"/><text x="54.2506%" y="1055.50"></text></g><g><title>core::fmt::write (150 samples, 1.54%)</title><rect x="54.0830%" y="1029" width="1.5446%" height="15" fill="rgb(233,210,1)" fg:x="5252" fg:w="150"/><text x="54.3330%" y="1039.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (57 samples, 0.59%)</title><rect x="55.0407%" y="1013" width="0.5870%" height="15" fill="rgb(244,137,37)" fg:x="5345" fg:w="57"/><text x="55.2907%" y="1023.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (57 samples, 0.59%)</title><rect x="55.0407%" y="997" width="0.5870%" height="15" fill="rgb(240,136,2)" fg:x="5345" fg:w="57"/><text x="55.2907%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="55.6173%" y="981" width="0.0103%" height="15" fill="rgb(239,18,37)" fg:x="5401" fg:w="1"/><text x="55.8673%" y="991.50"></text></g><g><title>&lt;flume::signal::SyncSignal as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="57.0899%" y="1045" width="0.0103%" height="15" fill="rgb(218,185,22)" fg:x="5544" fg:w="1"/><text x="57.3399%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="57.1002%" y="1045" width="0.0103%" height="15" fill="rgb(225,218,4)" fg:x="5545" fg:w="1"/><text x="57.3502%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="57.1002%" y="1029" width="0.0103%" height="15" fill="rgb(230,182,32)" fg:x="5545" fg:w="1"/><text x="57.3502%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="57.1002%" y="1013" width="0.0103%" height="15" fill="rgb(242,56,43)" fg:x="5545" fg:w="1"/><text x="57.3502%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="57.1002%" y="997" width="0.0103%" height="15" fill="rgb(233,99,24)" fg:x="5545" fg:w="1"/><text x="57.3502%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="57.1002%" y="981" width="0.0103%" height="15" fill="rgb(234,209,42)" fg:x="5545" fg:w="1"/><text x="57.3502%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="57.1002%" y="965" width="0.0103%" height="15" fill="rgb(227,7,12)" fg:x="5545" fg:w="1"/><text x="57.3502%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="57.1002%" y="949" width="0.0103%" height="15" fill="rgb(245,203,43)" fg:x="5545" fg:w="1"/><text x="57.3502%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="57.1002%" y="933" width="0.0103%" height="15" fill="rgb(238,205,33)" fg:x="5545" fg:w="1"/><text x="57.3502%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="57.1002%" y="917" width="0.0103%" height="15" fill="rgb(231,56,7)" fg:x="5545" fg:w="1"/><text x="57.3502%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="57.1002%" y="901" width="0.0103%" height="15" fill="rgb(244,186,29)" fg:x="5545" fg:w="1"/><text x="57.3502%" y="911.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="57.1105%" y="1045" width="0.0103%" height="15" fill="rgb(234,111,31)" fg:x="5546" fg:w="1"/><text x="57.3605%" y="1055.50"></text></g><g><title>checked_request2size (1 samples, 0.01%)</title><rect x="57.1414%" y="1029" width="0.0103%" height="15" fill="rgb(241,149,10)" fg:x="5549" fg:w="1"/><text x="57.3914%" y="1039.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.04%)</title><rect x="57.1208%" y="1045" width="0.0412%" height="15" fill="rgb(249,206,44)" fg:x="5547" fg:w="4"/><text x="57.3708%" y="1055.50"></text></g><g><title>tcache_get (1 samples, 0.01%)</title><rect x="57.1517%" y="1029" width="0.0103%" height="15" fill="rgb(251,153,30)" fg:x="5550" fg:w="1"/><text x="57.4017%" y="1039.50"></text></g><g><title>__GI___sched_yield (40 samples, 0.41%)</title><rect x="57.1620%" y="1045" width="0.4119%" height="15" fill="rgb(239,152,38)" fg:x="5551" fg:w="40"/><text x="57.4120%" y="1055.50"></text></g><g><title>[unknown] (38 samples, 0.39%)</title><rect x="57.1826%" y="1029" width="0.3913%" height="15" fill="rgb(249,139,47)" fg:x="5553" fg:w="38"/><text x="57.4326%" y="1039.50"></text></g><g><title>[unknown] (27 samples, 0.28%)</title><rect x="57.2959%" y="1013" width="0.2780%" height="15" fill="rgb(244,64,35)" fg:x="5564" fg:w="27"/><text x="57.5459%" y="1023.50"></text></g><g><title>[unknown] (25 samples, 0.26%)</title><rect x="57.3164%" y="997" width="0.2574%" height="15" fill="rgb(216,46,15)" fg:x="5566" fg:w="25"/><text x="57.5664%" y="1007.50"></text></g><g><title>[unknown] (23 samples, 0.24%)</title><rect x="57.3370%" y="981" width="0.2368%" height="15" fill="rgb(250,74,19)" fg:x="5568" fg:w="23"/><text x="57.5870%" y="991.50"></text></g><g><title>[unknown] (21 samples, 0.22%)</title><rect x="57.3576%" y="965" width="0.2162%" height="15" fill="rgb(249,42,33)" fg:x="5570" fg:w="21"/><text x="57.6076%" y="975.50"></text></g><g><title>[unknown] (21 samples, 0.22%)</title><rect x="57.3576%" y="949" width="0.2162%" height="15" fill="rgb(242,149,17)" fg:x="5570" fg:w="21"/><text x="57.6076%" y="959.50"></text></g><g><title>[unknown] (17 samples, 0.18%)</title><rect x="57.3988%" y="933" width="0.1751%" height="15" fill="rgb(244,29,21)" fg:x="5574" fg:w="17"/><text x="57.6488%" y="943.50"></text></g><g><title>[unknown] (14 samples, 0.14%)</title><rect x="57.4297%" y="917" width="0.1442%" height="15" fill="rgb(220,130,37)" fg:x="5577" fg:w="14"/><text x="57.6797%" y="927.50"></text></g><g><title>[unknown] (13 samples, 0.13%)</title><rect x="57.4400%" y="901" width="0.1339%" height="15" fill="rgb(211,67,2)" fg:x="5578" fg:w="13"/><text x="57.6900%" y="911.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="57.5739%" y="1045" width="0.0206%" height="15" fill="rgb(235,68,52)" fg:x="5591" fg:w="2"/><text x="57.8239%" y="1055.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="57.5739%" y="1029" width="0.0206%" height="15" fill="rgb(246,142,3)" fg:x="5591" fg:w="2"/><text x="57.8239%" y="1039.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="57.5945%" y="1045" width="0.0103%" height="15" fill="rgb(241,25,7)" fg:x="5593" fg:w="1"/><text x="57.8445%" y="1055.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (6 samples, 0.06%)</title><rect x="57.6048%" y="1045" width="0.0618%" height="15" fill="rgb(242,119,39)" fg:x="5594" fg:w="6"/><text x="57.8548%" y="1055.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (5 samples, 0.05%)</title><rect x="57.6666%" y="1045" width="0.0515%" height="15" fill="rgb(241,98,45)" fg:x="5600" fg:w="5"/><text x="57.9166%" y="1055.50"></text></g><g><title>std::sys_common::thread_info::ThreadInfo::with::{{closure}} (4 samples, 0.04%)</title><rect x="57.7181%" y="1045" width="0.0412%" height="15" fill="rgb(254,28,30)" fg:x="5605" fg:w="4"/><text x="57.9681%" y="1055.50"></text></g><g><title>std::sys_common::thread_info::current_thread::{{closure}} (4 samples, 0.04%)</title><rect x="57.7181%" y="1029" width="0.0412%" height="15" fill="rgb(241,142,54)" fg:x="5605" fg:w="4"/><text x="57.9681%" y="1039.50"></text></g><g><title>&lt;std::thread::Thread as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="57.7181%" y="1013" width="0.0412%" height="15" fill="rgb(222,85,15)" fg:x="5605" fg:w="4"/><text x="57.9681%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="57.7181%" y="997" width="0.0412%" height="15" fill="rgb(210,85,47)" fg:x="5605" fg:w="4"/><text x="57.9681%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (4 samples, 0.04%)</title><rect x="57.7181%" y="981" width="0.0412%" height="15" fill="rgb(224,206,25)" fg:x="5605" fg:w="4"/><text x="57.9681%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_add (4 samples, 0.04%)</title><rect x="57.7181%" y="965" width="0.0412%" height="15" fill="rgb(243,201,19)" fg:x="5605" fg:w="4"/><text x="57.9681%" y="975.50"></text></g><g><title>std::thread::current (1 samples, 0.01%)</title><rect x="57.7592%" y="1045" width="0.0103%" height="15" fill="rgb(236,59,4)" fg:x="5609" fg:w="1"/><text x="58.0092%" y="1055.50"></text></g><g><title>std::sys_common::thread_info::current_thread (1 samples, 0.01%)</title><rect x="57.7592%" y="1029" width="0.0103%" height="15" fill="rgb(254,179,45)" fg:x="5609" fg:w="1"/><text x="58.0092%" y="1039.50"></text></g><g><title>std::sys_common::thread_info::ThreadInfo::with (1 samples, 0.01%)</title><rect x="57.7592%" y="1013" width="0.0103%" height="15" fill="rgb(226,14,10)" fg:x="5609" fg:w="1"/><text x="58.0092%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="57.7592%" y="997" width="0.0103%" height="15" fill="rgb(244,27,41)" fg:x="5609" fg:w="1"/><text x="58.0092%" y="1007.50"></text></g><g><title>std::sys_common::thread_info::THREAD_INFO::__getit (1 samples, 0.01%)</title><rect x="57.7592%" y="981" width="0.0103%" height="15" fill="rgb(235,35,32)" fg:x="5609" fg:w="1"/><text x="58.0092%" y="991.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="57.7592%" y="965" width="0.0103%" height="15" fill="rgb(218,68,31)" fg:x="5609" fg:w="1"/><text x="58.0092%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::thread::Thread&gt; (1 samples, 0.01%)</title><rect x="57.7695%" y="1029" width="0.0103%" height="15" fill="rgb(207,120,37)" fg:x="5610" fg:w="1"/><text x="58.0195%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::thread::Inner&gt;&gt; (1 samples, 0.01%)</title><rect x="57.7695%" y="1013" width="0.0103%" height="15" fill="rgb(227,98,0)" fg:x="5610" fg:w="1"/><text x="58.0195%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="57.7695%" y="997" width="0.0103%" height="15" fill="rgb(207,7,3)" fg:x="5610" fg:w="1"/><text x="58.0195%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="57.7695%" y="981" width="0.0103%" height="15" fill="rgb(206,98,19)" fg:x="5610" fg:w="1"/><text x="58.0195%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="57.7695%" y="965" width="0.0103%" height="15" fill="rgb(217,5,26)" fg:x="5610" fg:w="1"/><text x="58.0195%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicI32::compare_exchange (15 samples, 0.15%)</title><rect x="57.7798%" y="1013" width="0.1545%" height="15" fill="rgb(235,190,38)" fg:x="5611" fg:w="15"/><text x="58.0298%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.15%)</title><rect x="57.7798%" y="997" width="0.1545%" height="15" fill="rgb(247,86,24)" fg:x="5611" fg:w="15"/><text x="58.0298%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicI32::fetch_sub (3 samples, 0.03%)</title><rect x="57.9343%" y="1013" width="0.0309%" height="15" fill="rgb(205,101,16)" fg:x="5626" fg:w="3"/><text x="58.1843%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.03%)</title><rect x="57.9343%" y="997" width="0.0309%" height="15" fill="rgb(246,168,33)" fg:x="5626" fg:w="3"/><text x="58.1843%" y="1007.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (694 samples, 7.15%)</title><rect x="57.7798%" y="1029" width="7.1465%" height="15" fill="rgb(231,114,1)" fg:x="5611" fg:w="694"/><text x="58.0298%" y="1039.50">std::sys_c..</text></g><g><title>std::sys::unix::futex::futex_wait (676 samples, 6.96%)</title><rect x="57.9652%" y="1013" width="6.9612%" height="15" fill="rgb(207,184,53)" fg:x="5629" fg:w="676"/><text x="58.2152%" y="1023.50">std::sys:..</text></g><g><title>syscall (676 samples, 6.96%)</title><rect x="57.9652%" y="997" width="6.9612%" height="15" fill="rgb(224,95,51)" fg:x="5629" fg:w="676"/><text x="58.2152%" y="1007.50">syscall</text></g><g><title>[unknown] (665 samples, 6.85%)</title><rect x="58.0785%" y="981" width="6.8479%" height="15" fill="rgb(212,188,45)" fg:x="5640" fg:w="665"/><text x="58.3285%" y="991.50">[unknown]</text></g><g><title>[unknown] (644 samples, 6.63%)</title><rect x="58.2947%" y="965" width="6.6317%" height="15" fill="rgb(223,154,38)" fg:x="5661" fg:w="644"/><text x="58.5447%" y="975.50">[unknown]</text></g><g><title>[unknown] (627 samples, 6.46%)</title><rect x="58.4698%" y="949" width="6.4566%" height="15" fill="rgb(251,22,52)" fg:x="5678" fg:w="627"/><text x="58.7198%" y="959.50">[unknown]</text></g><g><title>[unknown] (606 samples, 6.24%)</title><rect x="58.6860%" y="933" width="6.2403%" height="15" fill="rgb(229,209,22)" fg:x="5699" fg:w="606"/><text x="58.9360%" y="943.50">[unknown]</text></g><g><title>[unknown] (601 samples, 6.19%)</title><rect x="58.7375%" y="917" width="6.1889%" height="15" fill="rgb(234,138,34)" fg:x="5704" fg:w="601"/><text x="58.9875%" y="927.50">[unknown]</text></g><g><title>[unknown] (573 samples, 5.90%)</title><rect x="59.0258%" y="901" width="5.9005%" height="15" fill="rgb(212,95,11)" fg:x="5732" fg:w="573"/><text x="59.2758%" y="911.50">[unknown]</text></g><g><title>[unknown] (541 samples, 5.57%)</title><rect x="59.3554%" y="885" width="5.5710%" height="15" fill="rgb(240,179,47)" fg:x="5764" fg:w="541"/><text x="59.6054%" y="895.50">[unknow..</text></g><g><title>[unknown] (526 samples, 5.42%)</title><rect x="59.5098%" y="869" width="5.4165%" height="15" fill="rgb(240,163,11)" fg:x="5779" fg:w="526"/><text x="59.7598%" y="879.50">[unknow..</text></g><g><title>[unknown] (501 samples, 5.16%)</title><rect x="59.7673%" y="853" width="5.1591%" height="15" fill="rgb(236,37,12)" fg:x="5804" fg:w="501"/><text x="60.0173%" y="863.50">[unkno..</text></g><g><title>[unknown] (452 samples, 4.65%)</title><rect x="60.2719%" y="837" width="4.6545%" height="15" fill="rgb(232,164,16)" fg:x="5853" fg:w="452"/><text x="60.5219%" y="847.50">[unkn..</text></g><g><title>[unknown] (292 samples, 3.01%)</title><rect x="61.9195%" y="821" width="3.0069%" height="15" fill="rgb(244,205,15)" fg:x="6013" fg:w="292"/><text x="62.1695%" y="831.50">[un..</text></g><g><title>[unknown] (229 samples, 2.36%)</title><rect x="62.5682%" y="805" width="2.3582%" height="15" fill="rgb(223,117,47)" fg:x="6076" fg:w="229"/><text x="62.8182%" y="815.50">[..</text></g><g><title>[unknown] (168 samples, 1.73%)</title><rect x="63.1964%" y="789" width="1.7300%" height="15" fill="rgb(244,107,35)" fg:x="6137" fg:w="168"/><text x="63.4464%" y="799.50"></text></g><g><title>[unknown] (107 samples, 1.10%)</title><rect x="63.8245%" y="773" width="1.1018%" height="15" fill="rgb(205,140,8)" fg:x="6198" fg:w="107"/><text x="64.0745%" y="783.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="64.8955%" y="757" width="0.0309%" height="15" fill="rgb(228,84,46)" fg:x="6302" fg:w="3"/><text x="65.1455%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="64.9058%" y="741" width="0.0206%" height="15" fill="rgb(254,188,9)" fg:x="6303" fg:w="2"/><text x="65.1558%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="64.9161%" y="725" width="0.0103%" height="15" fill="rgb(206,112,54)" fg:x="6304" fg:w="1"/><text x="65.1661%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="64.9161%" y="709" width="0.0103%" height="15" fill="rgb(216,84,49)" fg:x="6304" fg:w="1"/><text x="65.1661%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="64.9161%" y="693" width="0.0103%" height="15" fill="rgb(214,194,35)" fg:x="6304" fg:w="1"/><text x="65.1661%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="64.9161%" y="677" width="0.0103%" height="15" fill="rgb(249,28,3)" fg:x="6304" fg:w="1"/><text x="65.1661%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="64.9161%" y="661" width="0.0103%" height="15" fill="rgb(222,56,52)" fg:x="6304" fg:w="1"/><text x="65.1661%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="64.9161%" y="645" width="0.0103%" height="15" fill="rgb(245,217,50)" fg:x="6304" fg:w="1"/><text x="65.1661%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="64.9161%" y="629" width="0.0103%" height="15" fill="rgb(213,201,24)" fg:x="6304" fg:w="1"/><text x="65.1661%" y="639.50"></text></g><g><title>std::thread::park (697 samples, 7.18%)</title><rect x="57.7695%" y="1045" width="7.1774%" height="15" fill="rgb(248,116,28)" fg:x="5610" fg:w="697"/><text x="58.0195%" y="1055.50">std::threa..</text></g><g><title>std::thread::current (2 samples, 0.02%)</title><rect x="64.9264%" y="1029" width="0.0206%" height="15" fill="rgb(219,72,43)" fg:x="6305" fg:w="2"/><text x="65.1764%" y="1039.50"></text></g><g><title>std::sys_common::thread_info::current_thread (2 samples, 0.02%)</title><rect x="64.9264%" y="1013" width="0.0206%" height="15" fill="rgb(209,138,14)" fg:x="6305" fg:w="2"/><text x="65.1764%" y="1023.50"></text></g><g><title>std::sys_common::thread_info::ThreadInfo::with (2 samples, 0.02%)</title><rect x="64.9264%" y="997" width="0.0206%" height="15" fill="rgb(222,18,33)" fg:x="6305" fg:w="2"/><text x="65.1764%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="64.9264%" y="981" width="0.0206%" height="15" fill="rgb(213,199,7)" fg:x="6305" fg:w="2"/><text x="65.1764%" y="991.50"></text></g><g><title>std::sys_common::thread_info::ThreadInfo::with::{{closure}} (2 samples, 0.02%)</title><rect x="64.9264%" y="965" width="0.0206%" height="15" fill="rgb(250,110,10)" fg:x="6305" fg:w="2"/><text x="65.1764%" y="975.50"></text></g><g><title>std::sys_common::thread_info::current_thread::{{closure}} (2 samples, 0.02%)</title><rect x="64.9264%" y="949" width="0.0206%" height="15" fill="rgb(248,123,6)" fg:x="6305" fg:w="2"/><text x="65.1764%" y="959.50"></text></g><g><title>&lt;std::thread::Thread as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="64.9264%" y="933" width="0.0206%" height="15" fill="rgb(206,91,31)" fg:x="6305" fg:w="2"/><text x="65.1764%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="64.9264%" y="917" width="0.0206%" height="15" fill="rgb(211,154,13)" fg:x="6305" fg:w="2"/><text x="65.1764%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.02%)</title><rect x="64.9264%" y="901" width="0.0206%" height="15" fill="rgb(225,148,7)" fg:x="6305" fg:w="2"/><text x="65.1764%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.02%)</title><rect x="64.9264%" y="885" width="0.0206%" height="15" fill="rgb(220,160,43)" fg:x="6305" fg:w="2"/><text x="65.1764%" y="895.50"></text></g><g><title>flume::Receiver&lt;T&gt;::recv (907 samples, 9.34%)</title><rect x="55.6276%" y="1061" width="9.3399%" height="15" fill="rgb(213,52,39)" fg:x="5402" fg:w="907"/><text x="55.8776%" y="1071.50">flume::Receiv..</text></g><g><title>std::thread::sleep (2 samples, 0.02%)</title><rect x="64.9470%" y="1045" width="0.0206%" height="15" fill="rgb(243,137,7)" fg:x="6307" fg:w="2"/><text x="65.1970%" y="1055.50"></text></g><g><title>std::sys::unix::thread::Thread::sleep (2 samples, 0.02%)</title><rect x="64.9470%" y="1029" width="0.0206%" height="15" fill="rgb(230,79,13)" fg:x="6307" fg:w="2"/><text x="65.1970%" y="1039.50"></text></g><g><title>__GI___nanosleep (2 samples, 0.02%)</title><rect x="64.9470%" y="1013" width="0.0206%" height="15" fill="rgb(247,105,23)" fg:x="6307" fg:w="2"/><text x="65.1970%" y="1023.50"></text></g><g><title>__GI___clock_nanosleep (2 samples, 0.02%)</title><rect x="64.9470%" y="997" width="0.0206%" height="15" fill="rgb(223,179,41)" fg:x="6307" fg:w="2"/><text x="65.1970%" y="1007.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="64.9470%" y="981" width="0.0206%" height="15" fill="rgb(218,9,34)" fg:x="6307" fg:w="2"/><text x="65.1970%" y="991.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="64.9470%" y="965" width="0.0206%" height="15" fill="rgb(222,106,8)" fg:x="6307" fg:w="2"/><text x="65.1970%" y="975.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="64.9470%" y="949" width="0.0206%" height="15" fill="rgb(211,220,0)" fg:x="6307" fg:w="2"/><text x="65.1970%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="64.9573%" y="933" width="0.0103%" height="15" fill="rgb(229,52,16)" fg:x="6308" fg:w="1"/><text x="65.2073%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="64.9573%" y="917" width="0.0103%" height="15" fill="rgb(212,155,18)" fg:x="6308" fg:w="1"/><text x="65.2073%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="64.9573%" y="901" width="0.0103%" height="15" fill="rgb(242,21,14)" fg:x="6308" fg:w="1"/><text x="65.2073%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="64.9573%" y="885" width="0.0103%" height="15" fill="rgb(222,19,48)" fg:x="6308" fg:w="1"/><text x="65.2073%" y="895.50"></text></g><g><title>&lt;flume::signal::SyncSignal as flume::signal::Signal&gt;::fire (53 samples, 0.55%)</title><rect x="65.5751%" y="1045" width="0.5458%" height="15" fill="rgb(232,45,27)" fg:x="6368" fg:w="53"/><text x="65.8251%" y="1055.50"></text></g><g><title>syscall (52 samples, 0.54%)</title><rect x="65.5854%" y="1029" width="0.5355%" height="15" fill="rgb(249,103,42)" fg:x="6369" fg:w="52"/><text x="65.8354%" y="1039.50"></text></g><g><title>[unknown] (51 samples, 0.53%)</title><rect x="65.5957%" y="1013" width="0.5252%" height="15" fill="rgb(246,81,33)" fg:x="6370" fg:w="51"/><text x="65.8457%" y="1023.50"></text></g><g><title>[unknown] (50 samples, 0.51%)</title><rect x="65.6060%" y="997" width="0.5149%" height="15" fill="rgb(252,33,42)" fg:x="6371" fg:w="50"/><text x="65.8560%" y="1007.50"></text></g><g><title>[unknown] (47 samples, 0.48%)</title><rect x="65.6369%" y="981" width="0.4840%" height="15" fill="rgb(209,212,41)" fg:x="6374" fg:w="47"/><text x="65.8869%" y="991.50"></text></g><g><title>[unknown] (47 samples, 0.48%)</title><rect x="65.6369%" y="965" width="0.4840%" height="15" fill="rgb(207,154,6)" fg:x="6374" fg:w="47"/><text x="65.8869%" y="975.50"></text></g><g><title>[unknown] (47 samples, 0.48%)</title><rect x="65.6369%" y="949" width="0.4840%" height="15" fill="rgb(223,64,47)" fg:x="6374" fg:w="47"/><text x="65.8869%" y="959.50"></text></g><g><title>[unknown] (44 samples, 0.45%)</title><rect x="65.6678%" y="933" width="0.4531%" height="15" fill="rgb(211,161,38)" fg:x="6377" fg:w="44"/><text x="65.9178%" y="943.50"></text></g><g><title>[unknown] (42 samples, 0.43%)</title><rect x="65.6884%" y="917" width="0.4325%" height="15" fill="rgb(219,138,40)" fg:x="6379" fg:w="42"/><text x="65.9384%" y="927.50"></text></g><g><title>[unknown] (29 samples, 0.30%)</title><rect x="65.8223%" y="901" width="0.2986%" height="15" fill="rgb(241,228,46)" fg:x="6392" fg:w="29"/><text x="66.0723%" y="911.50"></text></g><g><title>[unknown] (26 samples, 0.27%)</title><rect x="65.8532%" y="885" width="0.2677%" height="15" fill="rgb(223,209,38)" fg:x="6395" fg:w="26"/><text x="66.1032%" y="895.50"></text></g><g><title>[unknown] (23 samples, 0.24%)</title><rect x="65.8840%" y="869" width="0.2368%" height="15" fill="rgb(236,164,45)" fg:x="6398" fg:w="23"/><text x="66.1340%" y="879.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="66.0385%" y="853" width="0.0824%" height="15" fill="rgb(231,15,5)" fg:x="6413" fg:w="8"/><text x="66.2885%" y="863.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="66.0797%" y="837" width="0.0412%" height="15" fill="rgb(252,35,15)" fg:x="6417" fg:w="4"/><text x="66.3297%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="66.1106%" y="821" width="0.0103%" height="15" fill="rgb(248,181,18)" fg:x="6420" fg:w="1"/><text x="66.3606%" y="831.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="66.1209%" y="1045" width="0.0309%" height="15" fill="rgb(233,39,42)" fg:x="6421" fg:w="3"/><text x="66.3709%" y="1055.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="66.1209%" y="1029" width="0.0309%" height="15" fill="rgb(238,110,33)" fg:x="6421" fg:w="3"/><text x="66.3709%" y="1039.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="66.1209%" y="1013" width="0.0309%" height="15" fill="rgb(233,195,10)" fg:x="6421" fg:w="3"/><text x="66.3709%" y="1023.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="66.1312%" y="997" width="0.0206%" height="15" fill="rgb(254,105,3)" fg:x="6422" fg:w="2"/><text x="66.3812%" y="1007.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="66.1312%" y="981" width="0.0206%" height="15" fill="rgb(221,225,9)" fg:x="6422" fg:w="2"/><text x="66.3812%" y="991.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="66.1312%" y="965" width="0.0206%" height="15" fill="rgb(224,227,45)" fg:x="6422" fg:w="2"/><text x="66.3812%" y="975.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="66.1312%" y="949" width="0.0206%" height="15" fill="rgb(229,198,43)" fg:x="6422" fg:w="2"/><text x="66.3812%" y="959.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="66.1312%" y="933" width="0.0206%" height="15" fill="rgb(206,209,35)" fg:x="6422" fg:w="2"/><text x="66.3812%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="66.1312%" y="917" width="0.0206%" height="15" fill="rgb(245,195,53)" fg:x="6422" fg:w="2"/><text x="66.3812%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="66.1415%" y="901" width="0.0103%" height="15" fill="rgb(240,92,26)" fg:x="6423" fg:w="1"/><text x="66.3915%" y="911.50"></text></g><g><title>__GI___sched_yield (14 samples, 0.14%)</title><rect x="66.1518%" y="1045" width="0.1442%" height="15" fill="rgb(207,40,23)" fg:x="6424" fg:w="14"/><text x="66.4018%" y="1055.50"></text></g><g><title>[unknown] (14 samples, 0.14%)</title><rect x="66.1518%" y="1029" width="0.1442%" height="15" fill="rgb(223,111,35)" fg:x="6424" fg:w="14"/><text x="66.4018%" y="1039.50"></text></g><g><title>[unknown] (12 samples, 0.12%)</title><rect x="66.1724%" y="1013" width="0.1236%" height="15" fill="rgb(229,147,28)" fg:x="6426" fg:w="12"/><text x="66.4224%" y="1023.50"></text></g><g><title>[unknown] (11 samples, 0.11%)</title><rect x="66.1827%" y="997" width="0.1133%" height="15" fill="rgb(211,29,28)" fg:x="6427" fg:w="11"/><text x="66.4327%" y="1007.50"></text></g><g><title>[unknown] (11 samples, 0.11%)</title><rect x="66.1827%" y="981" width="0.1133%" height="15" fill="rgb(228,72,33)" fg:x="6427" fg:w="11"/><text x="66.4327%" y="991.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="66.2136%" y="965" width="0.0824%" height="15" fill="rgb(205,214,31)" fg:x="6430" fg:w="8"/><text x="66.4636%" y="975.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="66.2136%" y="949" width="0.0824%" height="15" fill="rgb(224,111,15)" fg:x="6430" fg:w="8"/><text x="66.4636%" y="959.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="66.2239%" y="933" width="0.0721%" height="15" fill="rgb(253,21,26)" fg:x="6431" fg:w="7"/><text x="66.4739%" y="943.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="66.2342%" y="917" width="0.0618%" height="15" fill="rgb(245,139,43)" fg:x="6432" fg:w="6"/><text x="66.4842%" y="927.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="66.2445%" y="901" width="0.0515%" height="15" fill="rgb(252,170,7)" fg:x="6433" fg:w="5"/><text x="66.4945%" y="911.50"></text></g><g><title>flume::Sender&lt;T&gt;::send (130 samples, 1.34%)</title><rect x="64.9676%" y="1061" width="1.3387%" height="15" fill="rgb(231,118,14)" fg:x="6309" fg:w="130"/><text x="65.2176%" y="1071.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::grow (1 samples, 0.01%)</title><rect x="66.2960%" y="1045" width="0.0103%" height="15" fill="rgb(238,83,0)" fg:x="6438" fg:w="1"/><text x="66.5460%" y="1055.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="66.2960%" y="1029" width="0.0103%" height="15" fill="rgb(221,39,39)" fg:x="6438" fg:w="1"/><text x="66.5460%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="66.2960%" y="1013" width="0.0103%" height="15" fill="rgb(222,119,46)" fg:x="6438" fg:w="1"/><text x="66.5460%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="66.2960%" y="997" width="0.0103%" height="15" fill="rgb(222,165,49)" fg:x="6438" fg:w="1"/><text x="66.5460%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="66.2960%" y="981" width="0.0103%" height="15" fill="rgb(219,113,52)" fg:x="6438" fg:w="1"/><text x="66.5460%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="66.2960%" y="965" width="0.0103%" height="15" fill="rgb(214,7,15)" fg:x="6438" fg:w="1"/><text x="66.5460%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="66.2960%" y="949" width="0.0103%" height="15" fill="rgb(235,32,4)" fg:x="6438" fg:w="1"/><text x="66.5460%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="66.2960%" y="933" width="0.0103%" height="15" fill="rgb(238,90,54)" fg:x="6438" fg:w="1"/><text x="66.5460%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="66.2960%" y="917" width="0.0103%" height="15" fill="rgb(213,208,19)" fg:x="6438" fg:w="1"/><text x="66.5460%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="66.2960%" y="901" width="0.0103%" height="15" fill="rgb(233,156,4)" fg:x="6438" fg:w="1"/><text x="66.5460%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="66.2960%" y="885" width="0.0103%" height="15" fill="rgb(207,194,5)" fg:x="6438" fg:w="1"/><text x="66.5460%" y="895.50"></text></g><g><title>__GI_munmap (3 samples, 0.03%)</title><rect x="66.8211%" y="1045" width="0.0309%" height="15" fill="rgb(206,111,30)" fg:x="6489" fg:w="3"/><text x="67.0711%" y="1055.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="66.8211%" y="1029" width="0.0309%" height="15" fill="rgb(243,70,54)" fg:x="6489" fg:w="3"/><text x="67.0711%" y="1039.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="66.8211%" y="1013" width="0.0309%" height="15" fill="rgb(242,28,8)" fg:x="6489" fg:w="3"/><text x="67.0711%" y="1023.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="66.8211%" y="997" width="0.0309%" height="15" fill="rgb(219,106,18)" fg:x="6489" fg:w="3"/><text x="67.0711%" y="1007.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="66.8211%" y="981" width="0.0309%" height="15" fill="rgb(244,222,10)" fg:x="6489" fg:w="3"/><text x="67.0711%" y="991.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="66.8211%" y="965" width="0.0309%" height="15" fill="rgb(236,179,52)" fg:x="6489" fg:w="3"/><text x="67.0711%" y="975.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="66.8211%" y="949" width="0.0309%" height="15" fill="rgb(213,23,39)" fg:x="6489" fg:w="3"/><text x="67.0711%" y="959.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="66.8211%" y="933" width="0.0309%" height="15" fill="rgb(238,48,10)" fg:x="6489" fg:w="3"/><text x="67.0711%" y="943.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="66.8211%" y="917" width="0.0309%" height="15" fill="rgb(251,196,23)" fg:x="6489" fg:w="3"/><text x="67.0711%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="66.8314%" y="901" width="0.0206%" height="15" fill="rgb(250,152,24)" fg:x="6490" fg:w="2"/><text x="67.0814%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="66.8314%" y="885" width="0.0206%" height="15" fill="rgb(209,150,17)" fg:x="6490" fg:w="2"/><text x="67.0814%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="66.8417%" y="869" width="0.0103%" height="15" fill="rgb(234,202,34)" fg:x="6491" fg:w="1"/><text x="67.0917%" y="879.50"></text></g><g><title>[unknown] (18 samples, 0.19%)</title><rect x="67.2021%" y="1029" width="0.1854%" height="15" fill="rgb(253,148,53)" fg:x="6526" fg:w="18"/><text x="67.4521%" y="1039.50"></text></g><g><title>[unknown] (15 samples, 0.15%)</title><rect x="67.2330%" y="1013" width="0.1545%" height="15" fill="rgb(218,129,16)" fg:x="6529" fg:w="15"/><text x="67.4830%" y="1023.50"></text></g><g><title>[unknown] (15 samples, 0.15%)</title><rect x="67.2330%" y="997" width="0.1545%" height="15" fill="rgb(216,85,19)" fg:x="6529" fg:w="15"/><text x="67.4830%" y="1007.50"></text></g><g><title>[unknown] (15 samples, 0.15%)</title><rect x="67.2330%" y="981" width="0.1545%" height="15" fill="rgb(235,228,7)" fg:x="6529" fg:w="15"/><text x="67.4830%" y="991.50"></text></g><g><title>[unknown] (14 samples, 0.14%)</title><rect x="67.2433%" y="965" width="0.1442%" height="15" fill="rgb(245,175,0)" fg:x="6530" fg:w="14"/><text x="67.4933%" y="975.50"></text></g><g><title>[unknown] (12 samples, 0.12%)</title><rect x="67.2639%" y="949" width="0.1236%" height="15" fill="rgb(208,168,36)" fg:x="6532" fg:w="12"/><text x="67.5139%" y="959.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="67.2845%" y="933" width="0.1030%" height="15" fill="rgb(246,171,24)" fg:x="6534" fg:w="10"/><text x="67.5345%" y="943.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="67.2845%" y="917" width="0.1030%" height="15" fill="rgb(215,142,24)" fg:x="6534" fg:w="10"/><text x="67.5345%" y="927.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="67.2845%" y="901" width="0.1030%" height="15" fill="rgb(250,187,7)" fg:x="6534" fg:w="10"/><text x="67.5345%" y="911.50"></text></g><g><title>[unknown] (9 samples, 0.09%)</title><rect x="67.2948%" y="885" width="0.0927%" height="15" fill="rgb(228,66,33)" fg:x="6535" fg:w="9"/><text x="67.5448%" y="895.50"></text></g><g><title>[unknown] (9 samples, 0.09%)</title><rect x="67.2948%" y="869" width="0.0927%" height="15" fill="rgb(234,215,21)" fg:x="6535" fg:w="9"/><text x="67.5448%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (109 samples, 1.12%)</title><rect x="66.3063%" y="1061" width="1.1224%" height="15" fill="rgb(222,191,20)" fg:x="6439" fg:w="109"/><text x="66.5563%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (56 samples, 0.58%)</title><rect x="66.8520%" y="1045" width="0.5767%" height="15" fill="rgb(245,79,54)" fg:x="6492" fg:w="56"/><text x="67.1020%" y="1055.50"></text></g><g><title>__memset_avx2_erms (4 samples, 0.04%)</title><rect x="67.3875%" y="1029" width="0.0412%" height="15" fill="rgb(240,10,37)" fg:x="6544" fg:w="4"/><text x="67.6375%" y="1039.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="67.3875%" y="1013" width="0.0412%" height="15" fill="rgb(214,192,32)" fg:x="6544" fg:w="4"/><text x="67.6375%" y="1023.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="67.3875%" y="997" width="0.0412%" height="15" fill="rgb(209,36,54)" fg:x="6544" fg:w="4"/><text x="67.6375%" y="1007.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="67.3875%" y="981" width="0.0412%" height="15" fill="rgb(220,10,11)" fg:x="6544" fg:w="4"/><text x="67.6375%" y="991.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="67.3875%" y="965" width="0.0412%" height="15" fill="rgb(221,106,17)" fg:x="6544" fg:w="4"/><text x="67.6375%" y="975.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="67.3875%" y="949" width="0.0412%" height="15" fill="rgb(251,142,44)" fg:x="6544" fg:w="4"/><text x="67.6375%" y="959.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="67.3978%" y="933" width="0.0309%" height="15" fill="rgb(238,13,15)" fg:x="6545" fg:w="3"/><text x="67.6478%" y="943.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="67.3978%" y="917" width="0.0309%" height="15" fill="rgb(208,107,27)" fg:x="6545" fg:w="3"/><text x="67.6478%" y="927.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="67.3978%" y="901" width="0.0309%" height="15" fill="rgb(205,136,37)" fg:x="6545" fg:w="3"/><text x="67.6478%" y="911.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="67.3978%" y="885" width="0.0309%" height="15" fill="rgb(250,205,27)" fg:x="6545" fg:w="3"/><text x="67.6478%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="67.4184%" y="869" width="0.0103%" height="15" fill="rgb(210,80,43)" fg:x="6547" fg:w="1"/><text x="67.6684%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="67.4184%" y="853" width="0.0103%" height="15" fill="rgb(247,160,36)" fg:x="6547" fg:w="1"/><text x="67.6684%" y="863.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::from_error (2 samples, 0.02%)</title><rect x="67.6964%" y="997" width="0.0206%" height="15" fill="rgb(234,13,49)" fg:x="6574" fg:w="2"/><text x="67.9464%" y="1007.50"></text></g><g><title>[unknown] (3,017 samples, 31.07%)</title><rect x="68.2628%" y="965" width="31.0679%" height="15" fill="rgb(234,122,0)" fg:x="6629" fg:w="3017"/><text x="68.5128%" y="975.50">[unknown]</text></g><g><title>[unknown] (2,945 samples, 30.33%)</title><rect x="69.0042%" y="949" width="30.3264%" height="15" fill="rgb(207,146,38)" fg:x="6701" fg:w="2945"/><text x="69.2542%" y="959.50">[unknown]</text></g><g><title>[unknown] (2,908 samples, 29.95%)</title><rect x="69.3852%" y="933" width="29.9454%" height="15" fill="rgb(207,177,25)" fg:x="6738" fg:w="2908"/><text x="69.6352%" y="943.50">[unknown]</text></g><g><title>[unknown] (2,894 samples, 29.80%)</title><rect x="69.5294%" y="917" width="29.8013%" height="15" fill="rgb(211,178,42)" fg:x="6752" fg:w="2894"/><text x="69.7794%" y="927.50">[unknown]</text></g><g><title>[unknown] (2,873 samples, 29.59%)</title><rect x="69.7456%" y="901" width="29.5850%" height="15" fill="rgb(230,69,54)" fg:x="6773" fg:w="2873"/><text x="69.9956%" y="911.50">[unknown]</text></g><g><title>[unknown] (2,792 samples, 28.75%)</title><rect x="70.5798%" y="885" width="28.7509%" height="15" fill="rgb(214,135,41)" fg:x="6854" fg:w="2792"/><text x="70.8298%" y="895.50">[unknown]</text></g><g><title>[unknown] (2,720 samples, 28.01%)</title><rect x="71.3212%" y="869" width="28.0095%" height="15" fill="rgb(237,67,25)" fg:x="6926" fg:w="2720"/><text x="71.5712%" y="879.50">[unknown]</text></g><g><title>[unknown] (2,345 samples, 24.15%)</title><rect x="75.1828%" y="853" width="24.1479%" height="15" fill="rgb(222,189,50)" fg:x="7301" fg:w="2345"/><text x="75.4328%" y="863.50">[unknown]</text></g><g><title>[unknown] (2,113 samples, 21.76%)</title><rect x="77.5718%" y="837" width="21.7588%" height="15" fill="rgb(245,148,34)" fg:x="7533" fg:w="2113"/><text x="77.8218%" y="847.50">[unknown]</text></g><g><title>[unknown] (1,772 samples, 18.25%)</title><rect x="81.0833%" y="821" width="18.2473%" height="15" fill="rgb(222,29,6)" fg:x="7874" fg:w="1772"/><text x="81.3333%" y="831.50">[unknown]</text></g><g><title>[unknown] (1,513 samples, 15.58%)</title><rect x="83.7504%" y="805" width="15.5803%" height="15" fill="rgb(221,189,43)" fg:x="8133" fg:w="1513"/><text x="84.0004%" y="815.50">[unknown]</text></g><g><title>[unknown] (1,360 samples, 14.00%)</title><rect x="85.3259%" y="789" width="14.0047%" height="15" fill="rgb(207,36,27)" fg:x="8286" fg:w="1360"/><text x="85.5759%" y="799.50">[unknown]</text></g><g><title>[unknown] (1,106 samples, 11.39%)</title><rect x="87.9415%" y="773" width="11.3891%" height="15" fill="rgb(217,90,24)" fg:x="8540" fg:w="1106"/><text x="88.1915%" y="783.50">[unknown]</text></g><g><title>[unknown] (969 samples, 9.98%)</title><rect x="89.3523%" y="757" width="9.9784%" height="15" fill="rgb(224,66,35)" fg:x="8677" fg:w="969"/><text x="89.6023%" y="767.50">[unknown]</text></g><g><title>[unknown] (773 samples, 7.96%)</title><rect x="91.3706%" y="741" width="7.9600%" height="15" fill="rgb(221,13,50)" fg:x="8873" fg:w="773"/><text x="91.6206%" y="751.50">[unknown]</text></g><g><title>[unknown] (658 samples, 6.78%)</title><rect x="92.5548%" y="725" width="6.7758%" height="15" fill="rgb(236,68,49)" fg:x="8988" fg:w="658"/><text x="92.8048%" y="735.50">[unknown]</text></g><g><title>[unknown] (567 samples, 5.84%)</title><rect x="93.4919%" y="709" width="5.8387%" height="15" fill="rgb(229,146,28)" fg:x="9079" fg:w="567"/><text x="93.7419%" y="719.50">[unknow..</text></g><g><title>[unknown] (359 samples, 3.70%)</title><rect x="95.6338%" y="693" width="3.6968%" height="15" fill="rgb(225,31,38)" fg:x="9287" fg:w="359"/><text x="95.8838%" y="703.50">[unk..</text></g><g><title>[unknown] (279 samples, 2.87%)</title><rect x="96.4576%" y="677" width="2.8730%" height="15" fill="rgb(250,208,3)" fg:x="9367" fg:w="279"/><text x="96.7076%" y="687.50">[u..</text></g><g><title>[unknown] (146 samples, 1.50%)</title><rect x="97.8272%" y="661" width="1.5034%" height="15" fill="rgb(246,54,23)" fg:x="9500" fg:w="146"/><text x="98.0772%" y="671.50"></text></g><g><title>[unknown] (92 samples, 0.95%)</title><rect x="98.3833%" y="645" width="0.9474%" height="15" fill="rgb(243,76,11)" fg:x="9554" fg:w="92"/><text x="98.6333%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.3204%" y="629" width="0.0103%" height="15" fill="rgb(245,21,50)" fg:x="9645" fg:w="1"/><text x="99.5704%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.3204%" y="613" width="0.0103%" height="15" fill="rgb(228,9,43)" fg:x="9645" fg:w="1"/><text x="99.5704%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.3204%" y="597" width="0.0103%" height="15" fill="rgb(208,100,47)" fg:x="9645" fg:w="1"/><text x="99.5704%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.3204%" y="581" width="0.0103%" height="15" fill="rgb(232,26,8)" fg:x="9645" fg:w="1"/><text x="99.5704%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.3204%" y="565" width="0.0103%" height="15" fill="rgb(216,166,38)" fg:x="9645" fg:w="1"/><text x="99.5704%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.3204%" y="549" width="0.0103%" height="15" fill="rgb(251,202,51)" fg:x="9645" fg:w="1"/><text x="99.5704%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.3204%" y="533" width="0.0103%" height="15" fill="rgb(254,216,34)" fg:x="9645" fg:w="1"/><text x="99.5704%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.3204%" y="517" width="0.0103%" height="15" fill="rgb(251,32,27)" fg:x="9645" fg:w="1"/><text x="99.5704%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.3204%" y="501" width="0.0103%" height="15" fill="rgb(208,127,28)" fg:x="9645" fg:w="1"/><text x="99.5704%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.3204%" y="485" width="0.0103%" height="15" fill="rgb(224,137,22)" fg:x="9645" fg:w="1"/><text x="99.5704%" y="495.50"></text></g><g><title>__libc_disable_asynccancel (10 samples, 0.10%)</title><rect x="99.3307%" y="965" width="0.1030%" height="15" fill="rgb(254,70,32)" fg:x="9646" fg:w="10"/><text x="99.5807%" y="975.50"></text></g><g><title>__GI___libc_write (3,094 samples, 31.86%)</title><rect x="67.7170%" y="997" width="31.8608%" height="15" fill="rgb(229,75,37)" fg:x="6576" fg:w="3094"/><text x="67.9670%" y="1007.50">__GI___libc_write</text></g><g><title>__GI___libc_write (3,090 samples, 31.82%)</title><rect x="67.7582%" y="981" width="31.8196%" height="15" fill="rgb(252,64,23)" fg:x="6580" fg:w="3090"/><text x="68.0082%" y="991.50">__GI___libc_write</text></g><g><title>__libc_enable_asynccancel (14 samples, 0.14%)</title><rect x="99.4336%" y="965" width="0.1442%" height="15" fill="rgb(232,162,48)" fg:x="9656" fg:w="14"/><text x="99.6836%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (9,461 samples, 97.43%)</title><rect x="2.2655%" y="1125" width="97.4256%" height="15" fill="rgb(246,160,12)" fg:x="220" fg:w="9461"/><text x="2.5155%" y="1135.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (9,461 samples, 97.43%)</title><rect x="2.2655%" y="1109" width="97.4256%" height="15" fill="rgb(247,166,0)" fg:x="220" fg:w="9461"/><text x="2.5155%" y="1119.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (9,461 samples, 97.43%)</title><rect x="2.2655%" y="1093" width="97.4256%" height="15" fill="rgb(249,219,21)" fg:x="220" fg:w="9461"/><text x="2.5155%" y="1103.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (9,460 samples, 97.42%)</title><rect x="2.2758%" y="1077" width="97.4153%" height="15" fill="rgb(205,209,3)" fg:x="221" fg:w="9460"/><text x="2.5258%" y="1087.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>std::io::Write::write_all (3,133 samples, 32.26%)</title><rect x="67.4287%" y="1061" width="32.2624%" height="15" fill="rgb(243,44,1)" fg:x="6548" fg:w="3133"/><text x="67.6787%" y="1071.50">std::io::Write::write_all</text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (3,110 samples, 32.03%)</title><rect x="67.6655%" y="1045" width="32.0255%" height="15" fill="rgb(206,159,16)" fg:x="6571" fg:w="3110"/><text x="67.9155%" y="1055.50">&lt;std::fs::File as std::io::Write&gt;::write</text></g><g><title>std::sys::unix::fs::File::write (3,110 samples, 32.03%)</title><rect x="67.6655%" y="1029" width="32.0255%" height="15" fill="rgb(244,77,30)" fg:x="6571" fg:w="3110"/><text x="67.9155%" y="1039.50">std::sys::unix::fs::File::write</text></g><g><title>std::sys::unix::fd::FileDesc::write (3,110 samples, 32.03%)</title><rect x="67.6655%" y="1013" width="32.0255%" height="15" fill="rgb(218,69,12)" fg:x="6571" fg:w="3110"/><text x="67.9155%" y="1023.50">std::sys::unix::fd::FileDesc::write</text></g><g><title>std::sys::unix::cvt (11 samples, 0.11%)</title><rect x="99.5778%" y="997" width="0.1133%" height="15" fill="rgb(212,87,7)" fg:x="9670" fg:w="11"/><text x="99.8278%" y="1007.50"></text></g><g><title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (11 samples, 0.11%)</title><rect x="99.5778%" y="981" width="0.1133%" height="15" fill="rgb(245,114,25)" fg:x="9670" fg:w="11"/><text x="99.8278%" y="991.50"></text></g><g><title>__sigaltstack (1 samples, 0.01%)</title><rect x="99.6911%" y="1093" width="0.0103%" height="15" fill="rgb(210,61,42)" fg:x="9681" fg:w="1"/><text x="99.9411%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.6911%" y="1077" width="0.0103%" height="15" fill="rgb(211,52,33)" fg:x="9681" fg:w="1"/><text x="99.9411%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.6911%" y="1061" width="0.0103%" height="15" fill="rgb(234,58,33)" fg:x="9681" fg:w="1"/><text x="99.9411%" y="1071.50"></text></g><g><title>__GI___clone (9,484 samples, 97.66%)</title><rect x="2.0595%" y="1173" width="97.6624%" height="15" fill="rgb(220,115,36)" fg:x="200" fg:w="9484"/><text x="2.3095%" y="1183.50">__GI___clone</text></g><g><title>start_thread (9,464 samples, 97.46%)</title><rect x="2.2655%" y="1157" width="97.4565%" height="15" fill="rgb(243,153,54)" fg:x="220" fg:w="9464"/><text x="2.5155%" y="1167.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (9,464 samples, 97.46%)</title><rect x="2.2655%" y="1141" width="97.4565%" height="15" fill="rgb(251,47,18)" fg:x="220" fg:w="9464"/><text x="2.5155%" y="1151.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (3 samples, 0.03%)</title><rect x="99.6911%" y="1125" width="0.0309%" height="15" fill="rgb(242,102,42)" fg:x="9681" fg:w="3"/><text x="99.9411%" y="1135.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (3 samples, 0.03%)</title><rect x="99.6911%" y="1109" width="0.0309%" height="15" fill="rgb(234,31,38)" fg:x="9681" fg:w="3"/><text x="99.9411%" y="1119.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (2 samples, 0.02%)</title><rect x="99.7014%" y="1093" width="0.0206%" height="15" fill="rgb(221,117,51)" fg:x="9682" fg:w="2"/><text x="99.9514%" y="1103.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (2 samples, 0.02%)</title><rect x="99.7014%" y="1077" width="0.0206%" height="15" fill="rgb(212,20,18)" fg:x="9682" fg:w="2"/><text x="99.9514%" y="1087.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.02%)</title><rect x="99.7014%" y="1061" width="0.0206%" height="15" fill="rgb(245,133,36)" fg:x="9682" fg:w="2"/><text x="99.9514%" y="1071.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.02%)</title><rect x="99.7014%" y="1045" width="0.0206%" height="15" fill="rgb(212,6,19)" fg:x="9682" fg:w="2"/><text x="99.9514%" y="1055.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.7014%" y="1029" width="0.0206%" height="15" fill="rgb(218,1,36)" fg:x="9682" fg:w="2"/><text x="99.9514%" y="1039.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.7014%" y="1013" width="0.0206%" height="15" fill="rgb(246,84,54)" fg:x="9682" fg:w="2"/><text x="99.9514%" y="1023.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.7014%" y="997" width="0.0206%" height="15" fill="rgb(242,110,6)" fg:x="9682" fg:w="2"/><text x="99.9514%" y="1007.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.7014%" y="981" width="0.0206%" height="15" fill="rgb(214,47,5)" fg:x="9682" fg:w="2"/><text x="99.9514%" y="991.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.7014%" y="965" width="0.0206%" height="15" fill="rgb(218,159,25)" fg:x="9682" fg:w="2"/><text x="99.9514%" y="975.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.7014%" y="949" width="0.0206%" height="15" fill="rgb(215,211,28)" fg:x="9682" fg:w="2"/><text x="99.9514%" y="959.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.7014%" y="933" width="0.0206%" height="15" fill="rgb(238,59,32)" fg:x="9682" fg:w="2"/><text x="99.9514%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.7014%" y="917" width="0.0206%" height="15" fill="rgb(226,82,3)" fg:x="9682" fg:w="2"/><text x="99.9514%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.7014%" y="901" width="0.0206%" height="15" fill="rgb(240,164,32)" fg:x="9682" fg:w="2"/><text x="99.9514%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7117%" y="885" width="0.0103%" height="15" fill="rgb(232,46,7)" fg:x="9683" fg:w="1"/><text x="99.9617%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7117%" y="869" width="0.0103%" height="15" fill="rgb(229,129,53)" fg:x="9683" fg:w="1"/><text x="99.9617%" y="879.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="99.7220%" y="1173" width="0.0103%" height="15" fill="rgb(234,188,29)" fg:x="9684" fg:w="1"/><text x="99.9720%" y="1183.50"></text></g><g><title>&lt;std::net::tcp::Incoming as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="99.7323%" y="997" width="0.0206%" height="15" fill="rgb(246,141,4)" fg:x="9685" fg:w="2"/><text x="99.9823%" y="1007.50"></text></g><g><title>std::net::tcp::TcpListener::accept (2 samples, 0.02%)</title><rect x="99.7323%" y="981" width="0.0206%" height="15" fill="rgb(229,23,39)" fg:x="9685" fg:w="2"/><text x="99.9823%" y="991.50"></text></g><g><title>std::sys_common::net::TcpListener::accept (2 samples, 0.02%)</title><rect x="99.7323%" y="965" width="0.0206%" height="15" fill="rgb(206,12,3)" fg:x="9685" fg:w="2"/><text x="99.9823%" y="975.50"></text></g><g><title>std::sys::unix::net::Socket::accept (2 samples, 0.02%)</title><rect x="99.7323%" y="949" width="0.0206%" height="15" fill="rgb(252,226,20)" fg:x="9685" fg:w="2"/><text x="99.9823%" y="959.50"></text></g><g><title>std::sys::unix::cvt_r (2 samples, 0.02%)</title><rect x="99.7323%" y="933" width="0.0206%" height="15" fill="rgb(216,123,35)" fg:x="9685" fg:w="2"/><text x="99.9823%" y="943.50"></text></g><g><title>std::sys::unix::net::Socket::accept::{{closure}} (2 samples, 0.02%)</title><rect x="99.7323%" y="917" width="0.0206%" height="15" fill="rgb(212,68,40)" fg:x="9685" fg:w="2"/><text x="99.9823%" y="927.50"></text></g><g><title>accept4 (2 samples, 0.02%)</title><rect x="99.7323%" y="901" width="0.0206%" height="15" fill="rgb(254,125,32)" fg:x="9685" fg:w="2"/><text x="99.9823%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.7323%" y="885" width="0.0206%" height="15" fill="rgb(253,97,22)" fg:x="9685" fg:w="2"/><text x="99.9823%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.7323%" y="869" width="0.0206%" height="15" fill="rgb(241,101,14)" fg:x="9685" fg:w="2"/><text x="99.9823%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.7323%" y="853" width="0.0206%" height="15" fill="rgb(238,103,29)" fg:x="9685" fg:w="2"/><text x="99.9823%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.7323%" y="837" width="0.0206%" height="15" fill="rgb(233,195,47)" fg:x="9685" fg:w="2"/><text x="99.9823%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.7323%" y="821" width="0.0206%" height="15" fill="rgb(246,218,30)" fg:x="9685" fg:w="2"/><text x="99.9823%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.7323%" y="805" width="0.0206%" height="15" fill="rgb(219,145,47)" fg:x="9685" fg:w="2"/><text x="99.9823%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.7323%" y="789" width="0.0206%" height="15" fill="rgb(243,12,26)" fg:x="9685" fg:w="2"/><text x="99.9823%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.7323%" y="773" width="0.0206%" height="15" fill="rgb(214,87,16)" fg:x="9685" fg:w="2"/><text x="99.9823%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.7323%" y="757" width="0.0206%" height="15" fill="rgb(208,99,42)" fg:x="9685" fg:w="2"/><text x="99.9823%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7426%" y="741" width="0.0103%" height="15" fill="rgb(253,99,2)" fg:x="9686" fg:w="1"/><text x="99.9926%" y="751.50"></text></g><g><title>std::fs::OpenOptions::_open (1 samples, 0.01%)</title><rect x="99.7529%" y="997" width="0.0103%" height="15" fill="rgb(220,168,23)" fg:x="9687" fg:w="1"/><text x="100.0029%" y="1007.50"></text></g><g><title>std::sys::unix::fs::File::open (1 samples, 0.01%)</title><rect x="99.7529%" y="981" width="0.0103%" height="15" fill="rgb(242,38,24)" fg:x="9687" fg:w="1"/><text x="100.0029%" y="991.50"></text></g><g><title>std::sys::unix::fs::File::open_c (1 samples, 0.01%)</title><rect x="99.7529%" y="965" width="0.0103%" height="15" fill="rgb(225,182,9)" fg:x="9687" fg:w="1"/><text x="100.0029%" y="975.50"></text></g><g><title>std::sys::unix::cvt_r (1 samples, 0.01%)</title><rect x="99.7529%" y="949" width="0.0103%" height="15" fill="rgb(243,178,37)" fg:x="9687" fg:w="1"/><text x="100.0029%" y="959.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (1 samples, 0.01%)</title><rect x="99.7529%" y="933" width="0.0103%" height="15" fill="rgb(232,139,19)" fg:x="9687" fg:w="1"/><text x="100.0029%" y="943.50"></text></g><g><title>__libc_open64 (1 samples, 0.01%)</title><rect x="99.7529%" y="917" width="0.0103%" height="15" fill="rgb(225,201,24)" fg:x="9687" fg:w="1"/><text x="100.0029%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7529%" y="901" width="0.0103%" height="15" fill="rgb(221,47,46)" fg:x="9687" fg:w="1"/><text x="100.0029%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7529%" y="885" width="0.0103%" height="15" fill="rgb(249,23,13)" fg:x="9687" fg:w="1"/><text x="100.0029%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7529%" y="869" width="0.0103%" height="15" fill="rgb(219,9,5)" fg:x="9687" fg:w="1"/><text x="100.0029%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7529%" y="853" width="0.0103%" height="15" fill="rgb(254,171,16)" fg:x="9687" fg:w="1"/><text x="100.0029%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7529%" y="837" width="0.0103%" height="15" fill="rgb(230,171,20)" fg:x="9687" fg:w="1"/><text x="100.0029%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7529%" y="821" width="0.0103%" height="15" fill="rgb(210,71,41)" fg:x="9687" fg:w="1"/><text x="100.0029%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7529%" y="805" width="0.0103%" height="15" fill="rgb(206,173,20)" fg:x="9687" fg:w="1"/><text x="100.0029%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7529%" y="789" width="0.0103%" height="15" fill="rgb(233,88,34)" fg:x="9687" fg:w="1"/><text x="100.0029%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7529%" y="773" width="0.0103%" height="15" fill="rgb(223,209,46)" fg:x="9687" fg:w="1"/><text x="100.0029%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7529%" y="757" width="0.0103%" height="15" fill="rgb(250,43,18)" fg:x="9687" fg:w="1"/><text x="100.0029%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7529%" y="741" width="0.0103%" height="15" fill="rgb(208,13,10)" fg:x="9687" fg:w="1"/><text x="100.0029%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7529%" y="725" width="0.0103%" height="15" fill="rgb(212,200,36)" fg:x="9687" fg:w="1"/><text x="100.0029%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7529%" y="709" width="0.0103%" height="15" fill="rgb(225,90,30)" fg:x="9687" fg:w="1"/><text x="100.0029%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7529%" y="693" width="0.0103%" height="15" fill="rgb(236,182,39)" fg:x="9687" fg:w="1"/><text x="100.0029%" y="703.50"></text></g><g><title>__libc_start_main (13 samples, 0.13%)</title><rect x="99.7323%" y="1157" width="0.1339%" height="15" fill="rgb(212,144,35)" fg:x="9685" fg:w="13"/><text x="99.9823%" y="1167.50"></text></g><g><title>main (13 samples, 0.13%)</title><rect x="99.7323%" y="1141" width="0.1339%" height="15" fill="rgb(228,63,44)" fg:x="9685" fg:w="13"/><text x="99.9823%" y="1151.50"></text></g><g><title>std::rt::lang_start_internal (13 samples, 0.13%)</title><rect x="99.7323%" y="1125" width="0.1339%" height="15" fill="rgb(228,109,6)" fg:x="9685" fg:w="13"/><text x="99.9823%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.13%)</title><rect x="99.7323%" y="1109" width="0.1339%" height="15" fill="rgb(238,117,24)" fg:x="9685" fg:w="13"/><text x="99.9823%" y="1119.50"></text></g><g><title>std::panicking::try (13 samples, 0.13%)</title><rect x="99.7323%" y="1093" width="0.1339%" height="15" fill="rgb(242,26,26)" fg:x="9685" fg:w="13"/><text x="99.9823%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.13%)</title><rect x="99.7323%" y="1077" width="0.1339%" height="15" fill="rgb(221,92,48)" fg:x="9685" fg:w="13"/><text x="99.9823%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (13 samples, 0.13%)</title><rect x="99.7323%" y="1061" width="0.1339%" height="15" fill="rgb(209,209,32)" fg:x="9685" fg:w="13"/><text x="99.9823%" y="1071.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (13 samples, 0.13%)</title><rect x="99.7323%" y="1045" width="0.1339%" height="15" fill="rgb(221,70,22)" fg:x="9685" fg:w="13"/><text x="99.9823%" y="1055.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (13 samples, 0.13%)</title><rect x="99.7323%" y="1029" width="0.1339%" height="15" fill="rgb(248,145,5)" fg:x="9685" fg:w="13"/><text x="99.9823%" y="1039.50"></text></g><g><title>advent_uniq::main (13 samples, 0.13%)</title><rect x="99.7323%" y="1013" width="0.1339%" height="15" fill="rgb(226,116,26)" fg:x="9685" fg:w="13"/><text x="99.9823%" y="1023.50"></text></g><g><title>std::thread::sleep (10 samples, 0.10%)</title><rect x="99.7632%" y="997" width="0.1030%" height="15" fill="rgb(244,5,17)" fg:x="9688" fg:w="10"/><text x="100.0132%" y="1007.50"></text></g><g><title>std::sys::unix::thread::Thread::sleep (10 samples, 0.10%)</title><rect x="99.7632%" y="981" width="0.1030%" height="15" fill="rgb(252,159,33)" fg:x="9688" fg:w="10"/><text x="100.0132%" y="991.50"></text></g><g><title>__GI___nanosleep (10 samples, 0.10%)</title><rect x="99.7632%" y="965" width="0.1030%" height="15" fill="rgb(206,71,0)" fg:x="9688" fg:w="10"/><text x="100.0132%" y="975.50"></text></g><g><title>__GI___clock_nanosleep (10 samples, 0.10%)</title><rect x="99.7632%" y="949" width="0.1030%" height="15" fill="rgb(233,118,54)" fg:x="9688" fg:w="10"/><text x="100.0132%" y="959.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="99.7632%" y="933" width="0.1030%" height="15" fill="rgb(234,83,48)" fg:x="9688" fg:w="10"/><text x="100.0132%" y="943.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="99.7632%" y="917" width="0.1030%" height="15" fill="rgb(228,3,54)" fg:x="9688" fg:w="10"/><text x="100.0132%" y="927.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="99.7632%" y="901" width="0.1030%" height="15" fill="rgb(226,155,13)" fg:x="9688" fg:w="10"/><text x="100.0132%" y="911.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="99.7632%" y="885" width="0.1030%" height="15" fill="rgb(241,28,37)" fg:x="9688" fg:w="10"/><text x="100.0132%" y="895.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="99.7632%" y="869" width="0.1030%" height="15" fill="rgb(233,93,10)" fg:x="9688" fg:w="10"/><text x="100.0132%" y="879.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="99.7632%" y="853" width="0.1030%" height="15" fill="rgb(225,113,19)" fg:x="9688" fg:w="10"/><text x="100.0132%" y="863.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="99.7632%" y="837" width="0.1030%" height="15" fill="rgb(241,2,18)" fg:x="9688" fg:w="10"/><text x="100.0132%" y="847.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="99.7632%" y="821" width="0.1030%" height="15" fill="rgb(228,207,21)" fg:x="9688" fg:w="10"/><text x="100.0132%" y="831.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="99.7632%" y="805" width="0.1030%" height="15" fill="rgb(213,211,35)" fg:x="9688" fg:w="10"/><text x="100.0132%" y="815.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="99.7632%" y="789" width="0.1030%" height="15" fill="rgb(209,83,10)" fg:x="9688" fg:w="10"/><text x="100.0132%" y="799.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="99.7632%" y="773" width="0.1030%" height="15" fill="rgb(209,164,1)" fg:x="9688" fg:w="10"/><text x="100.0132%" y="783.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="99.7632%" y="757" width="0.1030%" height="15" fill="rgb(213,184,43)" fg:x="9688" fg:w="10"/><text x="100.0132%" y="767.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="99.7632%" y="741" width="0.1030%" height="15" fill="rgb(231,61,34)" fg:x="9688" fg:w="10"/><text x="100.0132%" y="751.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="99.7632%" y="725" width="0.1030%" height="15" fill="rgb(235,75,3)" fg:x="9688" fg:w="10"/><text x="100.0132%" y="735.50"></text></g><g><title>_start (14 samples, 0.14%)</title><rect x="99.7323%" y="1173" width="0.1442%" height="15" fill="rgb(220,106,47)" fg:x="9685" fg:w="14"/><text x="99.9823%" y="1183.50"></text></g><g><title>_dl_start (1 samples, 0.01%)</title><rect x="99.8661%" y="1157" width="0.0103%" height="15" fill="rgb(210,196,33)" fg:x="9698" fg:w="1"/><text x="100.1161%" y="1167.50"></text></g><g><title>_dl_start_final (1 samples, 0.01%)</title><rect x="99.8661%" y="1141" width="0.0103%" height="15" fill="rgb(229,154,42)" fg:x="9698" fg:w="1"/><text x="100.1161%" y="1151.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.01%)</title><rect x="99.8661%" y="1125" width="0.0103%" height="15" fill="rgb(228,114,26)" fg:x="9698" fg:w="1"/><text x="100.1161%" y="1135.50"></text></g><g><title>dl_main (1 samples, 0.01%)</title><rect x="99.8661%" y="1109" width="0.0103%" height="15" fill="rgb(208,144,1)" fg:x="9698" fg:w="1"/><text x="100.1161%" y="1119.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.01%)</title><rect x="99.8661%" y="1093" width="0.0103%" height="15" fill="rgb(239,112,37)" fg:x="9698" fg:w="1"/><text x="100.1161%" y="1103.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.01%)</title><rect x="99.8661%" y="1077" width="0.0103%" height="15" fill="rgb(210,96,50)" fg:x="9698" fg:w="1"/><text x="100.1161%" y="1087.50"></text></g><g><title>openaux (1 samples, 0.01%)</title><rect x="99.8661%" y="1061" width="0.0103%" height="15" fill="rgb(222,178,2)" fg:x="9698" fg:w="1"/><text x="100.1161%" y="1071.50"></text></g><g><title>_dl_map_object (1 samples, 0.01%)</title><rect x="99.8661%" y="1045" width="0.0103%" height="15" fill="rgb(226,74,18)" fg:x="9698" fg:w="1"/><text x="100.1161%" y="1055.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.01%)</title><rect x="99.8661%" y="1029" width="0.0103%" height="15" fill="rgb(225,67,54)" fg:x="9698" fg:w="1"/><text x="100.1161%" y="1039.50"></text></g><g><title>_dl_map_segments (1 samples, 0.01%)</title><rect x="99.8661%" y="1013" width="0.0103%" height="15" fill="rgb(251,92,32)" fg:x="9698" fg:w="1"/><text x="100.1161%" y="1023.50"></text></g><g><title>__mmap64 (1 samples, 0.01%)</title><rect x="99.8661%" y="997" width="0.0103%" height="15" fill="rgb(228,149,22)" fg:x="9698" fg:w="1"/><text x="100.1161%" y="1007.50"></text></g><g><title>__mmap64 (1 samples, 0.01%)</title><rect x="99.8661%" y="981" width="0.0103%" height="15" fill="rgb(243,54,13)" fg:x="9698" fg:w="1"/><text x="100.1161%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8661%" y="965" width="0.0103%" height="15" fill="rgb(243,180,28)" fg:x="9698" fg:w="1"/><text x="100.1161%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8661%" y="949" width="0.0103%" height="15" fill="rgb(208,167,24)" fg:x="9698" fg:w="1"/><text x="100.1161%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8661%" y="933" width="0.0103%" height="15" fill="rgb(245,73,45)" fg:x="9698" fg:w="1"/><text x="100.1161%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8661%" y="917" width="0.0103%" height="15" fill="rgb(237,203,48)" fg:x="9698" fg:w="1"/><text x="100.1161%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8661%" y="901" width="0.0103%" height="15" fill="rgb(211,197,16)" fg:x="9698" fg:w="1"/><text x="100.1161%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8661%" y="885" width="0.0103%" height="15" fill="rgb(243,99,51)" fg:x="9698" fg:w="1"/><text x="100.1161%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8661%" y="869" width="0.0103%" height="15" fill="rgb(215,123,29)" fg:x="9698" fg:w="1"/><text x="100.1161%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8661%" y="853" width="0.0103%" height="15" fill="rgb(239,186,37)" fg:x="9698" fg:w="1"/><text x="100.1161%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8661%" y="837" width="0.0103%" height="15" fill="rgb(252,136,39)" fg:x="9698" fg:w="1"/><text x="100.1161%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8661%" y="821" width="0.0103%" height="15" fill="rgb(223,213,32)" fg:x="9698" fg:w="1"/><text x="100.1161%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8661%" y="805" width="0.0103%" height="15" fill="rgb(233,115,5)" fg:x="9698" fg:w="1"/><text x="100.1161%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8661%" y="789" width="0.0103%" height="15" fill="rgb(207,226,44)" fg:x="9698" fg:w="1"/><text x="100.1161%" y="799.50"></text></g><g><title>advent-uniq (9,706 samples, 99.95%)</title><rect x="0.0000%" y="1189" width="99.9485%" height="15" fill="rgb(208,126,0)" fg:x="0" fg:w="9706"/><text x="0.2500%" y="1199.50">advent-uniq</text></g><g><title>core::str::converts::from_utf8 (7 samples, 0.07%)</title><rect x="99.8764%" y="1173" width="0.0721%" height="15" fill="rgb(244,66,21)" fg:x="9699" fg:w="7"/><text x="100.1264%" y="1183.50"></text></g><g><title>all (9,711 samples, 100%)</title><rect x="0.0000%" y="1205" width="100.0000%" height="15" fill="rgb(222,97,12)" fg:x="0" fg:w="9711"/><text x="0.2500%" y="1215.50"></text></g><g><title>perf (5 samples, 0.05%)</title><rect x="99.9485%" y="1189" width="0.0515%" height="15" fill="rgb(219,213,19)" fg:x="9706" fg:w="5"/><text x="100.1985%" y="1199.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9485%" y="1173" width="0.0515%" height="15" fill="rgb(252,169,30)" fg:x="9706" fg:w="5"/><text x="100.1985%" y="1183.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9485%" y="1157" width="0.0515%" height="15" fill="rgb(206,32,51)" fg:x="9706" fg:w="5"/><text x="100.1985%" y="1167.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9485%" y="1141" width="0.0515%" height="15" fill="rgb(250,172,42)" fg:x="9706" fg:w="5"/><text x="100.1985%" y="1151.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9485%" y="1125" width="0.0515%" height="15" fill="rgb(209,34,43)" fg:x="9706" fg:w="5"/><text x="100.1985%" y="1135.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9485%" y="1109" width="0.0515%" height="15" fill="rgb(223,11,35)" fg:x="9706" fg:w="5"/><text x="100.1985%" y="1119.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9485%" y="1093" width="0.0515%" height="15" fill="rgb(251,219,26)" fg:x="9706" fg:w="5"/><text x="100.1985%" y="1103.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9485%" y="1077" width="0.0515%" height="15" fill="rgb(231,119,3)" fg:x="9706" fg:w="5"/><text x="100.1985%" y="1087.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9485%" y="1061" width="0.0515%" height="15" fill="rgb(216,97,11)" fg:x="9706" fg:w="5"/><text x="100.1985%" y="1071.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9485%" y="1045" width="0.0515%" height="15" fill="rgb(223,59,9)" fg:x="9706" fg:w="5"/><text x="100.1985%" y="1055.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9485%" y="1029" width="0.0515%" height="15" fill="rgb(233,93,31)" fg:x="9706" fg:w="5"/><text x="100.1985%" y="1039.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9485%" y="1013" width="0.0515%" height="15" fill="rgb(239,81,33)" fg:x="9706" fg:w="5"/><text x="100.1985%" y="1023.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9485%" y="997" width="0.0515%" height="15" fill="rgb(213,120,34)" fg:x="9706" fg:w="5"/><text x="100.1985%" y="1007.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9485%" y="981" width="0.0515%" height="15" fill="rgb(243,49,53)" fg:x="9706" fg:w="5"/><text x="100.1985%" y="991.50"></text></g></svg></svg>